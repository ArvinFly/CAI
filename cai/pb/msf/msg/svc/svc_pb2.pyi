"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
from builtins import (
    bool,
    bytes,
    int,
)

from cai.pb.im.msg.msg_body.msg_body_pb2 import (
    MsgBody,
)

from cai.pb.im.msg.msg_head.msg_head_pb2 import (
    InstCtrl,
)

from cai.pb.im.msg.receipt.receipt_pb2 import (
    ReceiptReq,
    ReceiptResp,
)

from cai.pb.msf.msg.comm.comm_pb2 import (
    AppShareInfo,
    ContentHead,
    Msg,
    UinPairMsg,
)

from cai.pb.msf.msg.ctrl.ctrl_pb2 import (
    MsgCtrl,
)

from google.protobuf.descriptor import (
    Descriptor,
    FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer,
)

from google.protobuf.message import (
    Message,
)

from typing import (
    Iterable,
    Optional,
    Text,
)

from typing_extensions import (
    Literal,
)


DESCRIPTOR: FileDescriptor = ...

class AccostTmp(Message):
    DESCRIPTOR: Descriptor = ...
    TOUIN_FIELD_NUMBER: int
    SIG_FIELD_NUMBER: int
    REPLY_FIELD_NUMBER: int
    toUin: int = ...
    sig: bytes = ...
    reply: bool = ...

    def __init__(self,
        *,
        toUin : Optional[int] = ...,
        sig : Optional[bytes] = ...,
        reply : Optional[bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"reply",b"reply",u"sig",b"sig",u"toUin",b"toUin"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"reply",b"reply",u"sig",b"sig",u"toUin",b"toUin"]) -> None: ...

class AddressListTmp(Message):
    DESCRIPTOR: Descriptor = ...
    FROMPHONE_FIELD_NUMBER: int
    TOPHONE_FIELD_NUMBER: int
    TOUIN_FIELD_NUMBER: int
    SIG_FIELD_NUMBER: int
    FROMCONTACTSIZE_FIELD_NUMBER: int
    fromPhone: Text = ...
    toPhone: Text = ...
    toUin: int = ...
    sig: bytes = ...
    fromContactSize: int = ...

    def __init__(self,
        *,
        fromPhone : Optional[Text] = ...,
        toPhone : Optional[Text] = ...,
        toUin : Optional[int] = ...,
        sig : Optional[bytes] = ...,
        fromContactSize : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"fromContactSize",b"fromContactSize",u"fromPhone",b"fromPhone",u"sig",b"sig",u"toPhone",b"toPhone",u"toUin",b"toUin"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"fromContactSize",b"fromContactSize",u"fromPhone",b"fromPhone",u"sig",b"sig",u"toPhone",b"toPhone",u"toUin",b"toUin"]) -> None: ...

class AuthTmp(Message):
    DESCRIPTOR: Descriptor = ...
    TOUIN_FIELD_NUMBER: int
    SIG_FIELD_NUMBER: int
    toUin: int = ...
    sig: bytes = ...

    def __init__(self,
        *,
        toUin : Optional[int] = ...,
        sig : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"sig",b"sig",u"toUin",b"toUin"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"sig",b"sig",u"toUin",b"toUin"]) -> None: ...

class BsnsTmp(Message):
    DESCRIPTOR: Descriptor = ...
    TOUIN_FIELD_NUMBER: int
    SIG_FIELD_NUMBER: int
    toUin: int = ...
    sig: bytes = ...

    def __init__(self,
        *,
        toUin : Optional[int] = ...,
        sig : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"sig",b"sig",u"toUin",b"toUin"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"sig",b"sig",u"toUin",b"toUin"]) -> None: ...

class BusinessWPATmp(Message):
    DESCRIPTOR: Descriptor = ...
    TOUIN_FIELD_NUMBER: int
    SIG_FIELD_NUMBER: int
    SIGT_FIELD_NUMBER: int
    toUin: int = ...
    sig: bytes = ...
    sigt: bytes = ...

    def __init__(self,
        *,
        toUin : Optional[int] = ...,
        sig : Optional[bytes] = ...,
        sigt : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"sig",b"sig",u"sigt",b"sigt",u"toUin",b"toUin"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"sig",b"sig",u"sigt",b"sigt",u"toUin",b"toUin"]) -> None: ...

class C2C(Message):
    DESCRIPTOR: Descriptor = ...
    TOUIN_FIELD_NUMBER: int
    toUin: int = ...

    def __init__(self,
        *,
        toUin : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"toUin",b"toUin"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"toUin",b"toUin"]) -> None: ...

class CommTmp(Message):
    DESCRIPTOR: Descriptor = ...
    TOUIN_FIELD_NUMBER: int
    C2CTYPE_FIELD_NUMBER: int
    SVRTYPE_FIELD_NUMBER: int
    SIG_FIELD_NUMBER: int
    RESERVED_FIELD_NUMBER: int
    toUin: int = ...
    c2CType: int = ...
    svrType: int = ...
    sig: bytes = ...
    reserved: bytes = ...

    def __init__(self,
        *,
        toUin : Optional[int] = ...,
        c2CType : Optional[int] = ...,
        svrType : Optional[int] = ...,
        sig : Optional[bytes] = ...,
        reserved : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"c2CType",b"c2CType",u"reserved",b"reserved",u"sig",b"sig",u"svrType",b"svrType",u"toUin",b"toUin"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"c2CType",b"c2CType",u"reserved",b"reserved",u"sig",b"sig",u"svrType",b"svrType",u"toUin",b"toUin"]) -> None: ...

class Dis(Message):
    DESCRIPTOR: Descriptor = ...
    DISUIN_FIELD_NUMBER: int
    disUin: int = ...

    def __init__(self,
        *,
        disUin : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"disUin",b"disUin"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"disUin",b"disUin"]) -> None: ...

class DisTmp(Message):
    DESCRIPTOR: Descriptor = ...
    DISUIN_FIELD_NUMBER: int
    TOUIN_FIELD_NUMBER: int
    disUin: int = ...
    toUin: int = ...

    def __init__(self,
        *,
        disUin : Optional[int] = ...,
        toUin : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"disUin",b"disUin",u"toUin",b"toUin"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"disUin",b"disUin",u"toUin",b"toUin"]) -> None: ...

class Grp(Message):
    DESCRIPTOR: Descriptor = ...
    GROUPCODE_FIELD_NUMBER: int
    groupCode: int = ...

    def __init__(self,
        *,
        groupCode : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"groupCode",b"groupCode"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"groupCode",b"groupCode"]) -> None: ...

class GrpTmp(Message):
    DESCRIPTOR: Descriptor = ...
    GROUPUIN_FIELD_NUMBER: int
    TOUIN_FIELD_NUMBER: int
    groupUin: int = ...
    toUin: int = ...

    def __init__(self,
        *,
        groupUin : Optional[int] = ...,
        toUin : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"groupUin",b"groupUin",u"toUin",b"toUin"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"groupUin",b"groupUin",u"toUin",b"toUin"]) -> None: ...

class MsgSendInfo(Message):
    DESCRIPTOR: Descriptor = ...
    RECEIVER_FIELD_NUMBER: int
    receiver: int = ...

    def __init__(self,
        *,
        receiver : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"receiver",b"receiver"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"receiver",b"receiver"]) -> None: ...

class MultiMsgAssist(Message):
    DESCRIPTOR: Descriptor = ...
    REPEATEDROUTING_FIELD_NUMBER: int
    USE_FIELD_NUMBER: int
    TEMPID_FIELD_NUMBER: int
    VEDIOLEN_FIELD_NUMBER: int
    REDBAGID_FIELD_NUMBER: int
    REDBAGAMOUNT_FIELD_NUMBER: int
    HASREADBAG_FIELD_NUMBER: int
    HASVEDIO_FIELD_NUMBER: int
    use: int = ...
    tempId: int = ...
    vedioLen: int = ...
    redbagId: bytes = ...
    redbagAmount: int = ...
    hasReadbag: int = ...
    hasVedio: int = ...

    @property
    def repeatedRouting(self) -> RepeatedCompositeFieldContainer[RoutingHead]: ...

    def __init__(self,
        *,
        repeatedRouting : Optional[Iterable[RoutingHead]] = ...,
        use : Optional[int] = ...,
        tempId : Optional[int] = ...,
        vedioLen : Optional[int] = ...,
        redbagId : Optional[bytes] = ...,
        redbagAmount : Optional[int] = ...,
        hasReadbag : Optional[int] = ...,
        hasVedio : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"hasReadbag",b"hasReadbag",u"hasVedio",b"hasVedio",u"redbagAmount",b"redbagAmount",u"redbagId",b"redbagId",u"tempId",b"tempId",u"use",b"use",u"vedioLen",b"vedioLen"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"hasReadbag",b"hasReadbag",u"hasVedio",b"hasVedio",u"redbagAmount",b"redbagAmount",u"redbagId",b"redbagId",u"repeatedRouting",b"repeatedRouting",u"tempId",b"tempId",u"use",b"use",u"vedioLen",b"vedioLen"]) -> None: ...

class NearByAssistantTmp(Message):
    DESCRIPTOR: Descriptor = ...
    TOUIN_FIELD_NUMBER: int
    SIG_FIELD_NUMBER: int
    REPLY_FIELD_NUMBER: int
    toUin: int = ...
    sig: bytes = ...
    reply: bool = ...

    def __init__(self,
        *,
        toUin : Optional[int] = ...,
        sig : Optional[bytes] = ...,
        reply : Optional[bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"reply",b"reply",u"sig",b"sig",u"toUin",b"toUin"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"reply",b"reply",u"sig",b"sig",u"toUin",b"toUin"]) -> None: ...

class NearByDatingTmp(Message):
    DESCRIPTOR: Descriptor = ...
    TOUIN_FIELD_NUMBER: int
    SIG_FIELD_NUMBER: int
    REPLY_FIELD_NUMBER: int
    toUin: int = ...
    sig: bytes = ...
    reply: bool = ...

    def __init__(self,
        *,
        toUin : Optional[int] = ...,
        sig : Optional[bytes] = ...,
        reply : Optional[bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"reply",b"reply",u"sig",b"sig",u"toUin",b"toUin"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"reply",b"reply",u"sig",b"sig",u"toUin",b"toUin"]) -> None: ...

class PbBindUinGetMsgReq(Message):
    DESCRIPTOR: Descriptor = ...
    BINDUIN_FIELD_NUMBER: int
    BINDUINSIG_FIELD_NUMBER: int
    SYNCFLAG_FIELD_NUMBER: int
    SYNCCOOKIE_FIELD_NUMBER: int
    bindUin: int = ...
    bindUinSig: bytes = ...
    syncFlag: int = ...
    syncCookie: bytes = ...

    def __init__(self,
        *,
        bindUin : Optional[int] = ...,
        bindUinSig : Optional[bytes] = ...,
        syncFlag : Optional[int] = ...,
        syncCookie : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"bindUin",b"bindUin",u"bindUinSig",b"bindUinSig",u"syncCookie",b"syncCookie",u"syncFlag",b"syncFlag"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"bindUin",b"bindUin",u"bindUinSig",b"bindUinSig",u"syncCookie",b"syncCookie",u"syncFlag",b"syncFlag"]) -> None: ...

class PbBindUinMsgReadedConfirmReq(Message):
    DESCRIPTOR: Descriptor = ...
    SYNCCOOKIE_FIELD_NUMBER: int
    BINDUIN_FIELD_NUMBER: int
    syncCookie: bytes = ...
    bindUin: int = ...

    def __init__(self,
        *,
        syncCookie : Optional[bytes] = ...,
        bindUin : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"bindUin",b"bindUin",u"syncCookie",b"syncCookie"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"bindUin",b"bindUin",u"syncCookie",b"syncCookie"]) -> None: ...

class PbBindUinMsgReadedConfirmResp(Message):
    DESCRIPTOR: Descriptor = ...
    RESULT_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    SYNCCOOKIE_FIELD_NUMBER: int
    BINDUIN_FIELD_NUMBER: int
    result: int = ...
    errmsg: Text = ...
    syncCookie: bytes = ...
    bindUin: int = ...

    def __init__(self,
        *,
        result : Optional[int] = ...,
        errmsg : Optional[Text] = ...,
        syncCookie : Optional[bytes] = ...,
        bindUin : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"bindUin",b"bindUin",u"errmsg",b"errmsg",u"result",b"result",u"syncCookie",b"syncCookie"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"bindUin",b"bindUin",u"errmsg",b"errmsg",u"result",b"result",u"syncCookie",b"syncCookie"]) -> None: ...

class PbBindUinUnReadMsgNumReq(Message):
    DESCRIPTOR: Descriptor = ...
    BINDUIN_FIELD_NUMBER: int
    SYNCCOOKIE_FIELD_NUMBER: int
    bindUin: int = ...
    syncCookie: bytes = ...

    def __init__(self,
        *,
        bindUin : Optional[int] = ...,
        syncCookie : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"bindUin",b"bindUin",u"syncCookie",b"syncCookie"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"bindUin",b"bindUin",u"syncCookie",b"syncCookie"]) -> None: ...

class PbBindUinUnReadMsgNumResp(Message):
    DESCRIPTOR: Descriptor = ...
    RESULT_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    BINDUIN_FIELD_NUMBER: int
    NUM_FIELD_NUMBER: int
    result: int = ...
    errmsg: Text = ...
    bindUin: int = ...
    num: int = ...

    def __init__(self,
        *,
        result : Optional[int] = ...,
        errmsg : Optional[Text] = ...,
        bindUin : Optional[int] = ...,
        num : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"bindUin",b"bindUin",u"errmsg",b"errmsg",u"num",b"num",u"result",b"result"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"bindUin",b"bindUin",u"errmsg",b"errmsg",u"num",b"num",u"result",b"result"]) -> None: ...

class PbC2CMsgWithDrawReq(Message):
    DESCRIPTOR: Descriptor = ...
    class MsgInfo(Message):
        DESCRIPTOR: Descriptor = ...
        FROMUIN_FIELD_NUMBER: int
        TOUIN_FIELD_NUMBER: int
        MSGSEQ_FIELD_NUMBER: int
        MSGUID_FIELD_NUMBER: int
        MSGTIME_FIELD_NUMBER: int
        MSGRANDOM_FIELD_NUMBER: int
        PKGNUM_FIELD_NUMBER: int
        PKGINDEX_FIELD_NUMBER: int
        DIVSEQ_FIELD_NUMBER: int
        MSGTYPE_FIELD_NUMBER: int
        ROUTINGHEAD_FIELD_NUMBER: int
        fromUin: int = ...
        toUin: int = ...
        msgSeq: int = ...
        msgUid: int = ...
        msgTime: int = ...
        msgRandom: int = ...
        pkgNum: int = ...
        pkgIndex: int = ...
        divSeq: int = ...
        msgType: int = ...

        @property
        def routingHead(self) -> RoutingHead: ...

        def __init__(self,
            *,
            fromUin : Optional[int] = ...,
            toUin : Optional[int] = ...,
            msgSeq : Optional[int] = ...,
            msgUid : Optional[int] = ...,
            msgTime : Optional[int] = ...,
            msgRandom : Optional[int] = ...,
            pkgNum : Optional[int] = ...,
            pkgIndex : Optional[int] = ...,
            divSeq : Optional[int] = ...,
            msgType : Optional[int] = ...,
            routingHead : Optional[RoutingHead] = ...,
            ) -> None: ...
        def HasField(self, field_name: Literal[u"divSeq",b"divSeq",u"fromUin",b"fromUin",u"msgRandom",b"msgRandom",u"msgSeq",b"msgSeq",u"msgTime",b"msgTime",u"msgType",b"msgType",u"msgUid",b"msgUid",u"pkgIndex",b"pkgIndex",u"pkgNum",b"pkgNum",u"routingHead",b"routingHead",u"toUin",b"toUin"]) -> bool: ...
        def ClearField(self, field_name: Literal[u"divSeq",b"divSeq",u"fromUin",b"fromUin",u"msgRandom",b"msgRandom",u"msgSeq",b"msgSeq",u"msgTime",b"msgTime",u"msgType",b"msgType",u"msgUid",b"msgUid",u"pkgIndex",b"pkgIndex",u"pkgNum",b"pkgNum",u"routingHead",b"routingHead",u"toUin",b"toUin"]) -> None: ...

    INFO_FIELD_NUMBER: int
    LONGMESSAGEFLAG_FIELD_NUMBER: int
    RESERVED_FIELD_NUMBER: int
    SUBCMD_FIELD_NUMBER: int
    longMessageFlag: int = ...
    reserved: bytes = ...
    subCmd: int = ...

    @property
    def info(self) -> RepeatedCompositeFieldContainer[PbC2CMsgWithDrawReq.MsgInfo]: ...

    def __init__(self,
        *,
        info : Optional[Iterable[PbC2CMsgWithDrawReq.MsgInfo]] = ...,
        longMessageFlag : Optional[int] = ...,
        reserved : Optional[bytes] = ...,
        subCmd : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"longMessageFlag",b"longMessageFlag",u"reserved",b"reserved",u"subCmd",b"subCmd"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"info",b"info",u"longMessageFlag",b"longMessageFlag",u"reserved",b"reserved",u"subCmd",b"subCmd"]) -> None: ...

class PbC2CMsgWithDrawResp(Message):
    DESCRIPTOR: Descriptor = ...
    RESULT_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    STATUS_FIELD_NUMBER: int
    SUBCMD_FIELD_NUMBER: int
    WORDINGINFO_FIELD_NUMBER: int
    result: int = ...
    errmsg: Text = ...
    subCmd: int = ...

    @property
    def status(self) -> RepeatedCompositeFieldContainer[MsgStatus]: ...

    @property
    def wordingInfo(self) -> WithDrawWordingInfo: ...

    def __init__(self,
        *,
        result : Optional[int] = ...,
        errmsg : Optional[Text] = ...,
        status : Optional[Iterable[MsgStatus]] = ...,
        subCmd : Optional[int] = ...,
        wordingInfo : Optional[WithDrawWordingInfo] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"errmsg",b"errmsg",u"result",b"result",u"subCmd",b"subCmd",u"wordingInfo",b"wordingInfo"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"errmsg",b"errmsg",u"result",b"result",u"status",b"status",u"subCmd",b"subCmd",u"wordingInfo",b"wordingInfo"]) -> None: ...

class MsgStatus(Message):
    DESCRIPTOR: Descriptor = ...
    INFO_FIELD_NUMBER: int
    STATUS_FIELD_NUMBER: int
    status: int = ...

    @property
    def info(self) -> PbC2CMsgWithDrawReq.MsgInfo: ...

    def __init__(self,
        *,
        info : Optional[PbC2CMsgWithDrawReq.MsgInfo] = ...,
        status : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"info",b"info",u"status",b"status"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"info",b"info",u"status",b"status"]) -> None: ...

class PbC2CReadedReportReq(Message):
    DESCRIPTOR: Descriptor = ...
    SYNCCOOKIE_FIELD_NUMBER: int
    PAIRINFO_FIELD_NUMBER: int
    syncCookie: bytes = ...

    @property
    def pairInfo(self) -> RepeatedCompositeFieldContainer[UinPairReadInfo]: ...

    def __init__(self,
        *,
        syncCookie : Optional[bytes] = ...,
        pairInfo : Optional[Iterable[UinPairReadInfo]] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"syncCookie",b"syncCookie"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"pairInfo",b"pairInfo",u"syncCookie",b"syncCookie"]) -> None: ...

class UinPairReadInfo(Message):
    DESCRIPTOR: Descriptor = ...
    PEERUIN_FIELD_NUMBER: int
    LASTREADTIME_FIELD_NUMBER: int
    CRMSIG_FIELD_NUMBER: int
    PEERTYPE_FIELD_NUMBER: int
    CHATTYPE_FIELD_NUMBER: int
    CPID_FIELD_NUMBER: int
    AIOTYPE_FIELD_NUMBER: int
    TOTINYID_FIELD_NUMBER: int
    peerUin: int = ...
    lastReadTime: int = ...
    crmSig: bytes = ...
    peerType: int = ...
    chatType: int = ...
    cpid: int = ...
    aioType: int = ...
    toTinyId: int = ...

    def __init__(self,
        *,
        peerUin : Optional[int] = ...,
        lastReadTime : Optional[int] = ...,
        crmSig : Optional[bytes] = ...,
        peerType : Optional[int] = ...,
        chatType : Optional[int] = ...,
        cpid : Optional[int] = ...,
        aioType : Optional[int] = ...,
        toTinyId : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"aioType",b"aioType",u"chatType",b"chatType",u"cpid",b"cpid",u"crmSig",b"crmSig",u"lastReadTime",b"lastReadTime",u"peerType",b"peerType",u"peerUin",b"peerUin",u"toTinyId",b"toTinyId"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"aioType",b"aioType",u"chatType",b"chatType",u"cpid",b"cpid",u"crmSig",b"crmSig",u"lastReadTime",b"lastReadTime",u"peerType",b"peerType",u"peerUin",b"peerUin",u"toTinyId",b"toTinyId"]) -> None: ...

class PbC2CReadedReportResp(Message):
    DESCRIPTOR: Descriptor = ...
    RESULT_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    SYNCCOOKIE_FIELD_NUMBER: int
    result: int = ...
    errmsg: Text = ...
    syncCookie: bytes = ...

    def __init__(self,
        *,
        result : Optional[int] = ...,
        errmsg : Optional[Text] = ...,
        syncCookie : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"errmsg",b"errmsg",u"result",b"result",u"syncCookie",b"syncCookie"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"errmsg",b"errmsg",u"result",b"result",u"syncCookie",b"syncCookie"]) -> None: ...

class PbC2CUnReadMsgNumReq(Message):
    DESCRIPTOR: Descriptor = ...

    def __init__(self,
        ) -> None: ...

class PbC2CUnReadMsgNumResp(Message):
    DESCRIPTOR: Descriptor = ...
    RESULT_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    NUM_FIELD_NUMBER: int
    result: int = ...
    errmsg: Text = ...
    num: int = ...

    def __init__(self,
        *,
        result : Optional[int] = ...,
        errmsg : Optional[Text] = ...,
        num : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"errmsg",b"errmsg",u"num",b"num",u"result",b"result"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"errmsg",b"errmsg",u"num",b"num",u"result",b"result"]) -> None: ...

class PbDelRoamMsgReq(Message):
    DESCRIPTOR: Descriptor = ...
    C2CMSG_FIELD_NUMBER: int
    GRPMSG_FIELD_NUMBER: int
    DISMSG_FIELD_NUMBER: int

    @property
    def c2CMsg(self) -> C2CMsg: ...

    @property
    def grpMsg(self) -> GrpMsg: ...

    @property
    def disMsg(self) -> DisMsg: ...

    def __init__(self,
        *,
        c2CMsg : Optional[C2CMsg] = ...,
        grpMsg : Optional[GrpMsg] = ...,
        disMsg : Optional[DisMsg] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"c2CMsg",b"c2CMsg",u"disMsg",b"disMsg",u"grpMsg",b"grpMsg"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"c2CMsg",b"c2CMsg",u"disMsg",b"disMsg",u"grpMsg",b"grpMsg"]) -> None: ...

class C2CMsg(Message):
    DESCRIPTOR: Descriptor = ...
    FROMUIN_FIELD_NUMBER: int
    PEERUIN_FIELD_NUMBER: int
    TIME_FIELD_NUMBER: int
    RANDOM_FIELD_NUMBER: int
    SEQ_FIELD_NUMBER: int
    fromUin: int = ...
    peerUin: int = ...
    time: int = ...
    random: int = ...
    seq: int = ...

    def __init__(self,
        *,
        fromUin : Optional[int] = ...,
        peerUin : Optional[int] = ...,
        time : Optional[int] = ...,
        random : Optional[int] = ...,
        seq : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"fromUin",b"fromUin",u"peerUin",b"peerUin",u"random",b"random",u"seq",b"seq",u"time",b"time"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"fromUin",b"fromUin",u"peerUin",b"peerUin",u"random",b"random",u"seq",b"seq",u"time",b"time"]) -> None: ...

class DisMsg(Message):
    DESCRIPTOR: Descriptor = ...
    DISCUSSUIN_FIELD_NUMBER: int
    SEQ_FIELD_NUMBER: int
    discussUin: int = ...
    seq: int = ...

    def __init__(self,
        *,
        discussUin : Optional[int] = ...,
        seq : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"discussUin",b"discussUin",u"seq",b"seq"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"discussUin",b"discussUin",u"seq",b"seq"]) -> None: ...

class GrpMsg(Message):
    DESCRIPTOR: Descriptor = ...
    GROUPCODE_FIELD_NUMBER: int
    SEQ_FIELD_NUMBER: int
    RESVFLAG_FIELD_NUMBER: int
    groupCode: int = ...
    seq: int = ...
    resvFlag: int = ...

    def __init__(self,
        *,
        groupCode : Optional[int] = ...,
        seq : Optional[int] = ...,
        resvFlag : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"groupCode",b"groupCode",u"resvFlag",b"resvFlag",u"seq",b"seq"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"groupCode",b"groupCode",u"resvFlag",b"resvFlag",u"seq",b"seq"]) -> None: ...

class PbDelRoamMsgResp(Message):
    DESCRIPTOR: Descriptor = ...
    RESULT_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    result: int = ...
    errmsg: Text = ...

    def __init__(self,
        *,
        result : Optional[int] = ...,
        errmsg : Optional[Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"errmsg",b"errmsg",u"result",b"result"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"errmsg",b"errmsg",u"result",b"result"]) -> None: ...

class PbDeleteMsgReq(Message):
    DESCRIPTOR: Descriptor = ...
    MSGITEMS_FIELD_NUMBER: int

    @property
    def msgItems(self) -> RepeatedCompositeFieldContainer[MsgItem]: ...

    def __init__(self,
        *,
        msgItems : Optional[Iterable[MsgItem]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal[u"msgItems",b"msgItems"]) -> None: ...

class MsgItem(Message):
    DESCRIPTOR: Descriptor = ...
    FROMUIN_FIELD_NUMBER: int
    TOUIN_FIELD_NUMBER: int
    TYPE_FIELD_NUMBER: int
    SEQ_FIELD_NUMBER: int
    UID_FIELD_NUMBER: int
    SIG_FIELD_NUMBER: int
    fromUin: int = ...
    toUin: int = ...
    type: int = ...
    seq: int = ...
    uid: int = ...
    sig: bytes = ...

    def __init__(self,
        *,
        fromUin : Optional[int] = ...,
        toUin : Optional[int] = ...,
        type : Optional[int] = ...,
        seq : Optional[int] = ...,
        uid : Optional[int] = ...,
        sig : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"fromUin",b"fromUin",u"seq",b"seq",u"sig",b"sig",u"toUin",b"toUin",u"type",b"type",u"uid",b"uid"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"fromUin",b"fromUin",u"seq",b"seq",u"sig",b"sig",u"toUin",b"toUin",u"type",b"type",u"uid",b"uid"]) -> None: ...

class PbDeleteMsgResp(Message):
    DESCRIPTOR: Descriptor = ...
    RESULT_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    result: int = ...
    errmsg: Text = ...

    def __init__(self,
        *,
        result : Optional[int] = ...,
        errmsg : Optional[Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"errmsg",b"errmsg",u"result",b"result"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"errmsg",b"errmsg",u"result",b"result"]) -> None: ...

class PbDiscussReadedReportReq(Message):
    DESCRIPTOR: Descriptor = ...
    CONFUIN_FIELD_NUMBER: int
    LASTREADSEQ_FIELD_NUMBER: int
    confUin: int = ...
    lastReadSeq: int = ...

    def __init__(self,
        *,
        confUin : Optional[int] = ...,
        lastReadSeq : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"confUin",b"confUin",u"lastReadSeq",b"lastReadSeq"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"confUin",b"confUin",u"lastReadSeq",b"lastReadSeq"]) -> None: ...

class PbDiscussReadedReportResp(Message):
    DESCRIPTOR: Descriptor = ...
    RESULT_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    CONFUIN_FIELD_NUMBER: int
    MEMBERSEQ_FIELD_NUMBER: int
    CONFSEQ_FIELD_NUMBER: int
    result: int = ...
    errmsg: Text = ...
    confUin: int = ...
    memberSeq: int = ...
    confSeq: int = ...

    def __init__(self,
        *,
        result : Optional[int] = ...,
        errmsg : Optional[Text] = ...,
        confUin : Optional[int] = ...,
        memberSeq : Optional[int] = ...,
        confSeq : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"confSeq",b"confSeq",u"confUin",b"confUin",u"errmsg",b"errmsg",u"memberSeq",b"memberSeq",u"result",b"result"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"confSeq",b"confSeq",u"confUin",b"confUin",u"errmsg",b"errmsg",u"memberSeq",b"memberSeq",u"result",b"result"]) -> None: ...

class PbGetDiscussMsgReq(Message):
    DESCRIPTOR: Descriptor = ...
    DISCUSSUIN_FIELD_NUMBER: int
    ENDSEQ_FIELD_NUMBER: int
    BEGINSEQ_FIELD_NUMBER: int
    LASTGETTIME_FIELD_NUMBER: int
    DISCUSSINFOSEQ_FIELD_NUMBER: int
    FILTER_FIELD_NUMBER: int
    MEMBERSEQ_FIELD_NUMBER: int
    discussUin: int = ...
    endSeq: int = ...
    beginSeq: int = ...
    lastGetTime: int = ...
    discussInfoSeq: int = ...
    filter: int = ...
    memberSeq: int = ...

    def __init__(self,
        *,
        discussUin : Optional[int] = ...,
        endSeq : Optional[int] = ...,
        beginSeq : Optional[int] = ...,
        lastGetTime : Optional[int] = ...,
        discussInfoSeq : Optional[int] = ...,
        filter : Optional[int] = ...,
        memberSeq : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"beginSeq",b"beginSeq",u"discussInfoSeq",b"discussInfoSeq",u"discussUin",b"discussUin",u"endSeq",b"endSeq",u"filter",b"filter",u"lastGetTime",b"lastGetTime",u"memberSeq",b"memberSeq"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"beginSeq",b"beginSeq",u"discussInfoSeq",b"discussInfoSeq",u"discussUin",b"discussUin",u"endSeq",b"endSeq",u"filter",b"filter",u"lastGetTime",b"lastGetTime",u"memberSeq",b"memberSeq"]) -> None: ...

class PbGetDiscussMsgResp(Message):
    DESCRIPTOR: Descriptor = ...
    RESULT_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    DISCUSSUIN_FIELD_NUMBER: int
    RETURNENDSEQ_FIELD_NUMBER: int
    RETURNBEGINSEQ_FIELD_NUMBER: int
    MSG_FIELD_NUMBER: int
    LASTGETTIME_FIELD_NUMBER: int
    DISCUSSINFOSEQ_FIELD_NUMBER: int
    result: int = ...
    errmsg: Text = ...
    discussUin: int = ...
    returnEndSeq: int = ...
    returnBeginSeq: int = ...
    lastGetTime: int = ...
    discussInfoSeq: int = ...

    @property
    def msg(self) -> RepeatedCompositeFieldContainer[Msg]: ...

    def __init__(self,
        *,
        result : Optional[int] = ...,
        errmsg : Optional[Text] = ...,
        discussUin : Optional[int] = ...,
        returnEndSeq : Optional[int] = ...,
        returnBeginSeq : Optional[int] = ...,
        msg : Optional[Iterable[Msg]] = ...,
        lastGetTime : Optional[int] = ...,
        discussInfoSeq : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"discussInfoSeq",b"discussInfoSeq",u"discussUin",b"discussUin",u"errmsg",b"errmsg",u"lastGetTime",b"lastGetTime",u"result",b"result",u"returnBeginSeq",b"returnBeginSeq",u"returnEndSeq",b"returnEndSeq"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"discussInfoSeq",b"discussInfoSeq",u"discussUin",b"discussUin",u"errmsg",b"errmsg",u"lastGetTime",b"lastGetTime",u"msg",b"msg",u"result",b"result",u"returnBeginSeq",b"returnBeginSeq",u"returnEndSeq",b"returnEndSeq"]) -> None: ...

class PbGetGroupMsgReq(Message):
    DESCRIPTOR: Descriptor = ...
    GROUPCODE_FIELD_NUMBER: int
    BEGINSEQ_FIELD_NUMBER: int
    ENDSEQ_FIELD_NUMBER: int
    FILTER_FIELD_NUMBER: int
    MEMBERSEQ_FIELD_NUMBER: int
    PUBLICGROUP_FIELD_NUMBER: int
    SHIELDFLAG_FIELD_NUMBER: int
    SAVETRAFFICFLAG_FIELD_NUMBER: int
    groupCode: int = ...
    beginSeq: int = ...
    endSeq: int = ...
    filter: int = ...
    memberSeq: int = ...
    publicGroup: bool = ...
    shieldFlag: int = ...
    saveTrafficFlag: int = ...

    def __init__(self,
        *,
        groupCode : Optional[int] = ...,
        beginSeq : Optional[int] = ...,
        endSeq : Optional[int] = ...,
        filter : Optional[int] = ...,
        memberSeq : Optional[int] = ...,
        publicGroup : Optional[bool] = ...,
        shieldFlag : Optional[int] = ...,
        saveTrafficFlag : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"beginSeq",b"beginSeq",u"endSeq",b"endSeq",u"filter",b"filter",u"groupCode",b"groupCode",u"memberSeq",b"memberSeq",u"publicGroup",b"publicGroup",u"saveTrafficFlag",b"saveTrafficFlag",u"shieldFlag",b"shieldFlag"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"beginSeq",b"beginSeq",u"endSeq",b"endSeq",u"filter",b"filter",u"groupCode",b"groupCode",u"memberSeq",b"memberSeq",u"publicGroup",b"publicGroup",u"saveTrafficFlag",b"saveTrafficFlag",u"shieldFlag",b"shieldFlag"]) -> None: ...

class PbGetGroupMsgResp(Message):
    DESCRIPTOR: Descriptor = ...
    RESULT_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    GROUPCODE_FIELD_NUMBER: int
    RETURNBEGINSEQ_FIELD_NUMBER: int
    RETURNENDSEQ_FIELD_NUMBER: int
    MSG_FIELD_NUMBER: int
    result: int = ...
    errmsg: Text = ...
    groupCode: int = ...
    returnBeginSeq: int = ...
    returnEndSeq: int = ...

    @property
    def msg(self) -> RepeatedCompositeFieldContainer[Msg]: ...

    def __init__(self,
        *,
        result : Optional[int] = ...,
        errmsg : Optional[Text] = ...,
        groupCode : Optional[int] = ...,
        returnBeginSeq : Optional[int] = ...,
        returnEndSeq : Optional[int] = ...,
        msg : Optional[Iterable[Msg]] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"errmsg",b"errmsg",u"groupCode",b"groupCode",u"result",b"result",u"returnBeginSeq",b"returnBeginSeq",u"returnEndSeq",b"returnEndSeq"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"errmsg",b"errmsg",u"groupCode",b"groupCode",u"msg",b"msg",u"result",b"result",u"returnBeginSeq",b"returnBeginSeq",u"returnEndSeq",b"returnEndSeq"]) -> None: ...

class PbGetMsgReq(Message):
    DESCRIPTOR: Descriptor = ...
    SYNCFLAG_FIELD_NUMBER: int
    SYNCCOOKIE_FIELD_NUMBER: int
    RAMBLEFLAG_FIELD_NUMBER: int
    LATESTRAMBLENUMBER_FIELD_NUMBER: int
    OTHERRAMBLENUMBER_FIELD_NUMBER: int
    ONLINESYNCFLAG_FIELD_NUMBER: int
    CONTEXTFLAG_FIELD_NUMBER: int
    WHISPERSESSIONID_FIELD_NUMBER: int
    REQTYPE_FIELD_NUMBER: int
    PUBACCOUNTCOOKIE_FIELD_NUMBER: int
    CTRLBUF_FIELD_NUMBER: int
    SERVERBUF_FIELD_NUMBER: int
    syncFlag: int = ...
    syncCookie: bytes = ...
    rambleFlag: int = ...
    latestRambleNumber: int = ...
    otherRambleNumber: int = ...
    onlineSyncFlag: int = ...
    contextFlag: int = ...
    whisperSessionId: int = ...
    reqType: int = ...
    pubaccountCookie: bytes = ...
    ctrlBuf: bytes = ...
    serverBuf: bytes = ...

    def __init__(self,
        *,
        syncFlag : Optional[int] = ...,
        syncCookie : Optional[bytes] = ...,
        rambleFlag : Optional[int] = ...,
        latestRambleNumber : Optional[int] = ...,
        otherRambleNumber : Optional[int] = ...,
        onlineSyncFlag : Optional[int] = ...,
        contextFlag : Optional[int] = ...,
        whisperSessionId : Optional[int] = ...,
        reqType : Optional[int] = ...,
        pubaccountCookie : Optional[bytes] = ...,
        ctrlBuf : Optional[bytes] = ...,
        serverBuf : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"contextFlag",b"contextFlag",u"ctrlBuf",b"ctrlBuf",u"latestRambleNumber",b"latestRambleNumber",u"onlineSyncFlag",b"onlineSyncFlag",u"otherRambleNumber",b"otherRambleNumber",u"pubaccountCookie",b"pubaccountCookie",u"rambleFlag",b"rambleFlag",u"reqType",b"reqType",u"serverBuf",b"serverBuf",u"syncCookie",b"syncCookie",u"syncFlag",b"syncFlag",u"whisperSessionId",b"whisperSessionId"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"contextFlag",b"contextFlag",u"ctrlBuf",b"ctrlBuf",u"latestRambleNumber",b"latestRambleNumber",u"onlineSyncFlag",b"onlineSyncFlag",u"otherRambleNumber",b"otherRambleNumber",u"pubaccountCookie",b"pubaccountCookie",u"rambleFlag",b"rambleFlag",u"reqType",b"reqType",u"serverBuf",b"serverBuf",u"syncCookie",b"syncCookie",u"syncFlag",b"syncFlag",u"whisperSessionId",b"whisperSessionId"]) -> None: ...

class PbGetMsgResp(Message):
    DESCRIPTOR: Descriptor = ...
    RESULT_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    SYNCCOOKIE_FIELD_NUMBER: int
    SYNCFLAG_FIELD_NUMBER: int
    UINPAIRMSGS_FIELD_NUMBER: int
    BINDUIN_FIELD_NUMBER: int
    RSPTYPE_FIELD_NUMBER: int
    PUBACCOUNTCOOKIE_FIELD_NUMBER: int
    ISPARTIALSYNC_FIELD_NUMBER: int
    CTRLBUF_FIELD_NUMBER: int
    result: int = ...
    errmsg: Text = ...
    syncCookie: bytes = ...
    syncFlag: int = ...
    bindUin: int = ...
    rspType: int = ...
    pubaccountCookie: bytes = ...
    isPartialSync: bool = ...
    ctrlBuf: bytes = ...

    @property
    def uinPairMsgs(self) -> RepeatedCompositeFieldContainer[UinPairMsg]: ...

    def __init__(self,
        *,
        result : Optional[int] = ...,
        errmsg : Optional[Text] = ...,
        syncCookie : Optional[bytes] = ...,
        syncFlag : Optional[int] = ...,
        uinPairMsgs : Optional[Iterable[UinPairMsg]] = ...,
        bindUin : Optional[int] = ...,
        rspType : Optional[int] = ...,
        pubaccountCookie : Optional[bytes] = ...,
        isPartialSync : Optional[bool] = ...,
        ctrlBuf : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"bindUin",b"bindUin",u"ctrlBuf",b"ctrlBuf",u"errmsg",b"errmsg",u"isPartialSync",b"isPartialSync",u"pubaccountCookie",b"pubaccountCookie",u"result",b"result",u"rspType",b"rspType",u"syncCookie",b"syncCookie",u"syncFlag",b"syncFlag"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"bindUin",b"bindUin",u"ctrlBuf",b"ctrlBuf",u"errmsg",b"errmsg",u"isPartialSync",b"isPartialSync",u"pubaccountCookie",b"pubaccountCookie",u"result",b"result",u"rspType",b"rspType",u"syncCookie",b"syncCookie",u"syncFlag",b"syncFlag",u"uinPairMsgs",b"uinPairMsgs"]) -> None: ...

class PbGetOneDayRoamMsgReq(Message):
    DESCRIPTOR: Descriptor = ...
    PEERUIN_FIELD_NUMBER: int
    LASTMSGTIME_FIELD_NUMBER: int
    RANDOM_FIELD_NUMBER: int
    READCNT_FIELD_NUMBER: int
    peerUin: int = ...
    lastMsgtime: int = ...
    random: int = ...
    readCnt: int = ...

    def __init__(self,
        *,
        peerUin : Optional[int] = ...,
        lastMsgtime : Optional[int] = ...,
        random : Optional[int] = ...,
        readCnt : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"lastMsgtime",b"lastMsgtime",u"peerUin",b"peerUin",u"random",b"random",u"readCnt",b"readCnt"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"lastMsgtime",b"lastMsgtime",u"peerUin",b"peerUin",u"random",b"random",u"readCnt",b"readCnt"]) -> None: ...

class PbGetOneDayRoamMsgResp(Message):
    DESCRIPTOR: Descriptor = ...
    RESULT_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    PEERUIN_FIELD_NUMBER: int
    LASTMSGTIME_FIELD_NUMBER: int
    RANDOM_FIELD_NUMBER: int
    MSG_FIELD_NUMBER: int
    ISCOMPLETE_FIELD_NUMBER: int
    result: int = ...
    errmsg: Text = ...
    peerUin: int = ...
    lastMsgtime: int = ...
    random: int = ...
    iscomplete: int = ...

    @property
    def msg(self) -> RepeatedCompositeFieldContainer[Msg]: ...

    def __init__(self,
        *,
        result : Optional[int] = ...,
        errmsg : Optional[Text] = ...,
        peerUin : Optional[int] = ...,
        lastMsgtime : Optional[int] = ...,
        random : Optional[int] = ...,
        msg : Optional[Iterable[Msg]] = ...,
        iscomplete : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"errmsg",b"errmsg",u"iscomplete",b"iscomplete",u"lastMsgtime",b"lastMsgtime",u"peerUin",b"peerUin",u"random",b"random",u"result",b"result"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"errmsg",b"errmsg",u"iscomplete",b"iscomplete",u"lastMsgtime",b"lastMsgtime",u"msg",b"msg",u"peerUin",b"peerUin",u"random",b"random",u"result",b"result"]) -> None: ...

class PbGetRoamMsgReq(Message):
    DESCRIPTOR: Descriptor = ...
    PEERUIN_FIELD_NUMBER: int
    LASTMSGTIME_FIELD_NUMBER: int
    RANDOM_FIELD_NUMBER: int
    READCNT_FIELD_NUMBER: int
    CHECKPWD_FIELD_NUMBER: int
    SIG_FIELD_NUMBER: int
    PWD_FIELD_NUMBER: int
    SUBCMD_FIELD_NUMBER: int
    BEGINMSGTIME_FIELD_NUMBER: int
    REQTYPE_FIELD_NUMBER: int
    peerUin: int = ...
    lastMsgtime: int = ...
    random: int = ...
    readCnt: int = ...
    checkPwd: int = ...
    sig: bytes = ...
    pwd: bytes = ...
    subcmd: int = ...
    beginMsgtime: int = ...
    reqType: int = ...

    def __init__(self,
        *,
        peerUin : Optional[int] = ...,
        lastMsgtime : Optional[int] = ...,
        random : Optional[int] = ...,
        readCnt : Optional[int] = ...,
        checkPwd : Optional[int] = ...,
        sig : Optional[bytes] = ...,
        pwd : Optional[bytes] = ...,
        subcmd : Optional[int] = ...,
        beginMsgtime : Optional[int] = ...,
        reqType : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"beginMsgtime",b"beginMsgtime",u"checkPwd",b"checkPwd",u"lastMsgtime",b"lastMsgtime",u"peerUin",b"peerUin",u"pwd",b"pwd",u"random",b"random",u"readCnt",b"readCnt",u"reqType",b"reqType",u"sig",b"sig",u"subcmd",b"subcmd"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"beginMsgtime",b"beginMsgtime",u"checkPwd",b"checkPwd",u"lastMsgtime",b"lastMsgtime",u"peerUin",b"peerUin",u"pwd",b"pwd",u"random",b"random",u"readCnt",b"readCnt",u"reqType",b"reqType",u"sig",b"sig",u"subcmd",b"subcmd"]) -> None: ...

class PbGetRoamMsgResp(Message):
    DESCRIPTOR: Descriptor = ...
    RESULT_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    PEERUIN_FIELD_NUMBER: int
    LASTMSGTIME_FIELD_NUMBER: int
    RANDOM_FIELD_NUMBER: int
    MSG_FIELD_NUMBER: int
    SIG_FIELD_NUMBER: int
    result: int = ...
    errmsg: Text = ...
    peerUin: int = ...
    lastMsgtime: int = ...
    random: int = ...
    sig: bytes = ...

    @property
    def msg(self) -> RepeatedCompositeFieldContainer[Msg]: ...

    def __init__(self,
        *,
        result : Optional[int] = ...,
        errmsg : Optional[Text] = ...,
        peerUin : Optional[int] = ...,
        lastMsgtime : Optional[int] = ...,
        random : Optional[int] = ...,
        msg : Optional[Iterable[Msg]] = ...,
        sig : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"errmsg",b"errmsg",u"lastMsgtime",b"lastMsgtime",u"peerUin",b"peerUin",u"random",b"random",u"result",b"result",u"sig",b"sig"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"errmsg",b"errmsg",u"lastMsgtime",b"lastMsgtime",u"msg",b"msg",u"peerUin",b"peerUin",u"random",b"random",u"result",b"result",u"sig",b"sig"]) -> None: ...

class PbGroupMsgWithDrawReq(Message):
    DESCRIPTOR: Descriptor = ...
    SUBCMD_FIELD_NUMBER: int
    GROUPTYPE_FIELD_NUMBER: int
    GROUPCODE_FIELD_NUMBER: int
    LIST_FIELD_NUMBER: int
    USERDEF_FIELD_NUMBER: int
    subCmd: int = ...
    groupType: int = ...
    groupCode: int = ...
    userdef: bytes = ...

    @property
    def list(self) -> RepeatedCompositeFieldContainer[MessageInfo]: ...

    def __init__(self,
        *,
        subCmd : Optional[int] = ...,
        groupType : Optional[int] = ...,
        groupCode : Optional[int] = ...,
        list : Optional[Iterable[MessageInfo]] = ...,
        userdef : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"groupCode",b"groupCode",u"groupType",b"groupType",u"subCmd",b"subCmd",u"userdef",b"userdef"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"groupCode",b"groupCode",u"groupType",b"groupType",u"list",b"list",u"subCmd",b"subCmd",u"userdef",b"userdef"]) -> None: ...

class MessageInfo(Message):
    DESCRIPTOR: Descriptor = ...
    MSGSEQ_FIELD_NUMBER: int
    MSGRANDOM_FIELD_NUMBER: int
    MSGTYPE_FIELD_NUMBER: int
    RESVFLAG_FIELD_NUMBER: int
    msgSeq: int = ...
    msgRandom: int = ...
    msgType: int = ...
    resvFlag: int = ...

    def __init__(self,
        *,
        msgSeq : Optional[int] = ...,
        msgRandom : Optional[int] = ...,
        msgType : Optional[int] = ...,
        resvFlag : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"msgRandom",b"msgRandom",u"msgSeq",b"msgSeq",u"msgType",b"msgType",u"resvFlag",b"resvFlag"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"msgRandom",b"msgRandom",u"msgSeq",b"msgSeq",u"msgType",b"msgType",u"resvFlag",b"resvFlag"]) -> None: ...

class PbGroupMsgWithDrawResp(Message):
    DESCRIPTOR: Descriptor = ...
    RESULT_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    SUBCMD_FIELD_NUMBER: int
    GROUPTYPE_FIELD_NUMBER: int
    GROUPCODE_FIELD_NUMBER: int
    FAILEDMSGLIST_FIELD_NUMBER: int
    USERDEF_FIELD_NUMBER: int
    WORDINGINFO_FIELD_NUMBER: int
    result: int = ...
    errmsg: Text = ...
    subCmd: int = ...
    groupType: int = ...
    groupCode: int = ...
    userdef: bytes = ...

    @property
    def failedMsgList(self) -> RepeatedCompositeFieldContainer[MessageResult]: ...

    @property
    def wordingInfo(self) -> WithDrawWordingInfo: ...

    def __init__(self,
        *,
        result : Optional[int] = ...,
        errmsg : Optional[Text] = ...,
        subCmd : Optional[int] = ...,
        groupType : Optional[int] = ...,
        groupCode : Optional[int] = ...,
        failedMsgList : Optional[Iterable[MessageResult]] = ...,
        userdef : Optional[bytes] = ...,
        wordingInfo : Optional[WithDrawWordingInfo] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"errmsg",b"errmsg",u"groupCode",b"groupCode",u"groupType",b"groupType",u"result",b"result",u"subCmd",b"subCmd",u"userdef",b"userdef",u"wordingInfo",b"wordingInfo"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"errmsg",b"errmsg",u"failedMsgList",b"failedMsgList",u"groupCode",b"groupCode",u"groupType",b"groupType",u"result",b"result",u"subCmd",b"subCmd",u"userdef",b"userdef",u"wordingInfo",b"wordingInfo"]) -> None: ...

class MessageResult(Message):
    DESCRIPTOR: Descriptor = ...
    RESULT_FIELD_NUMBER: int
    MSGSEQ_FIELD_NUMBER: int
    MSGTIME_FIELD_NUMBER: int
    MSGRANDOM_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    MSGTYPE_FIELD_NUMBER: int
    result: int = ...
    msgSeq: int = ...
    msgTime: int = ...
    msgRandom: int = ...
    errMsg: bytes = ...
    msgType: int = ...

    def __init__(self,
        *,
        result : Optional[int] = ...,
        msgSeq : Optional[int] = ...,
        msgTime : Optional[int] = ...,
        msgRandom : Optional[int] = ...,
        errMsg : Optional[bytes] = ...,
        msgType : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"errMsg",b"errMsg",u"msgRandom",b"msgRandom",u"msgSeq",b"msgSeq",u"msgTime",b"msgTime",u"msgType",b"msgType",u"result",b"result"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"errMsg",b"errMsg",u"msgRandom",b"msgRandom",u"msgSeq",b"msgSeq",u"msgTime",b"msgTime",u"msgType",b"msgType",u"result",b"result"]) -> None: ...

class PbGroupReadedReportReq(Message):
    DESCRIPTOR: Descriptor = ...
    GROUPCODE_FIELD_NUMBER: int
    LASTREADSEQ_FIELD_NUMBER: int
    groupCode: int = ...
    lastReadSeq: int = ...

    def __init__(self,
        *,
        groupCode : Optional[int] = ...,
        lastReadSeq : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"groupCode",b"groupCode",u"lastReadSeq",b"lastReadSeq"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"groupCode",b"groupCode",u"lastReadSeq",b"lastReadSeq"]) -> None: ...

class PbGroupReadedReportResp(Message):
    DESCRIPTOR: Descriptor = ...
    RESULT_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    GROUPCODE_FIELD_NUMBER: int
    MEMBERSEQ_FIELD_NUMBER: int
    GROUPMSGSEQ_FIELD_NUMBER: int
    result: int = ...
    errmsg: Text = ...
    groupCode: int = ...
    memberSeq: int = ...
    groupMsgSeq: int = ...

    def __init__(self,
        *,
        result : Optional[int] = ...,
        errmsg : Optional[Text] = ...,
        groupCode : Optional[int] = ...,
        memberSeq : Optional[int] = ...,
        groupMsgSeq : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"errmsg",b"errmsg",u"groupCode",b"groupCode",u"groupMsgSeq",b"groupMsgSeq",u"memberSeq",b"memberSeq",u"result",b"result"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"errmsg",b"errmsg",u"groupCode",b"groupCode",u"groupMsgSeq",b"groupMsgSeq",u"memberSeq",b"memberSeq",u"result",b"result"]) -> None: ...

class PbInputNotifyInfo(Message):
    DESCRIPTOR: Descriptor = ...
    TOUIN_FIELD_NUMBER: int
    IME_FIELD_NUMBER: int
    NOTIFYFLAG_FIELD_NUMBER: int
    PBRESERVE_FIELD_NUMBER: int
    IOSPUSHWORDING_FIELD_NUMBER: int
    toUin: int = ...
    ime: int = ...
    notifyFlag: int = ...
    pbReserve: bytes = ...
    iosPushWording: bytes = ...

    def __init__(self,
        *,
        toUin : Optional[int] = ...,
        ime : Optional[int] = ...,
        notifyFlag : Optional[int] = ...,
        pbReserve : Optional[bytes] = ...,
        iosPushWording : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"ime",b"ime",u"iosPushWording",b"iosPushWording",u"notifyFlag",b"notifyFlag",u"pbReserve",b"pbReserve",u"toUin",b"toUin"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"ime",b"ime",u"iosPushWording",b"iosPushWording",u"notifyFlag",b"notifyFlag",u"pbReserve",b"pbReserve",u"toUin",b"toUin"]) -> None: ...

class PbMsgReadedReportReq(Message):
    DESCRIPTOR: Descriptor = ...
    GRPREADREPORT_FIELD_NUMBER: int
    DISREADREPORT_FIELD_NUMBER: int
    C2CREADREPORT_FIELD_NUMBER: int
    BINDUINREADREPORT_FIELD_NUMBER: int

    @property
    def grpReadReport(self) -> RepeatedCompositeFieldContainer[PbGroupReadedReportReq]: ...

    @property
    def disReadReport(self) -> RepeatedCompositeFieldContainer[PbDiscussReadedReportReq]: ...

    @property
    def c2CReadReport(self) -> PbC2CReadedReportReq: ...

    @property
    def bindUinReadReport(self) -> PbBindUinMsgReadedConfirmReq: ...

    def __init__(self,
        *,
        grpReadReport : Optional[Iterable[PbGroupReadedReportReq]] = ...,
        disReadReport : Optional[Iterable[PbDiscussReadedReportReq]] = ...,
        c2CReadReport : Optional[PbC2CReadedReportReq] = ...,
        bindUinReadReport : Optional[PbBindUinMsgReadedConfirmReq] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"bindUinReadReport",b"bindUinReadReport",u"c2CReadReport",b"c2CReadReport"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"bindUinReadReport",b"bindUinReadReport",u"c2CReadReport",b"c2CReadReport",u"disReadReport",b"disReadReport",u"grpReadReport",b"grpReadReport"]) -> None: ...

class PbMsgReadedReportResp(Message):
    DESCRIPTOR: Descriptor = ...
    GRPREADREPORT_FIELD_NUMBER: int
    DISREADREPORT_FIELD_NUMBER: int
    C2CREADREPORT_FIELD_NUMBER: int
    BINDUINREADREPORT_FIELD_NUMBER: int

    @property
    def grpReadReport(self) -> RepeatedCompositeFieldContainer[PbGroupReadedReportResp]: ...

    @property
    def disReadReport(self) -> RepeatedCompositeFieldContainer[PbDiscussReadedReportResp]: ...

    @property
    def c2CReadReport(self) -> PbC2CReadedReportResp: ...

    @property
    def bindUinReadReport(self) -> PbBindUinMsgReadedConfirmResp: ...

    def __init__(self,
        *,
        grpReadReport : Optional[Iterable[PbGroupReadedReportResp]] = ...,
        disReadReport : Optional[Iterable[PbDiscussReadedReportResp]] = ...,
        c2CReadReport : Optional[PbC2CReadedReportResp] = ...,
        bindUinReadReport : Optional[PbBindUinMsgReadedConfirmResp] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"bindUinReadReport",b"bindUinReadReport",u"c2CReadReport",b"c2CReadReport"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"bindUinReadReport",b"bindUinReadReport",u"c2CReadReport",b"c2CReadReport",u"disReadReport",b"disReadReport",u"grpReadReport",b"grpReadReport"]) -> None: ...

class PbMsgWithDrawReq(Message):
    DESCRIPTOR: Descriptor = ...
    C2CWITHDRAW_FIELD_NUMBER: int
    GROUPWITHDRAW_FIELD_NUMBER: int

    @property
    def c2CWithDraw(self) -> RepeatedCompositeFieldContainer[PbC2CMsgWithDrawReq]: ...

    @property
    def groupWithDraw(self) -> RepeatedCompositeFieldContainer[PbGroupMsgWithDrawReq]: ...

    def __init__(self,
        *,
        c2CWithDraw : Optional[Iterable[PbC2CMsgWithDrawReq]] = ...,
        groupWithDraw : Optional[Iterable[PbGroupMsgWithDrawReq]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal[u"c2CWithDraw",b"c2CWithDraw",u"groupWithDraw",b"groupWithDraw"]) -> None: ...

class PbMsgWithDrawResp(Message):
    DESCRIPTOR: Descriptor = ...
    C2CWITHDRAW_FIELD_NUMBER: int
    GROUPWITHDRAW_FIELD_NUMBER: int

    @property
    def c2CWithDraw(self) -> RepeatedCompositeFieldContainer[PbC2CMsgWithDrawResp]: ...

    @property
    def groupWithDraw(self) -> RepeatedCompositeFieldContainer[PbGroupMsgWithDrawResp]: ...

    def __init__(self,
        *,
        c2CWithDraw : Optional[Iterable[PbC2CMsgWithDrawResp]] = ...,
        groupWithDraw : Optional[Iterable[PbGroupMsgWithDrawResp]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal[u"c2CWithDraw",b"c2CWithDraw",u"groupWithDraw",b"groupWithDraw"]) -> None: ...

class PbPullDiscussMsgSeqReq(Message):
    DESCRIPTOR: Descriptor = ...
    DISCUSSINFOREQ_FIELD_NUMBER: int

    @property
    def discussInfoReq(self) -> RepeatedCompositeFieldContainer[DiscussInfoReq]: ...

    def __init__(self,
        *,
        discussInfoReq : Optional[Iterable[DiscussInfoReq]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal[u"discussInfoReq",b"discussInfoReq"]) -> None: ...

class DiscussInfoReq(Message):
    DESCRIPTOR: Descriptor = ...
    CONFUIN_FIELD_NUMBER: int
    LASTSEQ_FIELD_NUMBER: int
    confUin: int = ...
    lastSeq: int = ...

    def __init__(self,
        *,
        confUin : Optional[int] = ...,
        lastSeq : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"confUin",b"confUin",u"lastSeq",b"lastSeq"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"confUin",b"confUin",u"lastSeq",b"lastSeq"]) -> None: ...

class PbPullDiscussMsgSeqResp(Message):
    DESCRIPTOR: Descriptor = ...
    RESULT_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    DISCUSSINFORESP_FIELD_NUMBER: int
    result: int = ...
    errmsg: Text = ...

    @property
    def discussInfoResp(self) -> RepeatedCompositeFieldContainer[DiscussInfoResp]: ...

    def __init__(self,
        *,
        result : Optional[int] = ...,
        errmsg : Optional[Text] = ...,
        discussInfoResp : Optional[Iterable[DiscussInfoResp]] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"errmsg",b"errmsg",u"result",b"result"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"discussInfoResp",b"discussInfoResp",u"errmsg",b"errmsg",u"result",b"result"]) -> None: ...

class DiscussInfoResp(Message):
    DESCRIPTOR: Descriptor = ...
    CONFUIN_FIELD_NUMBER: int
    MEMBERSEQ_FIELD_NUMBER: int
    CONFSEQ_FIELD_NUMBER: int
    confUin: int = ...
    memberSeq: int = ...
    confSeq: int = ...

    def __init__(self,
        *,
        confUin : Optional[int] = ...,
        memberSeq : Optional[int] = ...,
        confSeq : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"confSeq",b"confSeq",u"confUin",b"confUin",u"memberSeq",b"memberSeq"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"confSeq",b"confSeq",u"confUin",b"confUin",u"memberSeq",b"memberSeq"]) -> None: ...

class PbPullGroupMsgSeqReq(Message):
    DESCRIPTOR: Descriptor = ...
    GROUPINFOREQ_FIELD_NUMBER: int

    @property
    def groupInfoReq(self) -> RepeatedCompositeFieldContainer[GroupInfoReq]: ...

    def __init__(self,
        *,
        groupInfoReq : Optional[Iterable[GroupInfoReq]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal[u"groupInfoReq",b"groupInfoReq"]) -> None: ...

class GroupInfoReq(Message):
    DESCRIPTOR: Descriptor = ...
    GROUPCODE_FIELD_NUMBER: int
    LASTSEQ_FIELD_NUMBER: int
    groupCode: int = ...
    lastSeq: int = ...

    def __init__(self,
        *,
        groupCode : Optional[int] = ...,
        lastSeq : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"groupCode",b"groupCode",u"lastSeq",b"lastSeq"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"groupCode",b"groupCode",u"lastSeq",b"lastSeq"]) -> None: ...

class PbPullGroupMsgSeqResp(Message):
    DESCRIPTOR: Descriptor = ...
    RESULT_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    GROUPINFORESP_FIELD_NUMBER: int
    result: int = ...
    errmsg: Text = ...

    @property
    def groupInfoResp(self) -> RepeatedCompositeFieldContainer[GroupInfoResp]: ...

    def __init__(self,
        *,
        result : Optional[int] = ...,
        errmsg : Optional[Text] = ...,
        groupInfoResp : Optional[Iterable[GroupInfoResp]] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"errmsg",b"errmsg",u"result",b"result"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"errmsg",b"errmsg",u"groupInfoResp",b"groupInfoResp",u"result",b"result"]) -> None: ...

class GroupInfoResp(Message):
    DESCRIPTOR: Descriptor = ...
    GROUPCODE_FIELD_NUMBER: int
    MEMBERSEQ_FIELD_NUMBER: int
    GROUPSEQ_FIELD_NUMBER: int
    groupCode: int = ...
    memberSeq: int = ...
    groupSeq: int = ...

    def __init__(self,
        *,
        groupCode : Optional[int] = ...,
        memberSeq : Optional[int] = ...,
        groupSeq : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"groupCode",b"groupCode",u"groupSeq",b"groupSeq",u"memberSeq",b"memberSeq"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"groupCode",b"groupCode",u"groupSeq",b"groupSeq",u"memberSeq",b"memberSeq"]) -> None: ...

class PbSearchRoamMsgInCloudReq(Message):
    DESCRIPTOR: Descriptor = ...
    SERIALIZEREQBODY_FIELD_NUMBER: int
    serializeReqbody: bytes = ...

    def __init__(self,
        *,
        serializeReqbody : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"serializeReqbody",b"serializeReqbody"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"serializeReqbody",b"serializeReqbody"]) -> None: ...

class PbSearchRoamMsgInCloudResp(Message):
    DESCRIPTOR: Descriptor = ...
    MSG_FIELD_NUMBER: int
    SERIALIZERSPBODY_FIELD_NUMBER: int
    serializeRspbody: bytes = ...

    @property
    def msg(self) -> RepeatedCompositeFieldContainer[Msg]: ...

    def __init__(self,
        *,
        msg : Optional[Iterable[Msg]] = ...,
        serializeRspbody : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"serializeRspbody",b"serializeRspbody"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"msg",b"msg",u"serializeRspbody",b"serializeRspbody"]) -> None: ...

class PbSendMsgReq(Message):
    DESCRIPTOR: Descriptor = ...
    ROUTINGHEAD_FIELD_NUMBER: int
    CONTENTHEAD_FIELD_NUMBER: int
    BODY_FIELD_NUMBER: int
    SEQ_FIELD_NUMBER: int
    RAND_FIELD_NUMBER: int
    SYNCCOOKIE_FIELD_NUMBER: int
    APPSHARE_FIELD_NUMBER: int
    VIA_FIELD_NUMBER: int
    DATASTATIST_FIELD_NUMBER: int
    MULTIMSGASSIST_FIELD_NUMBER: int
    INPUTNOTIFYINFO_FIELD_NUMBER: int
    CTRL_FIELD_NUMBER: int
    RECEIPTREQ_FIELD_NUMBER: int
    MULTISENDSEQ_FIELD_NUMBER: int
    seq: int = ...
    rand: int = ...
    syncCookie: bytes = ...
    via: int = ...
    dataStatist: int = ...
    multiSendSeq: int = ...

    @property
    def routingHead(self) -> RoutingHead: ...

    @property
    def contentHead(self) -> ContentHead: ...

    @property
    def body(self) -> MsgBody: ...

    @property
    def appShare(self) -> AppShareInfo: ...

    @property
    def multiMsgAssist(self) -> MultiMsgAssist: ...

    @property
    def inputNotifyInfo(self) -> PbInputNotifyInfo: ...

    @property
    def ctrl(self) -> MsgCtrl: ...

    @property
    def receiptReq(self) -> ReceiptReq: ...

    def __init__(self,
        *,
        routingHead : Optional[RoutingHead] = ...,
        contentHead : Optional[ContentHead] = ...,
        body : Optional[MsgBody] = ...,
        seq : Optional[int] = ...,
        rand : Optional[int] = ...,
        syncCookie : Optional[bytes] = ...,
        appShare : Optional[AppShareInfo] = ...,
        via : Optional[int] = ...,
        dataStatist : Optional[int] = ...,
        multiMsgAssist : Optional[MultiMsgAssist] = ...,
        inputNotifyInfo : Optional[PbInputNotifyInfo] = ...,
        ctrl : Optional[MsgCtrl] = ...,
        receiptReq : Optional[ReceiptReq] = ...,
        multiSendSeq : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"appShare",b"appShare",u"body",b"body",u"contentHead",b"contentHead",u"ctrl",b"ctrl",u"dataStatist",b"dataStatist",u"inputNotifyInfo",b"inputNotifyInfo",u"multiMsgAssist",b"multiMsgAssist",u"multiSendSeq",b"multiSendSeq",u"rand",b"rand",u"receiptReq",b"receiptReq",u"routingHead",b"routingHead",u"seq",b"seq",u"syncCookie",b"syncCookie",u"via",b"via"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"appShare",b"appShare",u"body",b"body",u"contentHead",b"contentHead",u"ctrl",b"ctrl",u"dataStatist",b"dataStatist",u"inputNotifyInfo",b"inputNotifyInfo",u"multiMsgAssist",b"multiMsgAssist",u"multiSendSeq",b"multiSendSeq",u"rand",b"rand",u"receiptReq",b"receiptReq",u"routingHead",b"routingHead",u"seq",b"seq",u"syncCookie",b"syncCookie",u"via",b"via"]) -> None: ...

class PbSendMsgResp(Message):
    DESCRIPTOR: Descriptor = ...
    RESULT_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    SENDTIME_FIELD_NUMBER: int
    SVRBUSYWAITTIME_FIELD_NUMBER: int
    SENDINFO_FIELD_NUMBER: int
    ERRTYPE_FIELD_NUMBER: int
    TRANSSVRINFO_FIELD_NUMBER: int
    RECEIPTRESP_FIELD_NUMBER: int
    TEXTANALYSISRESULT_FIELD_NUMBER: int
    MSGINFOFLAG_FIELD_NUMBER: int
    result: int = ...
    errmsg: Text = ...
    sendTime: int = ...
    svrbusyWaitTime: int = ...
    errtype: int = ...
    textAnalysisResult: int = ...
    msgInfoFlag: int = ...

    @property
    def sendInfo(self) -> MsgSendInfo: ...

    @property
    def transSvrInfo(self) -> TransSvrInfo: ...

    @property
    def receiptResp(self) -> ReceiptResp: ...

    def __init__(self,
        *,
        result : Optional[int] = ...,
        errmsg : Optional[Text] = ...,
        sendTime : Optional[int] = ...,
        svrbusyWaitTime : Optional[int] = ...,
        sendInfo : Optional[MsgSendInfo] = ...,
        errtype : Optional[int] = ...,
        transSvrInfo : Optional[TransSvrInfo] = ...,
        receiptResp : Optional[ReceiptResp] = ...,
        textAnalysisResult : Optional[int] = ...,
        msgInfoFlag : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"errmsg",b"errmsg",u"errtype",b"errtype",u"msgInfoFlag",b"msgInfoFlag",u"receiptResp",b"receiptResp",u"result",b"result",u"sendInfo",b"sendInfo",u"sendTime",b"sendTime",u"svrbusyWaitTime",b"svrbusyWaitTime",u"textAnalysisResult",b"textAnalysisResult",u"transSvrInfo",b"transSvrInfo"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"errmsg",b"errmsg",u"errtype",b"errtype",u"msgInfoFlag",b"msgInfoFlag",u"receiptResp",b"receiptResp",u"result",b"result",u"sendInfo",b"sendInfo",u"sendTime",b"sendTime",u"svrbusyWaitTime",b"svrbusyWaitTime",u"textAnalysisResult",b"textAnalysisResult",u"transSvrInfo",b"transSvrInfo"]) -> None: ...

class PbThirdQQUnReadMsgNumReq(Message):
    DESCRIPTOR: Descriptor = ...
    THIRDQQREQINFO_FIELD_NUMBER: int
    SOURCE_FIELD_NUMBER: int
    source: int = ...

    @property
    def thirdqqReqInfo(self) -> RepeatedCompositeFieldContainer[ThirdQQReqInfo]: ...

    def __init__(self,
        *,
        thirdqqReqInfo : Optional[Iterable[ThirdQQReqInfo]] = ...,
        source : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"source",b"source"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"source",b"source",u"thirdqqReqInfo",b"thirdqqReqInfo"]) -> None: ...

class ThirdQQReqInfo(Message):
    DESCRIPTOR: Descriptor = ...
    THIRDUIN_FIELD_NUMBER: int
    THIRDUINSIG_FIELD_NUMBER: int
    THIRDUINCOOKIE_FIELD_NUMBER: int
    thirdUin: int = ...
    thirdUinSig: bytes = ...
    thirdUinCookie: bytes = ...

    def __init__(self,
        *,
        thirdUin : Optional[int] = ...,
        thirdUinSig : Optional[bytes] = ...,
        thirdUinCookie : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"thirdUin",b"thirdUin",u"thirdUinCookie",b"thirdUinCookie",u"thirdUinSig",b"thirdUinSig"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"thirdUin",b"thirdUin",u"thirdUinCookie",b"thirdUinCookie",u"thirdUinSig",b"thirdUinSig"]) -> None: ...

class PbThirdQQUnReadMsgNumResp(Message):
    DESCRIPTOR: Descriptor = ...
    RESULT_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    THIRDQQRESPINFO_FIELD_NUMBER: int
    INTERVAL_FIELD_NUMBER: int
    result: int = ...
    errmsg: Text = ...
    interval: int = ...

    @property
    def thirdqqRespInfo(self) -> RepeatedCompositeFieldContainer[ThirdQQRespInfo]: ...

    def __init__(self,
        *,
        result : Optional[int] = ...,
        errmsg : Optional[Text] = ...,
        thirdqqRespInfo : Optional[Iterable[ThirdQQRespInfo]] = ...,
        interval : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"errmsg",b"errmsg",u"interval",b"interval",u"result",b"result"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"errmsg",b"errmsg",u"interval",b"interval",u"result",b"result",u"thirdqqRespInfo",b"thirdqqRespInfo"]) -> None: ...

class ThirdQQRespInfo(Message):
    DESCRIPTOR: Descriptor = ...
    THIRDUIN_FIELD_NUMBER: int
    THIRDUINCOOKIE_FIELD_NUMBER: int
    NUM_FIELD_NUMBER: int
    FLAG_FIELD_NUMBER: int
    REDBAGTIME_FIELD_NUMBER: int
    STATUS_FIELD_NUMBER: int
    LASTMSGTIME_FIELD_NUMBER: int
    thirdUin: int = ...
    thirdUinCookie: bytes = ...
    num: int = ...
    flag: int = ...
    redbagTime: int = ...
    status: int = ...
    lastMsgTime: int = ...

    def __init__(self,
        *,
        thirdUin : Optional[int] = ...,
        thirdUinCookie : Optional[bytes] = ...,
        num : Optional[int] = ...,
        flag : Optional[int] = ...,
        redbagTime : Optional[int] = ...,
        status : Optional[int] = ...,
        lastMsgTime : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"flag",b"flag",u"lastMsgTime",b"lastMsgTime",u"num",b"num",u"redbagTime",b"redbagTime",u"status",b"status",u"thirdUin",b"thirdUin",u"thirdUinCookie",b"thirdUinCookie"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"flag",b"flag",u"lastMsgTime",b"lastMsgTime",u"num",b"num",u"redbagTime",b"redbagTime",u"status",b"status",u"thirdUin",b"thirdUin",u"thirdUinCookie",b"thirdUinCookie"]) -> None: ...

class PbUnReadMsgSeqReq(Message):
    DESCRIPTOR: Descriptor = ...
    C2CUNREADINFO_FIELD_NUMBER: int
    BINDUINUNREADINFO_FIELD_NUMBER: int
    GROUPUNREADINFO_FIELD_NUMBER: int
    DISCUSSUNREADINFO_FIELD_NUMBER: int
    THIRDQQUNREADINFO_FIELD_NUMBER: int

    @property
    def c2CUnreadInfo(self) -> PbC2CUnReadMsgNumReq: ...

    @property
    def binduinUnreadInfo(self) -> RepeatedCompositeFieldContainer[PbBindUinUnReadMsgNumReq]: ...

    @property
    def groupUnreadInfo(self) -> PbPullGroupMsgSeqReq: ...

    @property
    def discussUnreadInfo(self) -> PbPullDiscussMsgSeqReq: ...

    @property
    def thirdqqUnreadInfo(self) -> PbThirdQQUnReadMsgNumReq: ...

    def __init__(self,
        *,
        c2CUnreadInfo : Optional[PbC2CUnReadMsgNumReq] = ...,
        binduinUnreadInfo : Optional[Iterable[PbBindUinUnReadMsgNumReq]] = ...,
        groupUnreadInfo : Optional[PbPullGroupMsgSeqReq] = ...,
        discussUnreadInfo : Optional[PbPullDiscussMsgSeqReq] = ...,
        thirdqqUnreadInfo : Optional[PbThirdQQUnReadMsgNumReq] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"c2CUnreadInfo",b"c2CUnreadInfo",u"discussUnreadInfo",b"discussUnreadInfo",u"groupUnreadInfo",b"groupUnreadInfo",u"thirdqqUnreadInfo",b"thirdqqUnreadInfo"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"binduinUnreadInfo",b"binduinUnreadInfo",u"c2CUnreadInfo",b"c2CUnreadInfo",u"discussUnreadInfo",b"discussUnreadInfo",u"groupUnreadInfo",b"groupUnreadInfo",u"thirdqqUnreadInfo",b"thirdqqUnreadInfo"]) -> None: ...

class PbUnReadMsgSeqResp(Message):
    DESCRIPTOR: Descriptor = ...
    C2CUNREADINFO_FIELD_NUMBER: int
    BINDUINUNREADINFO_FIELD_NUMBER: int
    GROUPUNREADINFO_FIELD_NUMBER: int
    DISCUSSUNREADINFO_FIELD_NUMBER: int
    THIRDQQUNREADINFO_FIELD_NUMBER: int

    @property
    def c2CUnreadInfo(self) -> PbC2CUnReadMsgNumResp: ...

    @property
    def binduinUnreadInfo(self) -> RepeatedCompositeFieldContainer[PbBindUinUnReadMsgNumResp]: ...

    @property
    def groupUnreadInfo(self) -> PbPullGroupMsgSeqResp: ...

    @property
    def discussUnreadInfo(self) -> PbPullDiscussMsgSeqResp: ...

    @property
    def thirdqqUnreadInfo(self) -> PbThirdQQUnReadMsgNumResp: ...

    def __init__(self,
        *,
        c2CUnreadInfo : Optional[PbC2CUnReadMsgNumResp] = ...,
        binduinUnreadInfo : Optional[Iterable[PbBindUinUnReadMsgNumResp]] = ...,
        groupUnreadInfo : Optional[PbPullGroupMsgSeqResp] = ...,
        discussUnreadInfo : Optional[PbPullDiscussMsgSeqResp] = ...,
        thirdqqUnreadInfo : Optional[PbThirdQQUnReadMsgNumResp] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"c2CUnreadInfo",b"c2CUnreadInfo",u"discussUnreadInfo",b"discussUnreadInfo",u"groupUnreadInfo",b"groupUnreadInfo",u"thirdqqUnreadInfo",b"thirdqqUnreadInfo"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"binduinUnreadInfo",b"binduinUnreadInfo",u"c2CUnreadInfo",b"c2CUnreadInfo",u"discussUnreadInfo",b"discussUnreadInfo",u"groupUnreadInfo",b"groupUnreadInfo",u"thirdqqUnreadInfo",b"thirdqqUnreadInfo"]) -> None: ...

class PubGroupTmp(Message):
    DESCRIPTOR: Descriptor = ...
    TOUIN_FIELD_NUMBER: int
    SIG_FIELD_NUMBER: int
    GROUPUIN_FIELD_NUMBER: int
    toUin: int = ...
    sig: bytes = ...
    groupUin: int = ...

    def __init__(self,
        *,
        toUin : Optional[int] = ...,
        sig : Optional[bytes] = ...,
        groupUin : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"groupUin",b"groupUin",u"sig",b"sig",u"toUin",b"toUin"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"groupUin",b"groupUin",u"sig",b"sig",u"toUin",b"toUin"]) -> None: ...

class PublicPlat(Message):
    DESCRIPTOR: Descriptor = ...
    TOUIN_FIELD_NUMBER: int
    SIG_FIELD_NUMBER: int
    toUin: int = ...
    sig: bytes = ...

    def __init__(self,
        *,
        toUin : Optional[int] = ...,
        sig : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"sig",b"sig",u"toUin",b"toUin"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"sig",b"sig",u"toUin",b"toUin"]) -> None: ...

class QQQueryBusinessTmp(Message):
    DESCRIPTOR: Descriptor = ...
    TOUIN_FIELD_NUMBER: int
    SIG_FIELD_NUMBER: int
    toUin: int = ...
    sig: bytes = ...

    def __init__(self,
        *,
        toUin : Optional[int] = ...,
        sig : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"sig",b"sig",u"toUin",b"toUin"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"sig",b"sig",u"toUin",b"toUin"]) -> None: ...

class RichStatusTmp(Message):
    DESCRIPTOR: Descriptor = ...
    TOUIN_FIELD_NUMBER: int
    SIG_FIELD_NUMBER: int
    toUin: int = ...
    sig: bytes = ...

    def __init__(self,
        *,
        toUin : Optional[int] = ...,
        sig : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"sig",b"sig",u"toUin",b"toUin"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"sig",b"sig",u"toUin",b"toUin"]) -> None: ...

class RoutingHead(Message):
    DESCRIPTOR: Descriptor = ...
    C2C_FIELD_NUMBER: int
    GRP_FIELD_NUMBER: int
    GRPTMP_FIELD_NUMBER: int
    DIS_FIELD_NUMBER: int
    DISTMP_FIELD_NUMBER: int
    WPATMP_FIELD_NUMBER: int
    PUBLICPLAT_FIELD_NUMBER: int
    TRANSMSG_FIELD_NUMBER: int
    ADDRESSLIST_FIELD_NUMBER: int
    RICHSTATUSTMP_FIELD_NUMBER: int
    TRANSCMD_FIELD_NUMBER: int
    ACCOSTTMP_FIELD_NUMBER: int
    PUBGROUPTMP_FIELD_NUMBER: int
    TRANS_0X211_FIELD_NUMBER: int
    BUSINESSWPATMP_FIELD_NUMBER: int
    AUTHTMP_FIELD_NUMBER: int
    BSNSTMP_FIELD_NUMBER: int
    QQQUERYBUSINESSTMP_FIELD_NUMBER: int
    NEARBYDATINGTMP_FIELD_NUMBER: int
    NEARBYASSISTANTTMP_FIELD_NUMBER: int
    COMMTMP_FIELD_NUMBER: int

    @property
    def c2C(self) -> C2C: ...

    @property
    def grp(self) -> Grp: ...

    @property
    def grpTmp(self) -> GrpTmp: ...

    @property
    def dis(self) -> Dis: ...

    @property
    def disTmp(self) -> DisTmp: ...

    @property
    def wpaTmp(self) -> WPATmp: ...

    @property
    def publicPlat(self) -> PublicPlat: ...

    @property
    def transMsg(self) -> TransMsg: ...

    @property
    def addressList(self) -> AddressListTmp: ...

    @property
    def richStatusTmp(self) -> RichStatusTmp: ...

    @property
    def transCmd(self) -> TransCmd: ...

    @property
    def accostTmp(self) -> AccostTmp: ...

    @property
    def pubGroupTmp(self) -> PubGroupTmp: ...

    @property
    def trans_0X211(self) -> Trans0x211: ...

    @property
    def businessWpaTmp(self) -> BusinessWPATmp: ...

    @property
    def authTmp(self) -> AuthTmp: ...

    @property
    def bsnsTmp(self) -> BsnsTmp: ...

    @property
    def qqQuerybusinessTmp(self) -> QQQueryBusinessTmp: ...

    @property
    def nearbyDatingTmp(self) -> NearByDatingTmp: ...

    @property
    def nearbyAssistantTmp(self) -> NearByAssistantTmp: ...

    @property
    def commTmp(self) -> CommTmp: ...

    def __init__(self,
        *,
        c2C : Optional[C2C] = ...,
        grp : Optional[Grp] = ...,
        grpTmp : Optional[GrpTmp] = ...,
        dis : Optional[Dis] = ...,
        disTmp : Optional[DisTmp] = ...,
        wpaTmp : Optional[WPATmp] = ...,
        publicPlat : Optional[PublicPlat] = ...,
        transMsg : Optional[TransMsg] = ...,
        addressList : Optional[AddressListTmp] = ...,
        richStatusTmp : Optional[RichStatusTmp] = ...,
        transCmd : Optional[TransCmd] = ...,
        accostTmp : Optional[AccostTmp] = ...,
        pubGroupTmp : Optional[PubGroupTmp] = ...,
        trans_0X211 : Optional[Trans0x211] = ...,
        businessWpaTmp : Optional[BusinessWPATmp] = ...,
        authTmp : Optional[AuthTmp] = ...,
        bsnsTmp : Optional[BsnsTmp] = ...,
        qqQuerybusinessTmp : Optional[QQQueryBusinessTmp] = ...,
        nearbyDatingTmp : Optional[NearByDatingTmp] = ...,
        nearbyAssistantTmp : Optional[NearByAssistantTmp] = ...,
        commTmp : Optional[CommTmp] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"accostTmp",b"accostTmp",u"addressList",b"addressList",u"authTmp",b"authTmp",u"bsnsTmp",b"bsnsTmp",u"businessWpaTmp",b"businessWpaTmp",u"c2C",b"c2C",u"commTmp",b"commTmp",u"dis",b"dis",u"disTmp",b"disTmp",u"grp",b"grp",u"grpTmp",b"grpTmp",u"nearbyAssistantTmp",b"nearbyAssistantTmp",u"nearbyDatingTmp",b"nearbyDatingTmp",u"pubGroupTmp",b"pubGroupTmp",u"publicPlat",b"publicPlat",u"qqQuerybusinessTmp",b"qqQuerybusinessTmp",u"richStatusTmp",b"richStatusTmp",u"transCmd",b"transCmd",u"transMsg",b"transMsg",u"trans_0X211",b"trans_0X211",u"wpaTmp",b"wpaTmp"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"accostTmp",b"accostTmp",u"addressList",b"addressList",u"authTmp",b"authTmp",u"bsnsTmp",b"bsnsTmp",u"businessWpaTmp",b"businessWpaTmp",u"c2C",b"c2C",u"commTmp",b"commTmp",u"dis",b"dis",u"disTmp",b"disTmp",u"grp",b"grp",u"grpTmp",b"grpTmp",u"nearbyAssistantTmp",b"nearbyAssistantTmp",u"nearbyDatingTmp",b"nearbyDatingTmp",u"pubGroupTmp",b"pubGroupTmp",u"publicPlat",b"publicPlat",u"qqQuerybusinessTmp",b"qqQuerybusinessTmp",u"richStatusTmp",b"richStatusTmp",u"transCmd",b"transCmd",u"transMsg",b"transMsg",u"trans_0X211",b"trans_0X211",u"wpaTmp",b"wpaTmp"]) -> None: ...

class Trans0x211(Message):
    DESCRIPTOR: Descriptor = ...
    TOUIN_FIELD_NUMBER: int
    CCCMD_FIELD_NUMBER: int
    INSTCTRL_FIELD_NUMBER: int
    SIG_FIELD_NUMBER: int
    C2CTYPE_FIELD_NUMBER: int
    SERVICETYPE_FIELD_NUMBER: int
    DATALINEFLAG_FIELD_NUMBER: int
    toUin: int = ...
    ccCmd: int = ...
    sig: bytes = ...
    c2CType: int = ...
    serviceType: int = ...
    datalineFlag: int = ...

    @property
    def instCtrl(self) -> InstCtrl: ...

    def __init__(self,
        *,
        toUin : Optional[int] = ...,
        ccCmd : Optional[int] = ...,
        instCtrl : Optional[InstCtrl] = ...,
        sig : Optional[bytes] = ...,
        c2CType : Optional[int] = ...,
        serviceType : Optional[int] = ...,
        datalineFlag : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"c2CType",b"c2CType",u"ccCmd",b"ccCmd",u"datalineFlag",b"datalineFlag",u"instCtrl",b"instCtrl",u"serviceType",b"serviceType",u"sig",b"sig",u"toUin",b"toUin"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"c2CType",b"c2CType",u"ccCmd",b"ccCmd",u"datalineFlag",b"datalineFlag",u"instCtrl",b"instCtrl",u"serviceType",b"serviceType",u"sig",b"sig",u"toUin",b"toUin"]) -> None: ...

class TransCmd(Message):
    DESCRIPTOR: Descriptor = ...
    TOUIN_FIELD_NUMBER: int
    TYPE_FIELD_NUMBER: int
    toUin: int = ...
    type: int = ...

    def __init__(self,
        *,
        toUin : Optional[int] = ...,
        type : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"toUin",b"toUin",u"type",b"type"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"toUin",b"toUin",u"type",b"type"]) -> None: ...

class TransMsg(Message):
    DESCRIPTOR: Descriptor = ...
    TOUIN_FIELD_NUMBER: int
    C2CCMD_FIELD_NUMBER: int
    toUin: int = ...
    c2CCmd: int = ...

    def __init__(self,
        *,
        toUin : Optional[int] = ...,
        c2CCmd : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"c2CCmd",b"c2CCmd",u"toUin",b"toUin"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"c2CCmd",b"c2CCmd",u"toUin",b"toUin"]) -> None: ...

class TransReq(Message):
    DESCRIPTOR: Descriptor = ...
    COMMAND_FIELD_NUMBER: int
    REQTAG_FIELD_NUMBER: int
    REQBUFF_FIELD_NUMBER: int
    command: int = ...
    reqTag: int = ...
    reqBuff: bytes = ...

    def __init__(self,
        *,
        command : Optional[int] = ...,
        reqTag : Optional[int] = ...,
        reqBuff : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"command",b"command",u"reqBuff",b"reqBuff",u"reqTag",b"reqTag"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"command",b"command",u"reqBuff",b"reqBuff",u"reqTag",b"reqTag"]) -> None: ...

class TransResp(Message):
    DESCRIPTOR: Descriptor = ...
    RESULT_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    RESPTAG_FIELD_NUMBER: int
    RESPBUFF_FIELD_NUMBER: int
    result: int = ...
    errmsg: Text = ...
    respTag: int = ...
    respBuff: bytes = ...

    def __init__(self,
        *,
        result : Optional[int] = ...,
        errmsg : Optional[Text] = ...,
        respTag : Optional[int] = ...,
        respBuff : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"errmsg",b"errmsg",u"respBuff",b"respBuff",u"respTag",b"respTag",u"result",b"result"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"errmsg",b"errmsg",u"respBuff",b"respBuff",u"respTag",b"respTag",u"result",b"result"]) -> None: ...

class TransSvrInfo(Message):
    DESCRIPTOR: Descriptor = ...
    SUBTYPE_FIELD_NUMBER: int
    RETCODE_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    TRANSINFO_FIELD_NUMBER: int
    subType: int = ...
    retCode: int = ...
    errMsg: bytes = ...
    transInfo: bytes = ...

    def __init__(self,
        *,
        subType : Optional[int] = ...,
        retCode : Optional[int] = ...,
        errMsg : Optional[bytes] = ...,
        transInfo : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"errMsg",b"errMsg",u"retCode",b"retCode",u"subType",b"subType",u"transInfo",b"transInfo"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"errMsg",b"errMsg",u"retCode",b"retCode",u"subType",b"subType",u"transInfo",b"transInfo"]) -> None: ...

class WPATmp(Message):
    DESCRIPTOR: Descriptor = ...
    TOUIN_FIELD_NUMBER: int
    SIG_FIELD_NUMBER: int
    toUin: int = ...
    sig: bytes = ...

    def __init__(self,
        *,
        toUin : Optional[int] = ...,
        sig : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"sig",b"sig",u"toUin",b"toUin"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"sig",b"sig",u"toUin",b"toUin"]) -> None: ...

class WithDrawWordingInfo(Message):
    DESCRIPTOR: Descriptor = ...
    ITEMID_FIELD_NUMBER: int
    ITEMNAME_FIELD_NUMBER: int
    itemId: int = ...
    itemName: Text = ...

    def __init__(self,
        *,
        itemId : Optional[int] = ...,
        itemName : Optional[Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"itemId",b"itemId",u"itemName",b"itemName"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"itemId",b"itemId",u"itemName",b"itemName"]) -> None: ...
