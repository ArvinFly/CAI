"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
from builtins import (
    bool,
    bytes,
    int,
)

from cai.pb.im.msg.msg_body.msg_body_pb2 import (
    MsgBody,
)

from cai.pb.im.msg.msg_head.msg_head_pb2 import (
    InstCtrl,
)

from google.protobuf.descriptor import (
    Descriptor,
    FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer,
)

from google.protobuf.message import (
    Message,
)

from typing import (
    Iterable,
    Optional,
    Text,
)

from typing_extensions import (
    Literal,
)


DESCRIPTOR: FileDescriptor = ...

class AppShareInfo(Message):
    DESCRIPTOR: Descriptor = ...
    APPSHAREID_FIELD_NUMBER: int
    APPSHARECOOKIE_FIELD_NUMBER: int
    APPSHARERESOURCE_FIELD_NUMBER: int
    appshareId: int = ...
    appshareCookie: bytes = ...

    @property
    def appshareResource(self) -> PluginInfo: ...

    def __init__(self,
        *,
        appshareId : Optional[int] = ...,
        appshareCookie : Optional[bytes] = ...,
        appshareResource : Optional[PluginInfo] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"appshareCookie",b"appshareCookie",u"appshareId",b"appshareId",u"appshareResource",b"appshareResource"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"appshareCookie",b"appshareCookie",u"appshareId",b"appshareId",u"appshareResource",b"appshareResource"]) -> None: ...

class C2CTmpMsgHead(Message):
    DESCRIPTOR: Descriptor = ...
    C2CTYPE_FIELD_NUMBER: int
    SERVICETYPE_FIELD_NUMBER: int
    GROUPUIN_FIELD_NUMBER: int
    GROUPCODE_FIELD_NUMBER: int
    SIG_FIELD_NUMBER: int
    SIGTYPE_FIELD_NUMBER: int
    FROMPHONE_FIELD_NUMBER: int
    TOPHONE_FIELD_NUMBER: int
    LOCKDISPLAY_FIELD_NUMBER: int
    DIRECTIONFLAG_FIELD_NUMBER: int
    RESERVED_FIELD_NUMBER: int
    BUSINESSNAME_FIELD_NUMBER: int
    BUSINESSSUBCONTENT_FIELD_NUMBER: int
    c2CType: int = ...
    serviceType: int = ...
    groupUin: int = ...
    groupCode: int = ...
    sig: bytes = ...
    sigType: int = ...
    fromPhone: Text = ...
    toPhone: Text = ...
    lockDisplay: int = ...
    directionFlag: int = ...
    reserved: bytes = ...
    businessName: bytes = ...
    businessSubContent: bytes = ...

    def __init__(self,
        *,
        c2CType : Optional[int] = ...,
        serviceType : Optional[int] = ...,
        groupUin : Optional[int] = ...,
        groupCode : Optional[int] = ...,
        sig : Optional[bytes] = ...,
        sigType : Optional[int] = ...,
        fromPhone : Optional[Text] = ...,
        toPhone : Optional[Text] = ...,
        lockDisplay : Optional[int] = ...,
        directionFlag : Optional[int] = ...,
        reserved : Optional[bytes] = ...,
        businessName : Optional[bytes] = ...,
        businessSubContent : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"businessName",b"businessName",u"businessSubContent",b"businessSubContent",u"c2CType",b"c2CType",u"directionFlag",b"directionFlag",u"fromPhone",b"fromPhone",u"groupCode",b"groupCode",u"groupUin",b"groupUin",u"lockDisplay",b"lockDisplay",u"reserved",b"reserved",u"serviceType",b"serviceType",u"sig",b"sig",u"sigType",b"sigType",u"toPhone",b"toPhone"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"businessName",b"businessName",u"businessSubContent",b"businessSubContent",u"c2CType",b"c2CType",u"directionFlag",b"directionFlag",u"fromPhone",b"fromPhone",u"groupCode",b"groupCode",u"groupUin",b"groupUin",u"lockDisplay",b"lockDisplay",u"reserved",b"reserved",u"serviceType",b"serviceType",u"sig",b"sig",u"sigType",b"sigType",u"toPhone",b"toPhone"]) -> None: ...

class ContentHead(Message):
    DESCRIPTOR: Descriptor = ...
    PKGNUM_FIELD_NUMBER: int
    PKGINDEX_FIELD_NUMBER: int
    DIVSEQ_FIELD_NUMBER: int
    AUTOREPLY_FIELD_NUMBER: int
    pkgNum: int = ...
    pkgIndex: int = ...
    divSeq: int = ...
    autoReply: int = ...

    def __init__(self,
        *,
        pkgNum : Optional[int] = ...,
        pkgIndex : Optional[int] = ...,
        divSeq : Optional[int] = ...,
        autoReply : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"autoReply",b"autoReply",u"divSeq",b"divSeq",u"pkgIndex",b"pkgIndex",u"pkgNum",b"pkgNum"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"autoReply",b"autoReply",u"divSeq",b"divSeq",u"pkgIndex",b"pkgIndex",u"pkgNum",b"pkgNum"]) -> None: ...

class DiscussInfo(Message):
    DESCRIPTOR: Descriptor = ...
    DISCUSSUIN_FIELD_NUMBER: int
    DISCUSSTYPE_FIELD_NUMBER: int
    DISCUSSINFOSEQ_FIELD_NUMBER: int
    DISCUSSREMARK_FIELD_NUMBER: int
    DISCUSSNAME_FIELD_NUMBER: int
    discussUin: int = ...
    discussType: int = ...
    discussInfoSeq: int = ...
    discussRemark: bytes = ...
    discussName: bytes = ...

    def __init__(self,
        *,
        discussUin : Optional[int] = ...,
        discussType : Optional[int] = ...,
        discussInfoSeq : Optional[int] = ...,
        discussRemark : Optional[bytes] = ...,
        discussName : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"discussInfoSeq",b"discussInfoSeq",u"discussName",b"discussName",u"discussRemark",b"discussRemark",u"discussType",b"discussType",u"discussUin",b"discussUin"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"discussInfoSeq",b"discussInfoSeq",u"discussName",b"discussName",u"discussRemark",b"discussRemark",u"discussType",b"discussType",u"discussUin",b"discussUin"]) -> None: ...

class ExtGroupKeyInfo(Message):
    DESCRIPTOR: Descriptor = ...
    CURMAXSEQ_FIELD_NUMBER: int
    CURTIME_FIELD_NUMBER: int
    OPERATEBYPARENTS_FIELD_NUMBER: int
    EXTGROUPINFO_FIELD_NUMBER: int
    curMaxSeq: int = ...
    curTime: int = ...
    operateByParents: int = ...
    extGroupInfo: bytes = ...

    def __init__(self,
        *,
        curMaxSeq : Optional[int] = ...,
        curTime : Optional[int] = ...,
        operateByParents : Optional[int] = ...,
        extGroupInfo : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"curMaxSeq",b"curMaxSeq",u"curTime",b"curTime",u"extGroupInfo",b"extGroupInfo",u"operateByParents",b"operateByParents"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"curMaxSeq",b"curMaxSeq",u"curTime",b"curTime",u"extGroupInfo",b"extGroupInfo",u"operateByParents",b"operateByParents"]) -> None: ...

class GroupInfo(Message):
    DESCRIPTOR: Descriptor = ...
    GROUPCODE_FIELD_NUMBER: int
    GROUPTYPE_FIELD_NUMBER: int
    GROUPINFOSEQ_FIELD_NUMBER: int
    GROUPCARD_FIELD_NUMBER: int
    GROUPRANK_FIELD_NUMBER: int
    GROUPLEVEL_FIELD_NUMBER: int
    GROUPCARDTYPE_FIELD_NUMBER: int
    GROUPNAME_FIELD_NUMBER: int
    groupCode: int = ...
    groupType: int = ...
    groupInfoSeq: int = ...
    groupCard: bytes = ...
    groupRank: bytes = ...
    groupLevel: int = ...
    groupCardType: int = ...
    groupName: bytes = ...

    def __init__(self,
        *,
        groupCode : Optional[int] = ...,
        groupType : Optional[int] = ...,
        groupInfoSeq : Optional[int] = ...,
        groupCard : Optional[bytes] = ...,
        groupRank : Optional[bytes] = ...,
        groupLevel : Optional[int] = ...,
        groupCardType : Optional[int] = ...,
        groupName : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"groupCard",b"groupCard",u"groupCardType",b"groupCardType",u"groupCode",b"groupCode",u"groupInfoSeq",b"groupInfoSeq",u"groupLevel",b"groupLevel",u"groupName",b"groupName",u"groupRank",b"groupRank",u"groupType",b"groupType"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"groupCard",b"groupCard",u"groupCardType",b"groupCardType",u"groupCode",b"groupCode",u"groupInfoSeq",b"groupInfoSeq",u"groupLevel",b"groupLevel",u"groupName",b"groupName",u"groupRank",b"groupRank",u"groupType",b"groupType"]) -> None: ...

class Msg(Message):
    DESCRIPTOR: Descriptor = ...
    HEAD_FIELD_NUMBER: int
    CONTENTHEAD_FIELD_NUMBER: int
    BODY_FIELD_NUMBER: int
    APPSHAREINFO_FIELD_NUMBER: int

    @property
    def head(self) -> MsgHead: ...

    @property
    def contentHead(self) -> ContentHead: ...

    @property
    def body(self) -> MsgBody: ...

    @property
    def appshareInfo(self) -> AppShareInfo: ...

    def __init__(self,
        *,
        head : Optional[MsgHead] = ...,
        contentHead : Optional[ContentHead] = ...,
        body : Optional[MsgBody] = ...,
        appshareInfo : Optional[AppShareInfo] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"appshareInfo",b"appshareInfo",u"body",b"body",u"contentHead",b"contentHead",u"head",b"head"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"appshareInfo",b"appshareInfo",u"body",b"body",u"contentHead",b"contentHead",u"head",b"head"]) -> None: ...

class MsgHead(Message):
    DESCRIPTOR: Descriptor = ...
    FROMUIN_FIELD_NUMBER: int
    TOUIN_FIELD_NUMBER: int
    TYPE_FIELD_NUMBER: int
    C2CCMD_FIELD_NUMBER: int
    SEQ_FIELD_NUMBER: int
    TIME_FIELD_NUMBER: int
    UID_FIELD_NUMBER: int
    C2CTMPMSGHEAD_FIELD_NUMBER: int
    GROUPINFO_FIELD_NUMBER: int
    FROMAPPID_FIELD_NUMBER: int
    FROMINSTID_FIELD_NUMBER: int
    USERACTIVE_FIELD_NUMBER: int
    DISCUSSINFO_FIELD_NUMBER: int
    FROMNICK_FIELD_NUMBER: int
    AUTHUIN_FIELD_NUMBER: int
    AUTHNICK_FIELD_NUMBER: int
    FLAG_FIELD_NUMBER: int
    AUTHREMARK_FIELD_NUMBER: int
    GROUPNAME_FIELD_NUMBER: int
    MUTILTRANSHEAD_FIELD_NUMBER: int
    INSTCTRL_FIELD_NUMBER: int
    PUBLICACCOUNTGROUPSENDFLAG_FIELD_NUMBER: int
    WSEQINC2CMSGHEAD_FIELD_NUMBER: int
    CPID_FIELD_NUMBER: int
    EXTGROUPKEYINFO_FIELD_NUMBER: int
    MULTICOMPATIBLETEXT_FIELD_NUMBER: int
    AUTHSEX_FIELD_NUMBER: int
    ISSRCMSG_FIELD_NUMBER: int
    fromUin: int = ...
    toUin: int = ...
    type: int = ...
    c2CCmd: int = ...
    seq: int = ...
    time: int = ...
    uid: int = ...
    fromAppid: int = ...
    fromInstid: int = ...
    userActive: int = ...
    fromNick: Text = ...
    authUin: int = ...
    authNick: Text = ...
    flag: int = ...
    authRemark: Text = ...
    groupName: Text = ...
    publicAccountGroupSendFlag: int = ...
    wseqInC2CMsghead: int = ...
    cpid: int = ...
    multiCompatibleText: Text = ...
    authSex: int = ...
    isSrcMsg: bool = ...

    @property
    def c2CTmpMsgHead(self) -> C2CTmpMsgHead: ...

    @property
    def groupInfo(self) -> GroupInfo: ...

    @property
    def discussInfo(self) -> DiscussInfo: ...

    @property
    def mutiltransHead(self) -> MutilTransHead: ...

    @property
    def instCtrl(self) -> InstCtrl: ...

    @property
    def extGroupKeyInfo(self) -> ExtGroupKeyInfo: ...

    def __init__(self,
        *,
        fromUin : Optional[int] = ...,
        toUin : Optional[int] = ...,
        type : Optional[int] = ...,
        c2CCmd : Optional[int] = ...,
        seq : Optional[int] = ...,
        time : Optional[int] = ...,
        uid : Optional[int] = ...,
        c2CTmpMsgHead : Optional[C2CTmpMsgHead] = ...,
        groupInfo : Optional[GroupInfo] = ...,
        fromAppid : Optional[int] = ...,
        fromInstid : Optional[int] = ...,
        userActive : Optional[int] = ...,
        discussInfo : Optional[DiscussInfo] = ...,
        fromNick : Optional[Text] = ...,
        authUin : Optional[int] = ...,
        authNick : Optional[Text] = ...,
        flag : Optional[int] = ...,
        authRemark : Optional[Text] = ...,
        groupName : Optional[Text] = ...,
        mutiltransHead : Optional[MutilTransHead] = ...,
        instCtrl : Optional[InstCtrl] = ...,
        publicAccountGroupSendFlag : Optional[int] = ...,
        wseqInC2CMsghead : Optional[int] = ...,
        cpid : Optional[int] = ...,
        extGroupKeyInfo : Optional[ExtGroupKeyInfo] = ...,
        multiCompatibleText : Optional[Text] = ...,
        authSex : Optional[int] = ...,
        isSrcMsg : Optional[bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"authNick",b"authNick",u"authRemark",b"authRemark",u"authSex",b"authSex",u"authUin",b"authUin",u"c2CCmd",b"c2CCmd",u"c2CTmpMsgHead",b"c2CTmpMsgHead",u"cpid",b"cpid",u"discussInfo",b"discussInfo",u"extGroupKeyInfo",b"extGroupKeyInfo",u"flag",b"flag",u"fromAppid",b"fromAppid",u"fromInstid",b"fromInstid",u"fromNick",b"fromNick",u"fromUin",b"fromUin",u"groupInfo",b"groupInfo",u"groupName",b"groupName",u"instCtrl",b"instCtrl",u"isSrcMsg",b"isSrcMsg",u"multiCompatibleText",b"multiCompatibleText",u"mutiltransHead",b"mutiltransHead",u"publicAccountGroupSendFlag",b"publicAccountGroupSendFlag",u"seq",b"seq",u"time",b"time",u"toUin",b"toUin",u"type",b"type",u"uid",b"uid",u"userActive",b"userActive",u"wseqInC2CMsghead",b"wseqInC2CMsghead"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"authNick",b"authNick",u"authRemark",b"authRemark",u"authSex",b"authSex",u"authUin",b"authUin",u"c2CCmd",b"c2CCmd",u"c2CTmpMsgHead",b"c2CTmpMsgHead",u"cpid",b"cpid",u"discussInfo",b"discussInfo",u"extGroupKeyInfo",b"extGroupKeyInfo",u"flag",b"flag",u"fromAppid",b"fromAppid",u"fromInstid",b"fromInstid",u"fromNick",b"fromNick",u"fromUin",b"fromUin",u"groupInfo",b"groupInfo",u"groupName",b"groupName",u"instCtrl",b"instCtrl",u"isSrcMsg",b"isSrcMsg",u"multiCompatibleText",b"multiCompatibleText",u"mutiltransHead",b"mutiltransHead",u"publicAccountGroupSendFlag",b"publicAccountGroupSendFlag",u"seq",b"seq",u"time",b"time",u"toUin",b"toUin",u"type",b"type",u"uid",b"uid",u"userActive",b"userActive",u"wseqInC2CMsghead",b"wseqInC2CMsghead"]) -> None: ...

class MsgType0x210(Message):
    DESCRIPTOR: Descriptor = ...
    SUBMSGTYPE_FIELD_NUMBER: int
    CONTENT_FIELD_NUMBER: int
    subMsgType: int = ...
    content: bytes = ...

    def __init__(self,
        *,
        subMsgType : Optional[int] = ...,
        content : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"content",b"content",u"subMsgType",b"subMsgType"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"content",b"content",u"subMsgType",b"subMsgType"]) -> None: ...

class MutilTransHead(Message):
    DESCRIPTOR: Descriptor = ...
    STATUS_FIELD_NUMBER: int
    MSGID_FIELD_NUMBER: int
    status: int = ...
    msgId: int = ...

    def __init__(self,
        *,
        status : Optional[int] = ...,
        msgId : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"msgId",b"msgId",u"status",b"status"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"msgId",b"msgId",u"status",b"status"]) -> None: ...

class PluginInfo(Message):
    DESCRIPTOR: Descriptor = ...
    RESID_FIELD_NUMBER: int
    PKGNAME_FIELD_NUMBER: int
    NEWVER_FIELD_NUMBER: int
    RESTYPE_FIELD_NUMBER: int
    LANTYPE_FIELD_NUMBER: int
    PRIORITY_FIELD_NUMBER: int
    RESNAME_FIELD_NUMBER: int
    RESDESC_FIELD_NUMBER: int
    RESURLBIG_FIELD_NUMBER: int
    RESURLSMALL_FIELD_NUMBER: int
    RESCONF_FIELD_NUMBER: int
    resId: int = ...
    pkgName: Text = ...
    newVer: int = ...
    resType: int = ...
    lanType: int = ...
    priority: int = ...
    resName: Text = ...
    resDesc: Text = ...
    resUrlBig: Text = ...
    resUrlSmall: Text = ...
    resConf: Text = ...

    def __init__(self,
        *,
        resId : Optional[int] = ...,
        pkgName : Optional[Text] = ...,
        newVer : Optional[int] = ...,
        resType : Optional[int] = ...,
        lanType : Optional[int] = ...,
        priority : Optional[int] = ...,
        resName : Optional[Text] = ...,
        resDesc : Optional[Text] = ...,
        resUrlBig : Optional[Text] = ...,
        resUrlSmall : Optional[Text] = ...,
        resConf : Optional[Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"lanType",b"lanType",u"newVer",b"newVer",u"pkgName",b"pkgName",u"priority",b"priority",u"resConf",b"resConf",u"resDesc",b"resDesc",u"resId",b"resId",u"resName",b"resName",u"resType",b"resType",u"resUrlBig",b"resUrlBig",u"resUrlSmall",b"resUrlSmall"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"lanType",b"lanType",u"newVer",b"newVer",u"pkgName",b"pkgName",u"priority",b"priority",u"resConf",b"resConf",u"resDesc",b"resDesc",u"resId",b"resId",u"resName",b"resName",u"resType",b"resType",u"resUrlBig",b"resUrlBig",u"resUrlSmall",b"resUrlSmall"]) -> None: ...

class Uin2Nick(Message):
    DESCRIPTOR: Descriptor = ...
    UIN_FIELD_NUMBER: int
    NICK_FIELD_NUMBER: int
    uin: int = ...
    nick: Text = ...

    def __init__(self,
        *,
        uin : Optional[int] = ...,
        nick : Optional[Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"nick",b"nick",u"uin",b"uin"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"nick",b"nick",u"uin",b"uin"]) -> None: ...

class UinPairMsg(Message):
    DESCRIPTOR: Descriptor = ...
    LASTREADTIME_FIELD_NUMBER: int
    PEERUIN_FIELD_NUMBER: int
    COMPLETED_FIELD_NUMBER: int
    MSG_FIELD_NUMBER: int
    UNREADMSGNUM_FIELD_NUMBER: int
    C2CTYPE_FIELD_NUMBER: int
    SERVICETYPE_FIELD_NUMBER: int
    PBRESERVE_FIELD_NUMBER: int
    TOTINYID_FIELD_NUMBER: int
    lastReadTime: int = ...
    peerUin: int = ...
    completed: int = ...
    unreadMsgNum: int = ...
    c2CType: int = ...
    serviceType: int = ...
    pbReserve: bytes = ...
    toTinyId: int = ...

    @property
    def msg(self) -> RepeatedCompositeFieldContainer[Msg]: ...

    def __init__(self,
        *,
        lastReadTime : Optional[int] = ...,
        peerUin : Optional[int] = ...,
        completed : Optional[int] = ...,
        msg : Optional[Iterable[Msg]] = ...,
        unreadMsgNum : Optional[int] = ...,
        c2CType : Optional[int] = ...,
        serviceType : Optional[int] = ...,
        pbReserve : Optional[bytes] = ...,
        toTinyId : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"c2CType",b"c2CType",u"completed",b"completed",u"lastReadTime",b"lastReadTime",u"pbReserve",b"pbReserve",u"peerUin",b"peerUin",u"serviceType",b"serviceType",u"toTinyId",b"toTinyId",u"unreadMsgNum",b"unreadMsgNum"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"c2CType",b"c2CType",u"completed",b"completed",u"lastReadTime",b"lastReadTime",u"msg",b"msg",u"pbReserve",b"pbReserve",u"peerUin",b"peerUin",u"serviceType",b"serviceType",u"toTinyId",b"toTinyId",u"unreadMsgNum",b"unreadMsgNum"]) -> None: ...
