"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
from builtins import (
    bool,
    bytes,
    int,
)

from google.protobuf.descriptor import (
    Descriptor,
    FileDescriptor,
)

from google.protobuf.message import (
    Message,
)

from typing import (
    Optional,
    Text,
)

from typing_extensions import (
    Literal,
)


DESCRIPTOR: FileDescriptor = ...

class GroupInfo(Message):
    DESCRIPTOR: Descriptor = ...
    GROUPID_FIELD_NUMBER: int
    GROUPTYPE_FIELD_NUMBER: int
    groupId: int = ...
    groupType: int = ...

    def __init__(self,
        *,
        groupId : Optional[int] = ...,
        groupType : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"groupId",b"groupId",u"groupType",b"groupType"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"groupId",b"groupId",u"groupType",b"groupType"]) -> None: ...

class Signature(Message):
    DESCRIPTOR: Descriptor = ...
    KEYTYPE_FIELD_NUMBER: int
    SESSIONAPPID_FIELD_NUMBER: int
    SESSIONKEY_FIELD_NUMBER: int
    keyType: int = ...
    sessionAppId: int = ...
    sessionKey: bytes = ...

    def __init__(self,
        *,
        keyType : Optional[int] = ...,
        sessionAppId : Optional[int] = ...,
        sessionKey : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"keyType",b"keyType",u"sessionAppId",b"sessionAppId",u"sessionKey",b"sessionKey"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"keyType",b"keyType",u"sessionAppId",b"sessionAppId",u"sessionKey",b"sessionKey"]) -> None: ...

class Token(Message):
    DESCRIPTOR: Descriptor = ...
    BUF_FIELD_NUMBER: int
    C2CTYPE_FIELD_NUMBER: int
    SERVICETYPE_FIELD_NUMBER: int
    buf: bytes = ...
    c2CType: int = ...
    serviceType: int = ...

    def __init__(self,
        *,
        buf : Optional[bytes] = ...,
        c2CType : Optional[int] = ...,
        serviceType : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"buf",b"buf",u"c2CType",b"c2CType",u"serviceType",b"serviceType"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"buf",b"buf",u"c2CType",b"c2CType",u"serviceType",b"serviceType"]) -> None: ...

class User(Message):
    DESCRIPTOR: Descriptor = ...
    UIN_FIELD_NUMBER: int
    APPID_FIELD_NUMBER: int
    INSTANCEID_FIELD_NUMBER: int
    APPTYPE_FIELD_NUMBER: int
    CLIENTIP_FIELD_NUMBER: int
    VERSION_FIELD_NUMBER: int
    PHONENUMBER_FIELD_NUMBER: int
    PLATFORMID_FIELD_NUMBER: int
    LANGUAGE_FIELD_NUMBER: int
    EQUIPKEY_FIELD_NUMBER: int
    uin: int = ...
    appId: int = ...
    instanceId: int = ...
    appType: int = ...
    clientIp: int = ...
    version: int = ...
    phoneNumber: Text = ...
    platformId: int = ...
    language: int = ...
    equipKey: bytes = ...

    def __init__(self,
        *,
        uin : Optional[int] = ...,
        appId : Optional[int] = ...,
        instanceId : Optional[int] = ...,
        appType : Optional[int] = ...,
        clientIp : Optional[int] = ...,
        version : Optional[int] = ...,
        phoneNumber : Optional[Text] = ...,
        platformId : Optional[int] = ...,
        language : Optional[int] = ...,
        equipKey : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"appId",b"appId",u"appType",b"appType",u"clientIp",b"clientIp",u"equipKey",b"equipKey",u"instanceId",b"instanceId",u"language",b"language",u"phoneNumber",b"phoneNumber",u"platformId",b"platformId",u"uin",b"uin",u"version",b"version"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"appId",b"appId",u"appType",b"appType",u"clientIp",b"clientIp",u"equipKey",b"equipKey",u"instanceId",b"instanceId",u"language",b"language",u"phoneNumber",b"phoneNumber",u"platformId",b"platformId",u"uin",b"uin",u"version",b"version"]) -> None: ...
