"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
from builtins import (
    bool,
    bytes,
    int,
)

from google.protobuf.descriptor import (
    Descriptor,
    FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer,
)

from google.protobuf.message import (
    Message,
)

from typing import (
    Iterable,
    Optional,
    Text,
)

from typing_extensions import (
    Literal,
)


DESCRIPTOR: FileDescriptor = ...

class MsgContentInfo(Message):
    DESCRIPTOR: Descriptor = ...
    CONTENTINFOID_FIELD_NUMBER: int
    FILE_FIELD_NUMBER: int
    ContentInfoId: bytes = ...

    @property
    def file(self) -> MsgFile: ...

    def __init__(self,
        *,
        ContentInfoId : Optional[bytes] = ...,
        file : Optional[MsgFile] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"ContentInfoId",b"ContentInfoId",u"file",b"file"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"ContentInfoId",b"ContentInfoId",u"file",b"file"]) -> None: ...

class MsgFile(Message):
    DESCRIPTOR: Descriptor = ...
    BUSID_FIELD_NUMBER: int
    FILEPATH_FIELD_NUMBER: int
    FILESIZE_FIELD_NUMBER: int
    FILENAME_FIELD_NUMBER: int
    DEADTIME_FIELD_NUMBER: int
    FILESHA1_FIELD_NUMBER: int
    EXT_FIELD_NUMBER: int
    FILEMD5_FIELD_NUMBER: int
    busId: int = ...
    filePath: bytes = ...
    fileSize: int = ...
    fileName: Text = ...
    deadTime: int = ...
    fileSha1: bytes = ...
    ext: bytes = ...
    fileMd5: bytes = ...

    def __init__(self,
        *,
        busId : Optional[int] = ...,
        filePath : Optional[bytes] = ...,
        fileSize : Optional[int] = ...,
        fileName : Optional[Text] = ...,
        deadTime : Optional[int] = ...,
        fileSha1 : Optional[bytes] = ...,
        ext : Optional[bytes] = ...,
        fileMd5 : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"busId",b"busId",u"deadTime",b"deadTime",u"ext",b"ext",u"fileMd5",b"fileMd5",u"fileName",b"fileName",u"filePath",b"filePath",u"fileSha1",b"fileSha1",u"fileSize",b"fileSize"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"busId",b"busId",u"deadTime",b"deadTime",u"ext",b"ext",u"fileMd5",b"fileMd5",u"fileName",b"fileName",u"filePath",b"filePath",u"fileSha1",b"fileSha1",u"fileSize",b"fileSize"]) -> None: ...

class MsgPic(Message):
    DESCRIPTOR: Descriptor = ...
    SMALLPICURL_FIELD_NUMBER: int
    ORIGINALPICURL_FIELD_NUMBER: int
    LOCALPICID_FIELD_NUMBER: int
    smallPicUrl: bytes = ...
    originalPicUrl: bytes = ...
    localPicId: int = ...

    def __init__(self,
        *,
        smallPicUrl : Optional[bytes] = ...,
        originalPicUrl : Optional[bytes] = ...,
        localPicId : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"localPicId",b"localPicId",u"originalPicUrl",b"originalPicUrl",u"smallPicUrl",b"smallPicUrl"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"localPicId",b"localPicId",u"originalPicUrl",b"originalPicUrl",u"smallPicUrl",b"smallPicUrl"]) -> None: ...

class ObjMsg(Message):
    DESCRIPTOR: Descriptor = ...
    MSGTYPE_FIELD_NUMBER: int
    TITLE_FIELD_NUMBER: int
    ABSTACT_FIELD_NUMBER: int
    TITLEEXT_FIELD_NUMBER: int
    PIC_FIELD_NUMBER: int
    CONTENTINFO_FIELD_NUMBER: int
    REPORTIDSHOW_FIELD_NUMBER: int
    msgType: int = ...
    title: bytes = ...
    abstact: RepeatedScalarFieldContainer[bytes] = ...
    titleExt: bytes = ...
    reportIdShow: int = ...

    @property
    def pic(self) -> RepeatedCompositeFieldContainer[MsgPic]: ...

    @property
    def contentInfo(self) -> RepeatedCompositeFieldContainer[MsgContentInfo]: ...

    def __init__(self,
        *,
        msgType : Optional[int] = ...,
        title : Optional[bytes] = ...,
        abstact : Optional[Iterable[bytes]] = ...,
        titleExt : Optional[bytes] = ...,
        pic : Optional[Iterable[MsgPic]] = ...,
        contentInfo : Optional[Iterable[MsgContentInfo]] = ...,
        reportIdShow : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"msgType",b"msgType",u"reportIdShow",b"reportIdShow",u"title",b"title",u"titleExt",b"titleExt"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"abstact",b"abstact",u"contentInfo",b"contentInfo",u"msgType",b"msgType",u"pic",b"pic",u"reportIdShow",b"reportIdShow",u"title",b"title",u"titleExt",b"titleExt"]) -> None: ...
