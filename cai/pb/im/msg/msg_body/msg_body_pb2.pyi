"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
from builtins import (
    bool,
    bytes,
    float,
    int,
)

from google.protobuf.descriptor import (
    Descriptor,
    FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer,
)

from google.protobuf.message import (
    Message,
)

from typing import (
    Iterable,
    Optional,
    Text,
)

from typing_extensions import (
    Literal,
)


DESCRIPTOR: FileDescriptor = ...

class AnonymousGroupMsg(Message):
    DESCRIPTOR: Descriptor = ...
    FLAGS_FIELD_NUMBER: int
    ANONID_FIELD_NUMBER: int
    ANONNICK_FIELD_NUMBER: int
    HEADPORTRAIT_FIELD_NUMBER: int
    EXPIRETIME_FIELD_NUMBER: int
    BUBBLEID_FIELD_NUMBER: int
    RANKCOLOR_FIELD_NUMBER: int
    flags: int = ...
    anonId: bytes = ...
    anonNick: bytes = ...
    headPortrait: int = ...
    expireTime: int = ...
    bubbleId: int = ...
    rankColor: bytes = ...

    def __init__(self,
        *,
        flags : Optional[int] = ...,
        anonId : Optional[bytes] = ...,
        anonNick : Optional[bytes] = ...,
        headPortrait : Optional[int] = ...,
        expireTime : Optional[int] = ...,
        bubbleId : Optional[int] = ...,
        rankColor : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"anonId",b"anonId",u"anonNick",b"anonNick",u"bubbleId",b"bubbleId",u"expireTime",b"expireTime",u"flags",b"flags",u"headPortrait",b"headPortrait",u"rankColor",b"rankColor"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"anonId",b"anonId",u"anonNick",b"anonNick",u"bubbleId",b"bubbleId",u"expireTime",b"expireTime",u"flags",b"flags",u"headPortrait",b"headPortrait",u"rankColor",b"rankColor"]) -> None: ...

class ApolloActMsg(Message):
    DESCRIPTOR: Descriptor = ...
    ACTIONID_FIELD_NUMBER: int
    ACTIONNAME_FIELD_NUMBER: int
    ACTIONTEXT_FIELD_NUMBER: int
    FLAG_FIELD_NUMBER: int
    PEERUIN_FIELD_NUMBER: int
    SENDERTS_FIELD_NUMBER: int
    PEERTS_FIELD_NUMBER: int
    SENDERSTATUS_FIELD_NUMBER: int
    PEERSTATUS_FIELD_NUMBER: int
    DIYTEXTID_FIELD_NUMBER: int
    DIYTEXTCONTENT_FIELD_NUMBER: int
    INPUTTEXT_FIELD_NUMBER: int
    PBRESERVE_FIELD_NUMBER: int
    actionId: int = ...
    actionName: bytes = ...
    actionText: bytes = ...
    flag: int = ...
    peerUin: int = ...
    senderTs: int = ...
    peerTs: int = ...
    senderStatus: int = ...
    peerStatus: int = ...
    diytextId: int = ...
    diytextContent: bytes = ...
    inputText: bytes = ...
    pbReserve: bytes = ...

    def __init__(self,
        *,
        actionId : Optional[int] = ...,
        actionName : Optional[bytes] = ...,
        actionText : Optional[bytes] = ...,
        flag : Optional[int] = ...,
        peerUin : Optional[int] = ...,
        senderTs : Optional[int] = ...,
        peerTs : Optional[int] = ...,
        senderStatus : Optional[int] = ...,
        peerStatus : Optional[int] = ...,
        diytextId : Optional[int] = ...,
        diytextContent : Optional[bytes] = ...,
        inputText : Optional[bytes] = ...,
        pbReserve : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"actionId",b"actionId",u"actionName",b"actionName",u"actionText",b"actionText",u"diytextContent",b"diytextContent",u"diytextId",b"diytextId",u"flag",b"flag",u"inputText",b"inputText",u"pbReserve",b"pbReserve",u"peerStatus",b"peerStatus",u"peerTs",b"peerTs",u"peerUin",b"peerUin",u"senderStatus",b"senderStatus",u"senderTs",b"senderTs"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"actionId",b"actionId",u"actionName",b"actionName",u"actionText",b"actionText",u"diytextContent",b"diytextContent",u"diytextId",b"diytextId",u"flag",b"flag",u"inputText",b"inputText",u"pbReserve",b"pbReserve",u"peerStatus",b"peerStatus",u"peerTs",b"peerTs",u"peerUin",b"peerUin",u"senderStatus",b"senderStatus",u"senderTs",b"senderTs"]) -> None: ...

class ArkAppElem(Message):
    DESCRIPTOR: Descriptor = ...
    APPNAME_FIELD_NUMBER: int
    MINVERSION_FIELD_NUMBER: int
    XMLTEMPLATE_FIELD_NUMBER: int
    DATA_FIELD_NUMBER: int
    appName: Text = ...
    minVersion: Text = ...
    xmlTemplate: Text = ...
    data: bytes = ...

    def __init__(self,
        *,
        appName : Optional[Text] = ...,
        minVersion : Optional[Text] = ...,
        xmlTemplate : Optional[Text] = ...,
        data : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"appName",b"appName",u"data",b"data",u"minVersion",b"minVersion",u"xmlTemplate",b"xmlTemplate"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"appName",b"appName",u"data",b"data",u"minVersion",b"minVersion",u"xmlTemplate",b"xmlTemplate"]) -> None: ...

class Attr(Message):
    DESCRIPTOR: Descriptor = ...
    CODEPAGE_FIELD_NUMBER: int
    TIME_FIELD_NUMBER: int
    RANDOM_FIELD_NUMBER: int
    COLOR_FIELD_NUMBER: int
    SIZE_FIELD_NUMBER: int
    EFFECT_FIELD_NUMBER: int
    CHARSET_FIELD_NUMBER: int
    PITCHANDFAMILY_FIELD_NUMBER: int
    FONTNAME_FIELD_NUMBER: int
    RESERVEDATA_FIELD_NUMBER: int
    codePage: int = ...
    time: int = ...
    random: int = ...
    color: int = ...
    size: int = ...
    effect: int = ...
    charSet: int = ...
    pitchAndFamily: int = ...
    fontName: Text = ...
    reserveData: bytes = ...

    def __init__(self,
        *,
        codePage : Optional[int] = ...,
        time : Optional[int] = ...,
        random : Optional[int] = ...,
        color : Optional[int] = ...,
        size : Optional[int] = ...,
        effect : Optional[int] = ...,
        charSet : Optional[int] = ...,
        pitchAndFamily : Optional[int] = ...,
        fontName : Optional[Text] = ...,
        reserveData : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"charSet",b"charSet",u"codePage",b"codePage",u"color",b"color",u"effect",b"effect",u"fontName",b"fontName",u"pitchAndFamily",b"pitchAndFamily",u"random",b"random",u"reserveData",b"reserveData",u"size",b"size",u"time",b"time"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"charSet",b"charSet",u"codePage",b"codePage",u"color",b"color",u"effect",b"effect",u"fontName",b"fontName",u"pitchAndFamily",b"pitchAndFamily",u"random",b"random",u"reserveData",b"reserveData",u"size",b"size",u"time",b"time"]) -> None: ...

class BitAppMsg(Message):
    DESCRIPTOR: Descriptor = ...
    BUF_FIELD_NUMBER: int
    buf: bytes = ...

    def __init__(self,
        *,
        buf : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"buf",b"buf"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"buf",b"buf"]) -> None: ...

class BlessingMessage(Message):
    DESCRIPTOR: Descriptor = ...
    MSGTYPE_FIELD_NUMBER: int
    EXFLAG_FIELD_NUMBER: int
    msgType: int = ...
    exFlag: int = ...

    def __init__(self,
        *,
        msgType : Optional[int] = ...,
        exFlag : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"exFlag",b"exFlag",u"msgType",b"msgType"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"exFlag",b"exFlag",u"msgType",b"msgType"]) -> None: ...

class CommonElem(Message):
    DESCRIPTOR: Descriptor = ...
    SERVICETYPE_FIELD_NUMBER: int
    PBELEM_FIELD_NUMBER: int
    BUSINESSTYPE_FIELD_NUMBER: int
    serviceType: int = ...
    pbElem: bytes = ...
    businessType: int = ...

    def __init__(self,
        *,
        serviceType : Optional[int] = ...,
        pbElem : Optional[bytes] = ...,
        businessType : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"businessType",b"businessType",u"pbElem",b"pbElem",u"serviceType",b"serviceType"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"businessType",b"businessType",u"pbElem",b"pbElem",u"serviceType",b"serviceType"]) -> None: ...

class ConferenceTipsInfo(Message):
    DESCRIPTOR: Descriptor = ...
    SESSIONTYPE_FIELD_NUMBER: int
    SESSIONUIN_FIELD_NUMBER: int
    TEXT_FIELD_NUMBER: int
    sessionType: int = ...
    sessionUin: int = ...
    text: Text = ...

    def __init__(self,
        *,
        sessionType : Optional[int] = ...,
        sessionUin : Optional[int] = ...,
        text : Optional[Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"sessionType",b"sessionType",u"sessionUin",b"sessionUin",u"text",b"text"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"sessionType",b"sessionType",u"sessionUin",b"sessionUin",u"text",b"text"]) -> None: ...

class CrmElem(Message):
    DESCRIPTOR: Descriptor = ...
    CRMBUF_FIELD_NUMBER: int
    MSGRESID_FIELD_NUMBER: int
    QIDIANFLAG_FIELD_NUMBER: int
    PUSHFLAG_FIELD_NUMBER: int
    COUNTFLAG_FIELD_NUMBER: int
    crmBuf: bytes = ...
    msgResid: bytes = ...
    qidianFlag: int = ...
    pushFlag: int = ...
    countFlag: int = ...

    def __init__(self,
        *,
        crmBuf : Optional[bytes] = ...,
        msgResid : Optional[bytes] = ...,
        qidianFlag : Optional[int] = ...,
        pushFlag : Optional[int] = ...,
        countFlag : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"countFlag",b"countFlag",u"crmBuf",b"crmBuf",u"msgResid",b"msgResid",u"pushFlag",b"pushFlag",u"qidianFlag",b"qidianFlag"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"countFlag",b"countFlag",u"crmBuf",b"crmBuf",u"msgResid",b"msgResid",u"pushFlag",b"pushFlag",u"qidianFlag",b"qidianFlag"]) -> None: ...

class CustomElem(Message):
    DESCRIPTOR: Descriptor = ...
    DESC_FIELD_NUMBER: int
    DATA_FIELD_NUMBER: int
    ENUMTYPE_FIELD_NUMBER: int
    EXT_FIELD_NUMBER: int
    SOUND_FIELD_NUMBER: int
    desc: bytes = ...
    data: bytes = ...
    enumType: int = ...
    ext: bytes = ...
    sound: bytes = ...

    def __init__(self,
        *,
        desc : Optional[bytes] = ...,
        data : Optional[bytes] = ...,
        enumType : Optional[int] = ...,
        ext : Optional[bytes] = ...,
        sound : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"data",b"data",u"desc",b"desc",u"enumType",b"enumType",u"ext",b"ext",u"sound",b"sound"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"data",b"data",u"desc",b"desc",u"enumType",b"enumType",u"ext",b"ext",u"sound",b"sound"]) -> None: ...

class CustomFace(Message):
    DESCRIPTOR: Descriptor = ...
    GUID_FIELD_NUMBER: int
    FILEPATH_FIELD_NUMBER: int
    SHORTCUT_FIELD_NUMBER: int
    BUFFER_FIELD_NUMBER: int
    FLAG_FIELD_NUMBER: int
    OLDDATA_FIELD_NUMBER: int
    FILEID_FIELD_NUMBER: int
    SERVERIP_FIELD_NUMBER: int
    SERVERPORT_FIELD_NUMBER: int
    FILETYPE_FIELD_NUMBER: int
    SIGNATURE_FIELD_NUMBER: int
    USEFUL_FIELD_NUMBER: int
    MD5_FIELD_NUMBER: int
    THUMBURL_FIELD_NUMBER: int
    BIGURL_FIELD_NUMBER: int
    ORIGURL_FIELD_NUMBER: int
    BIZTYPE_FIELD_NUMBER: int
    REPEATINDEX_FIELD_NUMBER: int
    REPEATIMAGE_FIELD_NUMBER: int
    IMAGETYPE_FIELD_NUMBER: int
    INDEX_FIELD_NUMBER: int
    WIDTH_FIELD_NUMBER: int
    HEIGHT_FIELD_NUMBER: int
    SOURCE_FIELD_NUMBER: int
    SIZE_FIELD_NUMBER: int
    ORIGIN_FIELD_NUMBER: int
    THUMBWIDTH_FIELD_NUMBER: int
    THUMBHEIGHT_FIELD_NUMBER: int
    SHOWLEN_FIELD_NUMBER: int
    DOWNLOADLEN_FIELD_NUMBER: int
    _400URL_FIELD_NUMBER: int
    _400WIDTH_FIELD_NUMBER: int
    _400HEIGHT_FIELD_NUMBER: int
    PBRESERVE_FIELD_NUMBER: int
    guid: bytes = ...
    filePath: Text = ...
    shortcut: Text = ...
    buffer: bytes = ...
    flag: bytes = ...
    oldData: bytes = ...
    fileId: int = ...
    serverIp: int = ...
    serverPort: int = ...
    fileType: int = ...
    signature: bytes = ...
    useful: int = ...
    md5: bytes = ...
    thumbUrl: Text = ...
    bigUrl: Text = ...
    origUrl: Text = ...
    bizType: int = ...
    repeatIndex: int = ...
    repeatImage: int = ...
    imageType: int = ...
    index: int = ...
    width: int = ...
    height: int = ...
    source: int = ...
    size: int = ...
    origin: int = ...
    thumbWidth: int = ...
    thumbHeight: int = ...
    showLen: int = ...
    downloadLen: int = ...
    _400Url: Text = ...
    _400Width: int = ...
    _400Height: int = ...
    pbReserve: bytes = ...

    def __init__(self,
        *,
        guid : Optional[bytes] = ...,
        filePath : Optional[Text] = ...,
        shortcut : Optional[Text] = ...,
        buffer : Optional[bytes] = ...,
        flag : Optional[bytes] = ...,
        oldData : Optional[bytes] = ...,
        fileId : Optional[int] = ...,
        serverIp : Optional[int] = ...,
        serverPort : Optional[int] = ...,
        fileType : Optional[int] = ...,
        signature : Optional[bytes] = ...,
        useful : Optional[int] = ...,
        md5 : Optional[bytes] = ...,
        thumbUrl : Optional[Text] = ...,
        bigUrl : Optional[Text] = ...,
        origUrl : Optional[Text] = ...,
        bizType : Optional[int] = ...,
        repeatIndex : Optional[int] = ...,
        repeatImage : Optional[int] = ...,
        imageType : Optional[int] = ...,
        index : Optional[int] = ...,
        width : Optional[int] = ...,
        height : Optional[int] = ...,
        source : Optional[int] = ...,
        size : Optional[int] = ...,
        origin : Optional[int] = ...,
        thumbWidth : Optional[int] = ...,
        thumbHeight : Optional[int] = ...,
        showLen : Optional[int] = ...,
        downloadLen : Optional[int] = ...,
        _400Url : Optional[Text] = ...,
        _400Width : Optional[int] = ...,
        _400Height : Optional[int] = ...,
        pbReserve : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"_400Height",b"_400Height",u"_400Url",b"_400Url",u"_400Width",b"_400Width",u"bigUrl",b"bigUrl",u"bizType",b"bizType",u"buffer",b"buffer",u"downloadLen",b"downloadLen",u"fileId",b"fileId",u"filePath",b"filePath",u"fileType",b"fileType",u"flag",b"flag",u"guid",b"guid",u"height",b"height",u"imageType",b"imageType",u"index",b"index",u"md5",b"md5",u"oldData",b"oldData",u"origUrl",b"origUrl",u"origin",b"origin",u"pbReserve",b"pbReserve",u"repeatImage",b"repeatImage",u"repeatIndex",b"repeatIndex",u"serverIp",b"serverIp",u"serverPort",b"serverPort",u"shortcut",b"shortcut",u"showLen",b"showLen",u"signature",b"signature",u"size",b"size",u"source",b"source",u"thumbHeight",b"thumbHeight",u"thumbUrl",b"thumbUrl",u"thumbWidth",b"thumbWidth",u"useful",b"useful",u"width",b"width"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"_400Height",b"_400Height",u"_400Url",b"_400Url",u"_400Width",b"_400Width",u"bigUrl",b"bigUrl",u"bizType",b"bizType",u"buffer",b"buffer",u"downloadLen",b"downloadLen",u"fileId",b"fileId",u"filePath",b"filePath",u"fileType",b"fileType",u"flag",b"flag",u"guid",b"guid",u"height",b"height",u"imageType",b"imageType",u"index",b"index",u"md5",b"md5",u"oldData",b"oldData",u"origUrl",b"origUrl",u"origin",b"origin",u"pbReserve",b"pbReserve",u"repeatImage",b"repeatImage",u"repeatIndex",b"repeatIndex",u"serverIp",b"serverIp",u"serverPort",b"serverPort",u"shortcut",b"shortcut",u"showLen",b"showLen",u"signature",b"signature",u"size",b"size",u"source",b"source",u"thumbHeight",b"thumbHeight",u"thumbUrl",b"thumbUrl",u"thumbWidth",b"thumbWidth",u"useful",b"useful",u"width",b"width"]) -> None: ...

class DeliverGiftMsg(Message):
    DESCRIPTOR: Descriptor = ...
    GRAYTIPCONTENT_FIELD_NUMBER: int
    ANIMATIONPACKAGEID_FIELD_NUMBER: int
    ANIMATIONPACKAGEURLA_FIELD_NUMBER: int
    ANIMATIONPACKAGEURLI_FIELD_NUMBER: int
    REMINDBRIEF_FIELD_NUMBER: int
    GIFTID_FIELD_NUMBER: int
    GIFTCOUNT_FIELD_NUMBER: int
    ANIMATIONBRIEF_FIELD_NUMBER: int
    SENDERUIN_FIELD_NUMBER: int
    RECEIVERUIN_FIELD_NUMBER: int
    STMESSAGETITLE_FIELD_NUMBER: int
    STMESSAGESUBTITLE_FIELD_NUMBER: int
    STMESSAGEMESSAGE_FIELD_NUMBER: int
    STMESSAGEGIFTPICID_FIELD_NUMBER: int
    STMESSAGECOMEFROM_FIELD_NUMBER: int
    STMESSAGEEXFLAG_FIELD_NUMBER: int
    TOALLGIFTID_FIELD_NUMBER: int
    COMEFROMLINK_FIELD_NUMBER: int
    PBRESERVE_FIELD_NUMBER: int
    RECEIVERNAME_FIELD_NUMBER: int
    RECEIVERPIC_FIELD_NUMBER: int
    STMESSAGEGIFTURL_FIELD_NUMBER: int
    grayTipContent: bytes = ...
    animationPackageId: int = ...
    animationPackageUrlA: bytes = ...
    animationPackageUrlI: bytes = ...
    remindBrief: bytes = ...
    giftId: int = ...
    giftCount: int = ...
    animationBrief: bytes = ...
    senderUin: int = ...
    receiverUin: int = ...
    stmessageTitle: bytes = ...
    stmessageSubtitle: bytes = ...
    stmessageMessage: bytes = ...
    stmessageGiftpicid: int = ...
    stmessageComefrom: bytes = ...
    stmessageExflag: int = ...
    toAllGiftId: bytes = ...
    comefromLink: bytes = ...
    pbReserve: bytes = ...
    receiverName: bytes = ...
    receiverPic: bytes = ...
    stmessageGifturl: bytes = ...

    def __init__(self,
        *,
        grayTipContent : Optional[bytes] = ...,
        animationPackageId : Optional[int] = ...,
        animationPackageUrlA : Optional[bytes] = ...,
        animationPackageUrlI : Optional[bytes] = ...,
        remindBrief : Optional[bytes] = ...,
        giftId : Optional[int] = ...,
        giftCount : Optional[int] = ...,
        animationBrief : Optional[bytes] = ...,
        senderUin : Optional[int] = ...,
        receiverUin : Optional[int] = ...,
        stmessageTitle : Optional[bytes] = ...,
        stmessageSubtitle : Optional[bytes] = ...,
        stmessageMessage : Optional[bytes] = ...,
        stmessageGiftpicid : Optional[int] = ...,
        stmessageComefrom : Optional[bytes] = ...,
        stmessageExflag : Optional[int] = ...,
        toAllGiftId : Optional[bytes] = ...,
        comefromLink : Optional[bytes] = ...,
        pbReserve : Optional[bytes] = ...,
        receiverName : Optional[bytes] = ...,
        receiverPic : Optional[bytes] = ...,
        stmessageGifturl : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"animationBrief",b"animationBrief",u"animationPackageId",b"animationPackageId",u"animationPackageUrlA",b"animationPackageUrlA",u"animationPackageUrlI",b"animationPackageUrlI",u"comefromLink",b"comefromLink",u"giftCount",b"giftCount",u"giftId",b"giftId",u"grayTipContent",b"grayTipContent",u"pbReserve",b"pbReserve",u"receiverName",b"receiverName",u"receiverPic",b"receiverPic",u"receiverUin",b"receiverUin",u"remindBrief",b"remindBrief",u"senderUin",b"senderUin",u"stmessageComefrom",b"stmessageComefrom",u"stmessageExflag",b"stmessageExflag",u"stmessageGiftpicid",b"stmessageGiftpicid",u"stmessageGifturl",b"stmessageGifturl",u"stmessageMessage",b"stmessageMessage",u"stmessageSubtitle",b"stmessageSubtitle",u"stmessageTitle",b"stmessageTitle",u"toAllGiftId",b"toAllGiftId"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"animationBrief",b"animationBrief",u"animationPackageId",b"animationPackageId",u"animationPackageUrlA",b"animationPackageUrlA",u"animationPackageUrlI",b"animationPackageUrlI",u"comefromLink",b"comefromLink",u"giftCount",b"giftCount",u"giftId",b"giftId",u"grayTipContent",b"grayTipContent",u"pbReserve",b"pbReserve",u"receiverName",b"receiverName",u"receiverPic",b"receiverPic",u"receiverUin",b"receiverUin",u"remindBrief",b"remindBrief",u"senderUin",b"senderUin",u"stmessageComefrom",b"stmessageComefrom",u"stmessageExflag",b"stmessageExflag",u"stmessageGiftpicid",b"stmessageGiftpicid",u"stmessageGifturl",b"stmessageGifturl",u"stmessageMessage",b"stmessageMessage",u"stmessageSubtitle",b"stmessageSubtitle",u"stmessageTitle",b"stmessageTitle",u"toAllGiftId",b"toAllGiftId"]) -> None: ...

class EIMInfo(Message):
    DESCRIPTOR: Descriptor = ...
    ROOTID_FIELD_NUMBER: int
    FLAG_FIELD_NUMBER: int
    rootId: int = ...
    flag: int = ...

    def __init__(self,
        *,
        rootId : Optional[int] = ...,
        flag : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"flag",b"flag",u"rootId",b"rootId"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"flag",b"flag",u"rootId",b"rootId"]) -> None: ...

class Elem(Message):
    DESCRIPTOR: Descriptor = ...
    TEXT_FIELD_NUMBER: int
    FACE_FIELD_NUMBER: int
    ONLINEIMAGE_FIELD_NUMBER: int
    NOTONLINEIMAGE_FIELD_NUMBER: int
    TRANSELEMINFO_FIELD_NUMBER: int
    MARKETFACE_FIELD_NUMBER: int
    ELEMFLAGS_FIELD_NUMBER: int
    CUSTOMFACE_FIELD_NUMBER: int
    ELEMFLAGS2_FIELD_NUMBER: int
    FUNFACE_FIELD_NUMBER: int
    SECRETFILE_FIELD_NUMBER: int
    RICHMSG_FIELD_NUMBER: int
    GROUPFILE_FIELD_NUMBER: int
    PUBGROUP_FIELD_NUMBER: int
    MARKETTRANS_FIELD_NUMBER: int
    EXTRAINFO_FIELD_NUMBER: int
    SHAKEWINDOW_FIELD_NUMBER: int
    PUBACCOUNT_FIELD_NUMBER: int
    VIDEOFILE_FIELD_NUMBER: int
    TIPSINFO_FIELD_NUMBER: int
    ANONGROUPMSG_FIELD_NUMBER: int
    QQLIVEOLD_FIELD_NUMBER: int
    LIFEONLINE_FIELD_NUMBER: int
    QQWALLETMSG_FIELD_NUMBER: int
    CRMELEM_FIELD_NUMBER: int
    CONFERENCETIPSINFO_FIELD_NUMBER: int
    REDBAGINFO_FIELD_NUMBER: int
    LOWVERSIONTIPS_FIELD_NUMBER: int
    BANKCODECTRLINFO_FIELD_NUMBER: int
    NEARBYMSG_FIELD_NUMBER: int
    CUSTOMELEM_FIELD_NUMBER: int
    LOCATIONINFO_FIELD_NUMBER: int
    PUBACCINFO_FIELD_NUMBER: int
    SMALLEMOJI_FIELD_NUMBER: int
    FSJMSGELEM_FIELD_NUMBER: int
    ARKAPP_FIELD_NUMBER: int
    GENERALFLAGS_FIELD_NUMBER: int
    HCFLASHPIC_FIELD_NUMBER: int
    DELIVERGIFTMSG_FIELD_NUMBER: int
    BITAPPMSG_FIELD_NUMBER: int
    OPENQQDATA_FIELD_NUMBER: int
    APOLLOMSG_FIELD_NUMBER: int
    GROUPPUBACCINFO_FIELD_NUMBER: int
    BLESSMSG_FIELD_NUMBER: int
    SRCMSG_FIELD_NUMBER: int
    LOLAMSG_FIELD_NUMBER: int
    GROUPBUSINESSMSG_FIELD_NUMBER: int
    WORKFLOWNOTIFY_FIELD_NUMBER: int
    PATELEM_FIELD_NUMBER: int
    GROUPPOSTELEM_FIELD_NUMBER: int
    LIGHTAPP_FIELD_NUMBER: int
    EIMINFO_FIELD_NUMBER: int
    COMMONELEM_FIELD_NUMBER: int
    bankcodeCtrlInfo: bytes = ...

    @property
    def text(self) -> Text: ...

    @property
    def face(self) -> Face: ...

    @property
    def onlineImage(self) -> OnlineImage: ...

    @property
    def notOnlineImage(self) -> NotOnlineImage: ...

    @property
    def transElemInfo(self) -> TransElem: ...

    @property
    def marketFace(self) -> MarketFace: ...

    @property
    def elemFlags(self) -> ElemFlags: ...

    @property
    def customFace(self) -> CustomFace: ...

    @property
    def elemFlags2(self) -> ElemFlags2: ...

    @property
    def funFace(self) -> FunFace: ...

    @property
    def secretFile(self) -> SecretFileMsg: ...

    @property
    def richMsg(self) -> RichMsg: ...

    @property
    def groupFile(self) -> GroupFile: ...

    @property
    def pubGroup(self) -> PubGroup: ...

    @property
    def marketTrans(self) -> MarketTrans: ...

    @property
    def extraInfo(self) -> ExtraInfo: ...

    @property
    def shakeWindow(self) -> ShakeWindow: ...

    @property
    def pubAccount(self) -> PubAccount: ...

    @property
    def videoFile(self) -> VideoFile: ...

    @property
    def tipsInfo(self) -> TipsInfo: ...

    @property
    def anonGroupMsg(self) -> AnonymousGroupMsg: ...

    @property
    def qqLiveOld(self) -> QQLiveOld: ...

    @property
    def lifeOnline(self) -> LifeOnlineAccount: ...

    @property
    def qqwalletMsg(self) -> QQWalletMsg: ...

    @property
    def crmElem(self) -> CrmElem: ...

    @property
    def conferenceTipsInfo(self) -> ConferenceTipsInfo: ...

    @property
    def redbagInfo(self) -> RedBagInfo: ...

    @property
    def lowVersionTips(self) -> LowVersionTips: ...

    @property
    def nearByMsg(self) -> NearByMessageType: ...

    @property
    def customElem(self) -> CustomElem: ...

    @property
    def locationInfo(self) -> LocationInfo: ...

    @property
    def pubAccInfo(self) -> PubAccInfo: ...

    @property
    def smallEmoji(self) -> SmallEmoji: ...

    @property
    def fsjMsgElem(self) -> FSJMessageElem: ...

    @property
    def arkApp(self) -> ArkAppElem: ...

    @property
    def generalFlags(self) -> GeneralFlags: ...

    @property
    def hcFlashPic(self) -> CustomFace: ...

    @property
    def deliverGiftMsg(self) -> DeliverGiftMsg: ...

    @property
    def bitappMsg(self) -> BitAppMsg: ...

    @property
    def openQqData(self) -> OpenQQData: ...

    @property
    def apolloMsg(self) -> ApolloActMsg: ...

    @property
    def groupPubAccInfo(self) -> GroupPubAccountInfo: ...

    @property
    def blessMsg(self) -> BlessingMessage: ...

    @property
    def srcMsg(self) -> SourceMsg: ...

    @property
    def lolaMsg(self) -> LolaMsg: ...

    @property
    def groupBusinessMsg(self) -> GroupBusinessMsg: ...

    @property
    def workflowNotify(self) -> WorkflowNotifyMsg: ...

    @property
    def patElem(self) -> PatsElem: ...

    @property
    def groupPostElem(self) -> GroupPostElem: ...

    @property
    def lightApp(self) -> LightAppElem: ...

    @property
    def eimInfo(self) -> EIMInfo: ...

    @property
    def commonElem(self) -> CommonElem: ...

    def __init__(self,
        *,
        text : Optional[Text] = ...,
        face : Optional[Face] = ...,
        onlineImage : Optional[OnlineImage] = ...,
        notOnlineImage : Optional[NotOnlineImage] = ...,
        transElemInfo : Optional[TransElem] = ...,
        marketFace : Optional[MarketFace] = ...,
        elemFlags : Optional[ElemFlags] = ...,
        customFace : Optional[CustomFace] = ...,
        elemFlags2 : Optional[ElemFlags2] = ...,
        funFace : Optional[FunFace] = ...,
        secretFile : Optional[SecretFileMsg] = ...,
        richMsg : Optional[RichMsg] = ...,
        groupFile : Optional[GroupFile] = ...,
        pubGroup : Optional[PubGroup] = ...,
        marketTrans : Optional[MarketTrans] = ...,
        extraInfo : Optional[ExtraInfo] = ...,
        shakeWindow : Optional[ShakeWindow] = ...,
        pubAccount : Optional[PubAccount] = ...,
        videoFile : Optional[VideoFile] = ...,
        tipsInfo : Optional[TipsInfo] = ...,
        anonGroupMsg : Optional[AnonymousGroupMsg] = ...,
        qqLiveOld : Optional[QQLiveOld] = ...,
        lifeOnline : Optional[LifeOnlineAccount] = ...,
        qqwalletMsg : Optional[QQWalletMsg] = ...,
        crmElem : Optional[CrmElem] = ...,
        conferenceTipsInfo : Optional[ConferenceTipsInfo] = ...,
        redbagInfo : Optional[RedBagInfo] = ...,
        lowVersionTips : Optional[LowVersionTips] = ...,
        bankcodeCtrlInfo : Optional[bytes] = ...,
        nearByMsg : Optional[NearByMessageType] = ...,
        customElem : Optional[CustomElem] = ...,
        locationInfo : Optional[LocationInfo] = ...,
        pubAccInfo : Optional[PubAccInfo] = ...,
        smallEmoji : Optional[SmallEmoji] = ...,
        fsjMsgElem : Optional[FSJMessageElem] = ...,
        arkApp : Optional[ArkAppElem] = ...,
        generalFlags : Optional[GeneralFlags] = ...,
        hcFlashPic : Optional[CustomFace] = ...,
        deliverGiftMsg : Optional[DeliverGiftMsg] = ...,
        bitappMsg : Optional[BitAppMsg] = ...,
        openQqData : Optional[OpenQQData] = ...,
        apolloMsg : Optional[ApolloActMsg] = ...,
        groupPubAccInfo : Optional[GroupPubAccountInfo] = ...,
        blessMsg : Optional[BlessingMessage] = ...,
        srcMsg : Optional[SourceMsg] = ...,
        lolaMsg : Optional[LolaMsg] = ...,
        groupBusinessMsg : Optional[GroupBusinessMsg] = ...,
        workflowNotify : Optional[WorkflowNotifyMsg] = ...,
        patElem : Optional[PatsElem] = ...,
        groupPostElem : Optional[GroupPostElem] = ...,
        lightApp : Optional[LightAppElem] = ...,
        eimInfo : Optional[EIMInfo] = ...,
        commonElem : Optional[CommonElem] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"anonGroupMsg",b"anonGroupMsg",u"apolloMsg",b"apolloMsg",u"arkApp",b"arkApp",u"bankcodeCtrlInfo",b"bankcodeCtrlInfo",u"bitappMsg",b"bitappMsg",u"blessMsg",b"blessMsg",u"commonElem",b"commonElem",u"conferenceTipsInfo",b"conferenceTipsInfo",u"crmElem",b"crmElem",u"customElem",b"customElem",u"customFace",b"customFace",u"deliverGiftMsg",b"deliverGiftMsg",u"eimInfo",b"eimInfo",u"elemFlags",b"elemFlags",u"elemFlags2",b"elemFlags2",u"extraInfo",b"extraInfo",u"face",b"face",u"fsjMsgElem",b"fsjMsgElem",u"funFace",b"funFace",u"generalFlags",b"generalFlags",u"groupBusinessMsg",b"groupBusinessMsg",u"groupFile",b"groupFile",u"groupPostElem",b"groupPostElem",u"groupPubAccInfo",b"groupPubAccInfo",u"hcFlashPic",b"hcFlashPic",u"lifeOnline",b"lifeOnline",u"lightApp",b"lightApp",u"locationInfo",b"locationInfo",u"lolaMsg",b"lolaMsg",u"lowVersionTips",b"lowVersionTips",u"marketFace",b"marketFace",u"marketTrans",b"marketTrans",u"nearByMsg",b"nearByMsg",u"notOnlineImage",b"notOnlineImage",u"onlineImage",b"onlineImage",u"openQqData",b"openQqData",u"patElem",b"patElem",u"pubAccInfo",b"pubAccInfo",u"pubAccount",b"pubAccount",u"pubGroup",b"pubGroup",u"qqLiveOld",b"qqLiveOld",u"qqwalletMsg",b"qqwalletMsg",u"redbagInfo",b"redbagInfo",u"richMsg",b"richMsg",u"secretFile",b"secretFile",u"shakeWindow",b"shakeWindow",u"smallEmoji",b"smallEmoji",u"srcMsg",b"srcMsg",u"text",b"text",u"tipsInfo",b"tipsInfo",u"transElemInfo",b"transElemInfo",u"videoFile",b"videoFile",u"workflowNotify",b"workflowNotify"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"anonGroupMsg",b"anonGroupMsg",u"apolloMsg",b"apolloMsg",u"arkApp",b"arkApp",u"bankcodeCtrlInfo",b"bankcodeCtrlInfo",u"bitappMsg",b"bitappMsg",u"blessMsg",b"blessMsg",u"commonElem",b"commonElem",u"conferenceTipsInfo",b"conferenceTipsInfo",u"crmElem",b"crmElem",u"customElem",b"customElem",u"customFace",b"customFace",u"deliverGiftMsg",b"deliverGiftMsg",u"eimInfo",b"eimInfo",u"elemFlags",b"elemFlags",u"elemFlags2",b"elemFlags2",u"extraInfo",b"extraInfo",u"face",b"face",u"fsjMsgElem",b"fsjMsgElem",u"funFace",b"funFace",u"generalFlags",b"generalFlags",u"groupBusinessMsg",b"groupBusinessMsg",u"groupFile",b"groupFile",u"groupPostElem",b"groupPostElem",u"groupPubAccInfo",b"groupPubAccInfo",u"hcFlashPic",b"hcFlashPic",u"lifeOnline",b"lifeOnline",u"lightApp",b"lightApp",u"locationInfo",b"locationInfo",u"lolaMsg",b"lolaMsg",u"lowVersionTips",b"lowVersionTips",u"marketFace",b"marketFace",u"marketTrans",b"marketTrans",u"nearByMsg",b"nearByMsg",u"notOnlineImage",b"notOnlineImage",u"onlineImage",b"onlineImage",u"openQqData",b"openQqData",u"patElem",b"patElem",u"pubAccInfo",b"pubAccInfo",u"pubAccount",b"pubAccount",u"pubGroup",b"pubGroup",u"qqLiveOld",b"qqLiveOld",u"qqwalletMsg",b"qqwalletMsg",u"redbagInfo",b"redbagInfo",u"richMsg",b"richMsg",u"secretFile",b"secretFile",u"shakeWindow",b"shakeWindow",u"smallEmoji",b"smallEmoji",u"srcMsg",b"srcMsg",u"text",b"text",u"tipsInfo",b"tipsInfo",u"transElemInfo",b"transElemInfo",u"videoFile",b"videoFile",u"workflowNotify",b"workflowNotify"]) -> None: ...

class ElemFlags(Message):
    DESCRIPTOR: Descriptor = ...
    FLAGS1_FIELD_NUMBER: int
    BUSINESSDATA_FIELD_NUMBER: int
    flags1: bytes = ...
    businessData: bytes = ...

    def __init__(self,
        *,
        flags1 : Optional[bytes] = ...,
        businessData : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"businessData",b"businessData",u"flags1",b"flags1"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"businessData",b"businessData",u"flags1",b"flags1"]) -> None: ...

class ElemFlags2(Message):
    DESCRIPTOR: Descriptor = ...
    COLORTEXTID_FIELD_NUMBER: int
    MSGID_FIELD_NUMBER: int
    WHISPERSESSIONID_FIELD_NUMBER: int
    PTTCHANGEBIT_FIELD_NUMBER: int
    VIPSTATUS_FIELD_NUMBER: int
    COMPATIBLEID_FIELD_NUMBER: int
    INSTS_FIELD_NUMBER: int
    MSGRPTCNT_FIELD_NUMBER: int
    SRCINST_FIELD_NUMBER: int
    LONGTITUDE_FIELD_NUMBER: int
    LATITUDE_FIELD_NUMBER: int
    CUSTOMFONT_FIELD_NUMBER: int
    PCSUPPORTDEF_FIELD_NUMBER: int
    CRMFLAGS_FIELD_NUMBER: int
    colorTextId: int = ...
    msgId: int = ...
    whisperSessionId: int = ...
    pttChangeBit: int = ...
    vipStatus: int = ...
    compatibleId: int = ...
    msgRptCnt: int = ...
    longtitude: int = ...
    latitude: int = ...
    customFont: int = ...
    crmFlags: int = ...

    @property
    def insts(self) -> RepeatedCompositeFieldContainer[Inst]: ...

    @property
    def srcInst(self) -> Inst: ...

    @property
    def pcSupportDef(self) -> PcSupportDef: ...

    def __init__(self,
        *,
        colorTextId : Optional[int] = ...,
        msgId : Optional[int] = ...,
        whisperSessionId : Optional[int] = ...,
        pttChangeBit : Optional[int] = ...,
        vipStatus : Optional[int] = ...,
        compatibleId : Optional[int] = ...,
        insts : Optional[Iterable[Inst]] = ...,
        msgRptCnt : Optional[int] = ...,
        srcInst : Optional[Inst] = ...,
        longtitude : Optional[int] = ...,
        latitude : Optional[int] = ...,
        customFont : Optional[int] = ...,
        pcSupportDef : Optional[PcSupportDef] = ...,
        crmFlags : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"colorTextId",b"colorTextId",u"compatibleId",b"compatibleId",u"crmFlags",b"crmFlags",u"customFont",b"customFont",u"latitude",b"latitude",u"longtitude",b"longtitude",u"msgId",b"msgId",u"msgRptCnt",b"msgRptCnt",u"pcSupportDef",b"pcSupportDef",u"pttChangeBit",b"pttChangeBit",u"srcInst",b"srcInst",u"vipStatus",b"vipStatus",u"whisperSessionId",b"whisperSessionId"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"colorTextId",b"colorTextId",u"compatibleId",b"compatibleId",u"crmFlags",b"crmFlags",u"customFont",b"customFont",u"insts",b"insts",u"latitude",b"latitude",u"longtitude",b"longtitude",u"msgId",b"msgId",u"msgRptCnt",b"msgRptCnt",u"pcSupportDef",b"pcSupportDef",u"pttChangeBit",b"pttChangeBit",u"srcInst",b"srcInst",u"vipStatus",b"vipStatus",u"whisperSessionId",b"whisperSessionId"]) -> None: ...

class Inst(Message):
    DESCRIPTOR: Descriptor = ...
    APPID_FIELD_NUMBER: int
    INSTID_FIELD_NUMBER: int
    appId: int = ...
    instId: int = ...

    def __init__(self,
        *,
        appId : Optional[int] = ...,
        instId : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"appId",b"appId",u"instId",b"instId"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"appId",b"appId",u"instId",b"instId"]) -> None: ...

class ExtraInfo(Message):
    DESCRIPTOR: Descriptor = ...
    NICK_FIELD_NUMBER: int
    GROUPCARD_FIELD_NUMBER: int
    LEVEL_FIELD_NUMBER: int
    FLAGS_FIELD_NUMBER: int
    GROUPMASK_FIELD_NUMBER: int
    MSGTAILID_FIELD_NUMBER: int
    SENDERTITLE_FIELD_NUMBER: int
    APNSTIPS_FIELD_NUMBER: int
    UIN_FIELD_NUMBER: int
    MSGSTATEFLAG_FIELD_NUMBER: int
    APNSSOUNDTYPE_FIELD_NUMBER: int
    NEWGROUPFLAG_FIELD_NUMBER: int
    nick: bytes = ...
    groupCard: bytes = ...
    level: int = ...
    flags: int = ...
    groupMask: int = ...
    msgTailId: int = ...
    senderTitle: bytes = ...
    apnsTips: bytes = ...
    uin: int = ...
    msgStateFlag: int = ...
    apnsSoundType: int = ...
    newGroupFlag: int = ...

    def __init__(self,
        *,
        nick : Optional[bytes] = ...,
        groupCard : Optional[bytes] = ...,
        level : Optional[int] = ...,
        flags : Optional[int] = ...,
        groupMask : Optional[int] = ...,
        msgTailId : Optional[int] = ...,
        senderTitle : Optional[bytes] = ...,
        apnsTips : Optional[bytes] = ...,
        uin : Optional[int] = ...,
        msgStateFlag : Optional[int] = ...,
        apnsSoundType : Optional[int] = ...,
        newGroupFlag : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"apnsSoundType",b"apnsSoundType",u"apnsTips",b"apnsTips",u"flags",b"flags",u"groupCard",b"groupCard",u"groupMask",b"groupMask",u"level",b"level",u"msgStateFlag",b"msgStateFlag",u"msgTailId",b"msgTailId",u"newGroupFlag",b"newGroupFlag",u"nick",b"nick",u"senderTitle",b"senderTitle",u"uin",b"uin"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"apnsSoundType",b"apnsSoundType",u"apnsTips",b"apnsTips",u"flags",b"flags",u"groupCard",b"groupCard",u"groupMask",b"groupMask",u"level",b"level",u"msgStateFlag",b"msgStateFlag",u"msgTailId",b"msgTailId",u"newGroupFlag",b"newGroupFlag",u"nick",b"nick",u"senderTitle",b"senderTitle",u"uin",b"uin"]) -> None: ...

class FSJMessageElem(Message):
    DESCRIPTOR: Descriptor = ...
    MSGTYPE_FIELD_NUMBER: int
    msgType: int = ...

    def __init__(self,
        *,
        msgType : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"msgType",b"msgType"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"msgType",b"msgType"]) -> None: ...

class Face(Message):
    DESCRIPTOR: Descriptor = ...
    INDEX_FIELD_NUMBER: int
    OLD_FIELD_NUMBER: int
    BUF_FIELD_NUMBER: int
    index: int = ...
    old: bytes = ...
    buf: bytes = ...

    def __init__(self,
        *,
        index : Optional[int] = ...,
        old : Optional[bytes] = ...,
        buf : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"buf",b"buf",u"index",b"index",u"old",b"old"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"buf",b"buf",u"index",b"index",u"old",b"old"]) -> None: ...

class FunFace(Message):
    DESCRIPTOR: Descriptor = ...
    TURNTABLE_FIELD_NUMBER: int
    BOMB_FIELD_NUMBER: int

    @property
    def turntable(self) -> Turntable: ...

    @property
    def bomb(self) -> Bomb: ...

    def __init__(self,
        *,
        turntable : Optional[Turntable] = ...,
        bomb : Optional[Bomb] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"bomb",b"bomb",u"turntable",b"turntable"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"bomb",b"bomb",u"turntable",b"turntable"]) -> None: ...

class Bomb(Message):
    DESCRIPTOR: Descriptor = ...
    BURST_FIELD_NUMBER: int
    burst: bool = ...

    def __init__(self,
        *,
        burst : Optional[bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"burst",b"burst"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"burst",b"burst"]) -> None: ...

class Turntable(Message):
    DESCRIPTOR: Descriptor = ...
    UINLIST_FIELD_NUMBER: int
    HITUIN_FIELD_NUMBER: int
    HITUINNICK_FIELD_NUMBER: int
    uinList: RepeatedScalarFieldContainer[int] = ...
    hitUin: int = ...
    hitUinNick: Text = ...

    def __init__(self,
        *,
        uinList : Optional[Iterable[int]] = ...,
        hitUin : Optional[int] = ...,
        hitUinNick : Optional[Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"hitUin",b"hitUin",u"hitUinNick",b"hitUinNick"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"hitUin",b"hitUin",u"hitUinNick",b"hitUinNick",u"uinList",b"uinList"]) -> None: ...

class GeneralFlags(Message):
    DESCRIPTOR: Descriptor = ...
    BUBBLEDIYTEXTID_FIELD_NUMBER: int
    GROUPFLAGNEW_FIELD_NUMBER: int
    UIN_FIELD_NUMBER: int
    RPID_FIELD_NUMBER: int
    PRPFOLD_FIELD_NUMBER: int
    LONGTEXTFLAG_FIELD_NUMBER: int
    LONGTEXTRESID_FIELD_NUMBER: int
    GROUPTYPE_FIELD_NUMBER: int
    TOUINFLAG_FIELD_NUMBER: int
    GLAMOURLEVEL_FIELD_NUMBER: int
    MEMBERLEVEL_FIELD_NUMBER: int
    GROUPRANKSEQ_FIELD_NUMBER: int
    OLYMPICTORCH_FIELD_NUMBER: int
    BABYQGUIDEMSGCOOKIE_FIELD_NUMBER: int
    UIN32EXPERTFLAG_FIELD_NUMBER: int
    BUBBLESUBID_FIELD_NUMBER: int
    PENDANTID_FIELD_NUMBER: int
    RPINDEX_FIELD_NUMBER: int
    PBRESERVE_FIELD_NUMBER: int
    bubbleDiyTextId: int = ...
    groupFlagNew: int = ...
    uin: int = ...
    rpId: bytes = ...
    prpFold: int = ...
    longTextFlag: int = ...
    longTextResid: bytes = ...
    groupType: int = ...
    toUinFlag: int = ...
    glamourLevel: int = ...
    memberLevel: int = ...
    groupRankSeq: int = ...
    olympicTorch: int = ...
    babyqGuideMsgCookie: bytes = ...
    uin32ExpertFlag: int = ...
    bubbleSubId: int = ...
    pendantId: int = ...
    rpIndex: bytes = ...
    pbReserve: bytes = ...

    def __init__(self,
        *,
        bubbleDiyTextId : Optional[int] = ...,
        groupFlagNew : Optional[int] = ...,
        uin : Optional[int] = ...,
        rpId : Optional[bytes] = ...,
        prpFold : Optional[int] = ...,
        longTextFlag : Optional[int] = ...,
        longTextResid : Optional[bytes] = ...,
        groupType : Optional[int] = ...,
        toUinFlag : Optional[int] = ...,
        glamourLevel : Optional[int] = ...,
        memberLevel : Optional[int] = ...,
        groupRankSeq : Optional[int] = ...,
        olympicTorch : Optional[int] = ...,
        babyqGuideMsgCookie : Optional[bytes] = ...,
        uin32ExpertFlag : Optional[int] = ...,
        bubbleSubId : Optional[int] = ...,
        pendantId : Optional[int] = ...,
        rpIndex : Optional[bytes] = ...,
        pbReserve : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"babyqGuideMsgCookie",b"babyqGuideMsgCookie",u"bubbleDiyTextId",b"bubbleDiyTextId",u"bubbleSubId",b"bubbleSubId",u"glamourLevel",b"glamourLevel",u"groupFlagNew",b"groupFlagNew",u"groupRankSeq",b"groupRankSeq",u"groupType",b"groupType",u"longTextFlag",b"longTextFlag",u"longTextResid",b"longTextResid",u"memberLevel",b"memberLevel",u"olympicTorch",b"olympicTorch",u"pbReserve",b"pbReserve",u"pendantId",b"pendantId",u"prpFold",b"prpFold",u"rpId",b"rpId",u"rpIndex",b"rpIndex",u"toUinFlag",b"toUinFlag",u"uin",b"uin",u"uin32ExpertFlag",b"uin32ExpertFlag"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"babyqGuideMsgCookie",b"babyqGuideMsgCookie",u"bubbleDiyTextId",b"bubbleDiyTextId",u"bubbleSubId",b"bubbleSubId",u"glamourLevel",b"glamourLevel",u"groupFlagNew",b"groupFlagNew",u"groupRankSeq",b"groupRankSeq",u"groupType",b"groupType",u"longTextFlag",b"longTextFlag",u"longTextResid",b"longTextResid",u"memberLevel",b"memberLevel",u"olympicTorch",b"olympicTorch",u"pbReserve",b"pbReserve",u"pendantId",b"pendantId",u"prpFold",b"prpFold",u"rpId",b"rpId",u"rpIndex",b"rpIndex",u"toUinFlag",b"toUinFlag",u"uin",b"uin",u"uin32ExpertFlag",b"uin32ExpertFlag"]) -> None: ...

class GroupBusinessMsg(Message):
    DESCRIPTOR: Descriptor = ...
    FLAGS_FIELD_NUMBER: int
    HEADURL_FIELD_NUMBER: int
    HEADCLKURL_FIELD_NUMBER: int
    NICK_FIELD_NUMBER: int
    NICKCOLOR_FIELD_NUMBER: int
    RANK_FIELD_NUMBER: int
    RANKCOLOR_FIELD_NUMBER: int
    RANKBGCOLOR_FIELD_NUMBER: int
    flags: int = ...
    headUrl: bytes = ...
    headClkUrl: bytes = ...
    nick: bytes = ...
    nickColor: bytes = ...
    rank: bytes = ...
    rankColor: bytes = ...
    rankBgcolor: bytes = ...

    def __init__(self,
        *,
        flags : Optional[int] = ...,
        headUrl : Optional[bytes] = ...,
        headClkUrl : Optional[bytes] = ...,
        nick : Optional[bytes] = ...,
        nickColor : Optional[bytes] = ...,
        rank : Optional[bytes] = ...,
        rankColor : Optional[bytes] = ...,
        rankBgcolor : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"flags",b"flags",u"headClkUrl",b"headClkUrl",u"headUrl",b"headUrl",u"nick",b"nick",u"nickColor",b"nickColor",u"rank",b"rank",u"rankBgcolor",b"rankBgcolor",u"rankColor",b"rankColor"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"flags",b"flags",u"headClkUrl",b"headClkUrl",u"headUrl",b"headUrl",u"nick",b"nick",u"nickColor",b"nickColor",u"rank",b"rank",u"rankBgcolor",b"rankBgcolor",u"rankColor",b"rankColor"]) -> None: ...

class GroupFile(Message):
    DESCRIPTOR: Descriptor = ...
    FILENAME_FIELD_NUMBER: int
    FILESIZE_FIELD_NUMBER: int
    FILEID_FIELD_NUMBER: int
    BATCHID_FIELD_NUMBER: int
    FILEKEY_FIELD_NUMBER: int
    MARK_FIELD_NUMBER: int
    SEQUENCE_FIELD_NUMBER: int
    BATCHITEMID_FIELD_NUMBER: int
    FEEDMSGTIME_FIELD_NUMBER: int
    PBRESERVE_FIELD_NUMBER: int
    filename: bytes = ...
    fileSize: int = ...
    fileId: bytes = ...
    batchId: bytes = ...
    fileKey: bytes = ...
    mark: bytes = ...
    sequence: int = ...
    batchItemId: bytes = ...
    feedMsgTime: int = ...
    pbReserve: bytes = ...

    def __init__(self,
        *,
        filename : Optional[bytes] = ...,
        fileSize : Optional[int] = ...,
        fileId : Optional[bytes] = ...,
        batchId : Optional[bytes] = ...,
        fileKey : Optional[bytes] = ...,
        mark : Optional[bytes] = ...,
        sequence : Optional[int] = ...,
        batchItemId : Optional[bytes] = ...,
        feedMsgTime : Optional[int] = ...,
        pbReserve : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"batchId",b"batchId",u"batchItemId",b"batchItemId",u"feedMsgTime",b"feedMsgTime",u"fileId",b"fileId",u"fileKey",b"fileKey",u"fileSize",b"fileSize",u"filename",b"filename",u"mark",b"mark",u"pbReserve",b"pbReserve",u"sequence",b"sequence"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"batchId",b"batchId",u"batchItemId",b"batchItemId",u"feedMsgTime",b"feedMsgTime",u"fileId",b"fileId",u"fileKey",b"fileKey",u"fileSize",b"fileSize",u"filename",b"filename",u"mark",b"mark",u"pbReserve",b"pbReserve",u"sequence",b"sequence"]) -> None: ...

class GroupPostElem(Message):
    DESCRIPTOR: Descriptor = ...
    TRANSTYPE_FIELD_NUMBER: int
    TRANSMSG_FIELD_NUMBER: int
    transType: int = ...
    transMsg: bytes = ...

    def __init__(self,
        *,
        transType : Optional[int] = ...,
        transMsg : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"transMsg",b"transMsg",u"transType",b"transType"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"transMsg",b"transMsg",u"transType",b"transType"]) -> None: ...

class GroupPubAccountInfo(Message):
    DESCRIPTOR: Descriptor = ...
    PUBACCOUNT_FIELD_NUMBER: int
    pubAccount: int = ...

    def __init__(self,
        *,
        pubAccount : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"pubAccount",b"pubAccount"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"pubAccount",b"pubAccount"]) -> None: ...

class LifeOnlineAccount(Message):
    DESCRIPTOR: Descriptor = ...
    UNIQUEID_FIELD_NUMBER: int
    OP_FIELD_NUMBER: int
    SHOWTIME_FIELD_NUMBER: int
    REPORT_FIELD_NUMBER: int
    ACK_FIELD_NUMBER: int
    BITMAP_FIELD_NUMBER: int
    GDTIMPDATA_FIELD_NUMBER: int
    GDTCLIDATA_FIELD_NUMBER: int
    VIEWID_FIELD_NUMBER: int
    uniqueId: int = ...
    op: int = ...
    showTime: int = ...
    report: int = ...
    ack: int = ...
    bitmap: int = ...
    gdtImpData: bytes = ...
    gdtCliData: bytes = ...
    viewId: bytes = ...

    def __init__(self,
        *,
        uniqueId : Optional[int] = ...,
        op : Optional[int] = ...,
        showTime : Optional[int] = ...,
        report : Optional[int] = ...,
        ack : Optional[int] = ...,
        bitmap : Optional[int] = ...,
        gdtImpData : Optional[bytes] = ...,
        gdtCliData : Optional[bytes] = ...,
        viewId : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"ack",b"ack",u"bitmap",b"bitmap",u"gdtCliData",b"gdtCliData",u"gdtImpData",b"gdtImpData",u"op",b"op",u"report",b"report",u"showTime",b"showTime",u"uniqueId",b"uniqueId",u"viewId",b"viewId"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"ack",b"ack",u"bitmap",b"bitmap",u"gdtCliData",b"gdtCliData",u"gdtImpData",b"gdtImpData",u"op",b"op",u"report",b"report",u"showTime",b"showTime",u"uniqueId",b"uniqueId",u"viewId",b"viewId"]) -> None: ...

class LightAppElem(Message):
    DESCRIPTOR: Descriptor = ...
    DATA_FIELD_NUMBER: int
    MSGRESID_FIELD_NUMBER: int
    data: bytes = ...
    msgResid: bytes = ...

    def __init__(self,
        *,
        data : Optional[bytes] = ...,
        msgResid : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"data",b"data",u"msgResid",b"msgResid"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"data",b"data",u"msgResid",b"msgResid"]) -> None: ...

class LolaMsg(Message):
    DESCRIPTOR: Descriptor = ...
    MSGRESID_FIELD_NUMBER: int
    ENCODECONTENT_FIELD_NUMBER: int
    LONGMSGURL_FIELD_NUMBER: int
    DOWNLOADKEY_FIELD_NUMBER: int
    msgResid: bytes = ...
    encodeContent: bytes = ...
    longMsgUrl: bytes = ...
    downloadKey: bytes = ...

    def __init__(self,
        *,
        msgResid : Optional[bytes] = ...,
        encodeContent : Optional[bytes] = ...,
        longMsgUrl : Optional[bytes] = ...,
        downloadKey : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"downloadKey",b"downloadKey",u"encodeContent",b"encodeContent",u"longMsgUrl",b"longMsgUrl",u"msgResid",b"msgResid"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"downloadKey",b"downloadKey",u"encodeContent",b"encodeContent",u"longMsgUrl",b"longMsgUrl",u"msgResid",b"msgResid"]) -> None: ...

class LowVersionTips(Message):
    DESCRIPTOR: Descriptor = ...
    BUSINESSID_FIELD_NUMBER: int
    SESSIONTYPE_FIELD_NUMBER: int
    SESSIONUIN_FIELD_NUMBER: int
    SENDERUIN_FIELD_NUMBER: int
    TEXT_FIELD_NUMBER: int
    businessId: int = ...
    sessionType: int = ...
    sessionUin: int = ...
    senderUin: int = ...
    text: Text = ...

    def __init__(self,
        *,
        businessId : Optional[int] = ...,
        sessionType : Optional[int] = ...,
        sessionUin : Optional[int] = ...,
        senderUin : Optional[int] = ...,
        text : Optional[Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"businessId",b"businessId",u"senderUin",b"senderUin",u"sessionType",b"sessionType",u"sessionUin",b"sessionUin",u"text",b"text"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"businessId",b"businessId",u"senderUin",b"senderUin",u"sessionType",b"sessionType",u"sessionUin",b"sessionUin",u"text",b"text"]) -> None: ...

class MarketFace(Message):
    DESCRIPTOR: Descriptor = ...
    FACENAME_FIELD_NUMBER: int
    ITEMTYPE_FIELD_NUMBER: int
    FACEINFO_FIELD_NUMBER: int
    FACEID_FIELD_NUMBER: int
    TABID_FIELD_NUMBER: int
    SUBTYPE_FIELD_NUMBER: int
    KEY_FIELD_NUMBER: int
    PARAM_FIELD_NUMBER: int
    MEDIATYPE_FIELD_NUMBER: int
    IMAGEWIDTH_FIELD_NUMBER: int
    IMAGEHEIGHT_FIELD_NUMBER: int
    MOBILEPARAM_FIELD_NUMBER: int
    PBRESERVE_FIELD_NUMBER: int
    faceName: bytes = ...
    itemType: int = ...
    faceInfo: int = ...
    faceId: bytes = ...
    tabId: int = ...
    subType: int = ...
    key: bytes = ...
    param: bytes = ...
    mediaType: int = ...
    imageWidth: int = ...
    imageHeight: int = ...
    mobileparam: bytes = ...
    pbReserve: bytes = ...

    def __init__(self,
        *,
        faceName : Optional[bytes] = ...,
        itemType : Optional[int] = ...,
        faceInfo : Optional[int] = ...,
        faceId : Optional[bytes] = ...,
        tabId : Optional[int] = ...,
        subType : Optional[int] = ...,
        key : Optional[bytes] = ...,
        param : Optional[bytes] = ...,
        mediaType : Optional[int] = ...,
        imageWidth : Optional[int] = ...,
        imageHeight : Optional[int] = ...,
        mobileparam : Optional[bytes] = ...,
        pbReserve : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"faceId",b"faceId",u"faceInfo",b"faceInfo",u"faceName",b"faceName",u"imageHeight",b"imageHeight",u"imageWidth",b"imageWidth",u"itemType",b"itemType",u"key",b"key",u"mediaType",b"mediaType",u"mobileparam",b"mobileparam",u"param",b"param",u"pbReserve",b"pbReserve",u"subType",b"subType",u"tabId",b"tabId"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"faceId",b"faceId",u"faceInfo",b"faceInfo",u"faceName",b"faceName",u"imageHeight",b"imageHeight",u"imageWidth",b"imageWidth",u"itemType",b"itemType",u"key",b"key",u"mediaType",b"mediaType",u"mobileparam",b"mobileparam",u"param",b"param",u"pbReserve",b"pbReserve",u"subType",b"subType",u"tabId",b"tabId"]) -> None: ...

class MarketTrans(Message):
    DESCRIPTOR: Descriptor = ...
    FLAG_FIELD_NUMBER: int
    XML_FIELD_NUMBER: int
    MSGRESID_FIELD_NUMBER: int
    ABILITY_FIELD_NUMBER: int
    MINABILITY_FIELD_NUMBER: int
    flag: int = ...
    xml: bytes = ...
    msgResid: bytes = ...
    ability: int = ...
    minAbility: int = ...

    def __init__(self,
        *,
        flag : Optional[int] = ...,
        xml : Optional[bytes] = ...,
        msgResid : Optional[bytes] = ...,
        ability : Optional[int] = ...,
        minAbility : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"ability",b"ability",u"flag",b"flag",u"minAbility",b"minAbility",u"msgResid",b"msgResid",u"xml",b"xml"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"ability",b"ability",u"flag",b"flag",u"minAbility",b"minAbility",u"msgResid",b"msgResid",u"xml",b"xml"]) -> None: ...

class MsgBody(Message):
    DESCRIPTOR: Descriptor = ...
    RICHTEXT_FIELD_NUMBER: int
    CONTENT_FIELD_NUMBER: int
    ENCRYPTCONTENT_FIELD_NUMBER: int
    content: bytes = ...
    encryptContent: bytes = ...

    @property
    def richText(self) -> RichText: ...

    def __init__(self,
        *,
        richText : Optional[RichText] = ...,
        content : Optional[bytes] = ...,
        encryptContent : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"content",b"content",u"encryptContent",b"encryptContent",u"richText",b"richText"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"content",b"content",u"encryptContent",b"encryptContent",u"richText",b"richText"]) -> None: ...

class MsgBody_subtype4(Message):
    DESCRIPTOR: Descriptor = ...
    NOTONLINEFILE_FIELD_NUMBER: int
    MSGTIME_FIELD_NUMBER: int
    msgTime: int = ...

    @property
    def notOnlineFile(self) -> NotOnlineFile: ...

    def __init__(self,
        *,
        notOnlineFile : Optional[NotOnlineFile] = ...,
        msgTime : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"msgTime",b"msgTime",u"notOnlineFile",b"notOnlineFile"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"msgTime",b"msgTime",u"notOnlineFile",b"notOnlineFile"]) -> None: ...

class NearByMessageType(Message):
    DESCRIPTOR: Descriptor = ...
    TYPE_FIELD_NUMBER: int
    IDENTIFYTYPE_FIELD_NUMBER: int
    type: int = ...
    identifyType: int = ...

    def __init__(self,
        *,
        type : Optional[int] = ...,
        identifyType : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"identifyType",b"identifyType",u"type",b"type"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"identifyType",b"identifyType",u"type",b"type"]) -> None: ...

class NotOnlineFile(Message):
    DESCRIPTOR: Descriptor = ...
    FILETYPE_FIELD_NUMBER: int
    SIG_FIELD_NUMBER: int
    FILEUUID_FIELD_NUMBER: int
    FILEMD5_FIELD_NUMBER: int
    FILENAME_FIELD_NUMBER: int
    FILESIZE_FIELD_NUMBER: int
    NOTE_FIELD_NUMBER: int
    RESERVED_FIELD_NUMBER: int
    SUBCMD_FIELD_NUMBER: int
    MICROCLOUD_FIELD_NUMBER: int
    FILEURLS_FIELD_NUMBER: int
    DOWNLOADFLAG_FIELD_NUMBER: int
    DANGEREVEL_FIELD_NUMBER: int
    LIFETIME_FIELD_NUMBER: int
    UPLOADTIME_FIELD_NUMBER: int
    ABSFILETYPE_FIELD_NUMBER: int
    CLIENTTYPE_FIELD_NUMBER: int
    EXPIRETIME_FIELD_NUMBER: int
    PBRESERVE_FIELD_NUMBER: int
    FILEIDCRCMEDIA_FIELD_NUMBER: int
    fileType: int = ...
    sig: bytes = ...
    fileUuid: bytes = ...
    fileMd5: bytes = ...
    fileName: bytes = ...
    fileSize: int = ...
    note: bytes = ...
    reserved: int = ...
    subcmd: int = ...
    microCloud: int = ...
    fileUrls: RepeatedScalarFieldContainer[bytes] = ...
    downloadFlag: int = ...
    dangerEvel: int = ...
    lifeTime: int = ...
    uploadTime: int = ...
    absFileType: int = ...
    clientType: int = ...
    expireTime: int = ...
    pbReserve: bytes = ...
    fileidcrcMedia: Text = ...

    def __init__(self,
        *,
        fileType : Optional[int] = ...,
        sig : Optional[bytes] = ...,
        fileUuid : Optional[bytes] = ...,
        fileMd5 : Optional[bytes] = ...,
        fileName : Optional[bytes] = ...,
        fileSize : Optional[int] = ...,
        note : Optional[bytes] = ...,
        reserved : Optional[int] = ...,
        subcmd : Optional[int] = ...,
        microCloud : Optional[int] = ...,
        fileUrls : Optional[Iterable[bytes]] = ...,
        downloadFlag : Optional[int] = ...,
        dangerEvel : Optional[int] = ...,
        lifeTime : Optional[int] = ...,
        uploadTime : Optional[int] = ...,
        absFileType : Optional[int] = ...,
        clientType : Optional[int] = ...,
        expireTime : Optional[int] = ...,
        pbReserve : Optional[bytes] = ...,
        fileidcrcMedia : Optional[Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"absFileType",b"absFileType",u"clientType",b"clientType",u"dangerEvel",b"dangerEvel",u"downloadFlag",b"downloadFlag",u"expireTime",b"expireTime",u"fileMd5",b"fileMd5",u"fileName",b"fileName",u"fileSize",b"fileSize",u"fileType",b"fileType",u"fileUuid",b"fileUuid",u"fileidcrcMedia",b"fileidcrcMedia",u"lifeTime",b"lifeTime",u"microCloud",b"microCloud",u"note",b"note",u"pbReserve",b"pbReserve",u"reserved",b"reserved",u"sig",b"sig",u"subcmd",b"subcmd",u"uploadTime",b"uploadTime"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"absFileType",b"absFileType",u"clientType",b"clientType",u"dangerEvel",b"dangerEvel",u"downloadFlag",b"downloadFlag",u"expireTime",b"expireTime",u"fileMd5",b"fileMd5",u"fileName",b"fileName",u"fileSize",b"fileSize",u"fileType",b"fileType",u"fileUrls",b"fileUrls",u"fileUuid",b"fileUuid",u"fileidcrcMedia",b"fileidcrcMedia",u"lifeTime",b"lifeTime",u"microCloud",b"microCloud",u"note",b"note",u"pbReserve",b"pbReserve",u"reserved",b"reserved",u"sig",b"sig",u"subcmd",b"subcmd",u"uploadTime",b"uploadTime"]) -> None: ...

class NotOnlineImage(Message):
    DESCRIPTOR: Descriptor = ...
    FILEPATH_FIELD_NUMBER: int
    FILELEN_FIELD_NUMBER: int
    DOWNLOADPATH_FIELD_NUMBER: int
    OLDVERSENDFILE_FIELD_NUMBER: int
    IMGTYPE_FIELD_NUMBER: int
    PREVIEWSIMAGE_FIELD_NUMBER: int
    PICMD5_FIELD_NUMBER: int
    PICHEIGHT_FIELD_NUMBER: int
    PICWIDTH_FIELD_NUMBER: int
    RESID_FIELD_NUMBER: int
    FLAG_FIELD_NUMBER: int
    THUMBURL_FIELD_NUMBER: int
    ORIGINAL_FIELD_NUMBER: int
    BIGURL_FIELD_NUMBER: int
    ORIGURL_FIELD_NUMBER: int
    BIZTYPE_FIELD_NUMBER: int
    RESULT_FIELD_NUMBER: int
    INDEX_FIELD_NUMBER: int
    OPFACEBUF_FIELD_NUMBER: int
    OLDPICMD5_FIELD_NUMBER: int
    THUMBWIDTH_FIELD_NUMBER: int
    THUMBHEIGHT_FIELD_NUMBER: int
    FILEID_FIELD_NUMBER: int
    SHOWLEN_FIELD_NUMBER: int
    DOWNLOADLEN_FIELD_NUMBER: int
    _400URL_FIELD_NUMBER: int
    _400WIDTH_FIELD_NUMBER: int
    _400HEIGHT_FIELD_NUMBER: int
    PBRESERVE_FIELD_NUMBER: int
    filePath: bytes = ...
    fileLen: int = ...
    downloadPath: bytes = ...
    oldVerSendFile: bytes = ...
    imgType: int = ...
    previewsImage: bytes = ...
    picMd5: bytes = ...
    picHeight: int = ...
    picWidth: int = ...
    resId: bytes = ...
    flag: bytes = ...
    thumbUrl: Text = ...
    original: int = ...
    bigUrl: Text = ...
    origUrl: Text = ...
    bizType: int = ...
    result: int = ...
    index: int = ...
    opFaceBuf: bytes = ...
    oldPicMd5: bool = ...
    thumbWidth: int = ...
    thumbHeight: int = ...
    fileId: int = ...
    showLen: int = ...
    downloadLen: int = ...
    _400Url: Text = ...
    _400Width: int = ...
    _400Height: int = ...
    pbReserve: bytes = ...

    def __init__(self,
        *,
        filePath : Optional[bytes] = ...,
        fileLen : Optional[int] = ...,
        downloadPath : Optional[bytes] = ...,
        oldVerSendFile : Optional[bytes] = ...,
        imgType : Optional[int] = ...,
        previewsImage : Optional[bytes] = ...,
        picMd5 : Optional[bytes] = ...,
        picHeight : Optional[int] = ...,
        picWidth : Optional[int] = ...,
        resId : Optional[bytes] = ...,
        flag : Optional[bytes] = ...,
        thumbUrl : Optional[Text] = ...,
        original : Optional[int] = ...,
        bigUrl : Optional[Text] = ...,
        origUrl : Optional[Text] = ...,
        bizType : Optional[int] = ...,
        result : Optional[int] = ...,
        index : Optional[int] = ...,
        opFaceBuf : Optional[bytes] = ...,
        oldPicMd5 : Optional[bool] = ...,
        thumbWidth : Optional[int] = ...,
        thumbHeight : Optional[int] = ...,
        fileId : Optional[int] = ...,
        showLen : Optional[int] = ...,
        downloadLen : Optional[int] = ...,
        _400Url : Optional[Text] = ...,
        _400Width : Optional[int] = ...,
        _400Height : Optional[int] = ...,
        pbReserve : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"_400Height",b"_400Height",u"_400Url",b"_400Url",u"_400Width",b"_400Width",u"bigUrl",b"bigUrl",u"bizType",b"bizType",u"downloadLen",b"downloadLen",u"downloadPath",b"downloadPath",u"fileId",b"fileId",u"fileLen",b"fileLen",u"filePath",b"filePath",u"flag",b"flag",u"imgType",b"imgType",u"index",b"index",u"oldPicMd5",b"oldPicMd5",u"oldVerSendFile",b"oldVerSendFile",u"opFaceBuf",b"opFaceBuf",u"origUrl",b"origUrl",u"original",b"original",u"pbReserve",b"pbReserve",u"picHeight",b"picHeight",u"picMd5",b"picMd5",u"picWidth",b"picWidth",u"previewsImage",b"previewsImage",u"resId",b"resId",u"result",b"result",u"showLen",b"showLen",u"thumbHeight",b"thumbHeight",u"thumbUrl",b"thumbUrl",u"thumbWidth",b"thumbWidth"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"_400Height",b"_400Height",u"_400Url",b"_400Url",u"_400Width",b"_400Width",u"bigUrl",b"bigUrl",u"bizType",b"bizType",u"downloadLen",b"downloadLen",u"downloadPath",b"downloadPath",u"fileId",b"fileId",u"fileLen",b"fileLen",u"filePath",b"filePath",u"flag",b"flag",u"imgType",b"imgType",u"index",b"index",u"oldPicMd5",b"oldPicMd5",u"oldVerSendFile",b"oldVerSendFile",u"opFaceBuf",b"opFaceBuf",u"origUrl",b"origUrl",u"original",b"original",u"pbReserve",b"pbReserve",u"picHeight",b"picHeight",u"picMd5",b"picMd5",u"picWidth",b"picWidth",u"previewsImage",b"previewsImage",u"resId",b"resId",u"result",b"result",u"showLen",b"showLen",u"thumbHeight",b"thumbHeight",u"thumbUrl",b"thumbUrl",u"thumbWidth",b"thumbWidth"]) -> None: ...

class OnlineImage(Message):
    DESCRIPTOR: Descriptor = ...
    GUID_FIELD_NUMBER: int
    FILEPATH_FIELD_NUMBER: int
    OLDVERSENDFILE_FIELD_NUMBER: int
    guid: bytes = ...
    filePath: bytes = ...
    oldVerSendFile: bytes = ...

    def __init__(self,
        *,
        guid : Optional[bytes] = ...,
        filePath : Optional[bytes] = ...,
        oldVerSendFile : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"filePath",b"filePath",u"guid",b"guid",u"oldVerSendFile",b"oldVerSendFile"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"filePath",b"filePath",u"guid",b"guid",u"oldVerSendFile",b"oldVerSendFile"]) -> None: ...

class OpenQQData(Message):
    DESCRIPTOR: Descriptor = ...
    CARQQDATA_FIELD_NUMBER: int
    carQqData: bytes = ...

    def __init__(self,
        *,
        carQqData : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"carQqData",b"carQqData"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"carQqData",b"carQqData"]) -> None: ...

class PatsElem(Message):
    DESCRIPTOR: Descriptor = ...
    PATTYPE_FIELD_NUMBER: int
    PATCOUNT_FIELD_NUMBER: int
    patType: int = ...
    patCount: int = ...

    def __init__(self,
        *,
        patType : Optional[int] = ...,
        patCount : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"patCount",b"patCount",u"patType",b"patType"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"patCount",b"patCount",u"patType",b"patType"]) -> None: ...

class PcSupportDef(Message):
    DESCRIPTOR: Descriptor = ...
    PCPTLBEGIN_FIELD_NUMBER: int
    PCPTLEND_FIELD_NUMBER: int
    MACPTLBEGIN_FIELD_NUMBER: int
    MACPTLEND_FIELD_NUMBER: int
    PTLSSUPPORT_FIELD_NUMBER: int
    PTLSNOTSUPPORT_FIELD_NUMBER: int
    pcPtlBegin: int = ...
    pcPtlEnd: int = ...
    macPtlBegin: int = ...
    macPtlEnd: int = ...
    ptlsSupport: RepeatedScalarFieldContainer[int] = ...
    ptlsNotSupport: RepeatedScalarFieldContainer[int] = ...

    def __init__(self,
        *,
        pcPtlBegin : Optional[int] = ...,
        pcPtlEnd : Optional[int] = ...,
        macPtlBegin : Optional[int] = ...,
        macPtlEnd : Optional[int] = ...,
        ptlsSupport : Optional[Iterable[int]] = ...,
        ptlsNotSupport : Optional[Iterable[int]] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"macPtlBegin",b"macPtlBegin",u"macPtlEnd",b"macPtlEnd",u"pcPtlBegin",b"pcPtlBegin",u"pcPtlEnd",b"pcPtlEnd"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"macPtlBegin",b"macPtlBegin",u"macPtlEnd",b"macPtlEnd",u"pcPtlBegin",b"pcPtlBegin",u"pcPtlEnd",b"pcPtlEnd",u"ptlsNotSupport",b"ptlsNotSupport",u"ptlsSupport",b"ptlsSupport"]) -> None: ...

class Ptt(Message):
    DESCRIPTOR: Descriptor = ...
    FILETYPE_FIELD_NUMBER: int
    SRCUIN_FIELD_NUMBER: int
    FILEUUID_FIELD_NUMBER: int
    FILEMD5_FIELD_NUMBER: int
    FILENAME_FIELD_NUMBER: int
    FILESIZE_FIELD_NUMBER: int
    RESERVE_FIELD_NUMBER: int
    FILEID_FIELD_NUMBER: int
    SERVERIP_FIELD_NUMBER: int
    SERVERPORT_FIELD_NUMBER: int
    VALID_FIELD_NUMBER: int
    SIGNATURE_FIELD_NUMBER: int
    SHORTCUT_FIELD_NUMBER: int
    FILEKEY_FIELD_NUMBER: int
    MAGICPTTINDEX_FIELD_NUMBER: int
    VOICESWITCH_FIELD_NUMBER: int
    PTTURL_FIELD_NUMBER: int
    GROUPFILEKEY_FIELD_NUMBER: int
    TIME_FIELD_NUMBER: int
    DOWNPARA_FIELD_NUMBER: int
    FORMAT_FIELD_NUMBER: int
    PBRESERVE_FIELD_NUMBER: int
    PTTURLS_FIELD_NUMBER: int
    DOWNLOADFLAG_FIELD_NUMBER: int
    fileType: int = ...
    srcUin: int = ...
    fileUuid: bytes = ...
    fileMd5: bytes = ...
    fileName: bytes = ...
    fileSize: int = ...
    reserve: bytes = ...
    fileId: int = ...
    serverIp: int = ...
    serverPort: int = ...
    valid: bool = ...
    signature: bytes = ...
    shortcut: bytes = ...
    fileKey: bytes = ...
    magicPttIndex: int = ...
    voiceSwitch: int = ...
    pttUrl: bytes = ...
    groupFileKey: bytes = ...
    time: int = ...
    downPara: bytes = ...
    format: int = ...
    pbReserve: bytes = ...
    pttUrls: RepeatedScalarFieldContainer[bytes] = ...
    downloadFlag: int = ...

    def __init__(self,
        *,
        fileType : Optional[int] = ...,
        srcUin : Optional[int] = ...,
        fileUuid : Optional[bytes] = ...,
        fileMd5 : Optional[bytes] = ...,
        fileName : Optional[bytes] = ...,
        fileSize : Optional[int] = ...,
        reserve : Optional[bytes] = ...,
        fileId : Optional[int] = ...,
        serverIp : Optional[int] = ...,
        serverPort : Optional[int] = ...,
        valid : Optional[bool] = ...,
        signature : Optional[bytes] = ...,
        shortcut : Optional[bytes] = ...,
        fileKey : Optional[bytes] = ...,
        magicPttIndex : Optional[int] = ...,
        voiceSwitch : Optional[int] = ...,
        pttUrl : Optional[bytes] = ...,
        groupFileKey : Optional[bytes] = ...,
        time : Optional[int] = ...,
        downPara : Optional[bytes] = ...,
        format : Optional[int] = ...,
        pbReserve : Optional[bytes] = ...,
        pttUrls : Optional[Iterable[bytes]] = ...,
        downloadFlag : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"downPara",b"downPara",u"downloadFlag",b"downloadFlag",u"fileId",b"fileId",u"fileKey",b"fileKey",u"fileMd5",b"fileMd5",u"fileName",b"fileName",u"fileSize",b"fileSize",u"fileType",b"fileType",u"fileUuid",b"fileUuid",u"format",b"format",u"groupFileKey",b"groupFileKey",u"magicPttIndex",b"magicPttIndex",u"pbReserve",b"pbReserve",u"pttUrl",b"pttUrl",u"reserve",b"reserve",u"serverIp",b"serverIp",u"serverPort",b"serverPort",u"shortcut",b"shortcut",u"signature",b"signature",u"srcUin",b"srcUin",u"time",b"time",u"valid",b"valid",u"voiceSwitch",b"voiceSwitch"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"downPara",b"downPara",u"downloadFlag",b"downloadFlag",u"fileId",b"fileId",u"fileKey",b"fileKey",u"fileMd5",b"fileMd5",u"fileName",b"fileName",u"fileSize",b"fileSize",u"fileType",b"fileType",u"fileUuid",b"fileUuid",u"format",b"format",u"groupFileKey",b"groupFileKey",u"magicPttIndex",b"magicPttIndex",u"pbReserve",b"pbReserve",u"pttUrl",b"pttUrl",u"pttUrls",b"pttUrls",u"reserve",b"reserve",u"serverIp",b"serverIp",u"serverPort",b"serverPort",u"shortcut",b"shortcut",u"signature",b"signature",u"srcUin",b"srcUin",u"time",b"time",u"valid",b"valid",u"voiceSwitch",b"voiceSwitch"]) -> None: ...

class PubAccInfo(Message):
    DESCRIPTOR: Descriptor = ...
    ISINTERNUM_FIELD_NUMBER: int
    MSGTEMPLATEID_FIELD_NUMBER: int
    LONGMSGURL_FIELD_NUMBER: int
    DOWNLOADKEY_FIELD_NUMBER: int
    isInterNum: int = ...
    msgTemplateId: Text = ...
    longMsgUrl: Text = ...
    downloadKey: bytes = ...

    def __init__(self,
        *,
        isInterNum : Optional[int] = ...,
        msgTemplateId : Optional[Text] = ...,
        longMsgUrl : Optional[Text] = ...,
        downloadKey : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"downloadKey",b"downloadKey",u"isInterNum",b"isInterNum",u"longMsgUrl",b"longMsgUrl",u"msgTemplateId",b"msgTemplateId"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"downloadKey",b"downloadKey",u"isInterNum",b"isInterNum",u"longMsgUrl",b"longMsgUrl",u"msgTemplateId",b"msgTemplateId"]) -> None: ...

class PubAccount(Message):
    DESCRIPTOR: Descriptor = ...
    BUF_FIELD_NUMBER: int
    PUBACCOUNTUIN_FIELD_NUMBER: int
    buf: bytes = ...
    pubAccountUin: int = ...

    def __init__(self,
        *,
        buf : Optional[bytes] = ...,
        pubAccountUin : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"buf",b"buf",u"pubAccountUin",b"pubAccountUin"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"buf",b"buf",u"pubAccountUin",b"pubAccountUin"]) -> None: ...

class PubGroup(Message):
    DESCRIPTOR: Descriptor = ...
    NICKNAME_FIELD_NUMBER: int
    GENDER_FIELD_NUMBER: int
    AGE_FIELD_NUMBER: int
    DISTANCE_FIELD_NUMBER: int
    nickname: bytes = ...
    gender: int = ...
    age: int = ...
    distance: int = ...

    def __init__(self,
        *,
        nickname : Optional[bytes] = ...,
        gender : Optional[int] = ...,
        age : Optional[int] = ...,
        distance : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"age",b"age",u"distance",b"distance",u"gender",b"gender",u"nickname",b"nickname"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"age",b"age",u"distance",b"distance",u"gender",b"gender",u"nickname",b"nickname"]) -> None: ...

class QQLiveOld(Message):
    DESCRIPTOR: Descriptor = ...
    SUBCMD_FIELD_NUMBER: int
    SHOWTEXT_FIELD_NUMBER: int
    PARAM_FIELD_NUMBER: int
    INTRODUCE_FIELD_NUMBER: int
    subCmd: int = ...
    showText: bytes = ...
    param: bytes = ...
    introduce: bytes = ...

    def __init__(self,
        *,
        subCmd : Optional[int] = ...,
        showText : Optional[bytes] = ...,
        param : Optional[bytes] = ...,
        introduce : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"introduce",b"introduce",u"param",b"param",u"showText",b"showText",u"subCmd",b"subCmd"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"introduce",b"introduce",u"param",b"param",u"showText",b"showText",u"subCmd",b"subCmd"]) -> None: ...

class QQWalletAioBody(Message):
    DESCRIPTOR: Descriptor = ...
    SENDUIN_FIELD_NUMBER: int
    SENDER_FIELD_NUMBER: int
    RECEIVER_FIELD_NUMBER: int
    CHANNELID_FIELD_NUMBER: int
    TEMPLATEID_FIELD_NUMBER: int
    RESEND_FIELD_NUMBER: int
    MSGPRIORITY_FIELD_NUMBER: int
    REDTYPE_FIELD_NUMBER: int
    BILLNO_FIELD_NUMBER: int
    AUTHKEY_FIELD_NUMBER: int
    SESSIONTYPE_FIELD_NUMBER: int
    MSGTYPE_FIELD_NUMBER: int
    ENVELOPEID_FIELD_NUMBER: int
    NAME_FIELD_NUMBER: int
    CONFTYPE_FIELD_NUMBER: int
    MSGFROM_FIELD_NUMBER: int
    PCBODY_FIELD_NUMBER: int
    INDEX_FIELD_NUMBER: int
    REDCHANNEL_FIELD_NUMBER: int
    GRAPUIN_FIELD_NUMBER: int
    PBRESERVE_FIELD_NUMBER: int
    senduin: int = ...
    channelid: int = ...
    templateid: int = ...
    resend: int = ...
    msgPriority: int = ...
    redtype: int = ...
    billno: bytes = ...
    authkey: bytes = ...
    sessiontype: int = ...
    msgtype: int = ...
    envelopeid: int = ...
    name: bytes = ...
    conftype: int = ...
    msgFrom: int = ...
    pcBody: bytes = ...
    index: bytes = ...
    redchannel: int = ...
    grapUin: RepeatedScalarFieldContainer[int] = ...
    pbReserve: bytes = ...

    @property
    def sender(self) -> QQWalletAioElem: ...

    @property
    def receiver(self) -> QQWalletAioElem: ...

    def __init__(self,
        *,
        senduin : Optional[int] = ...,
        sender : Optional[QQWalletAioElem] = ...,
        receiver : Optional[QQWalletAioElem] = ...,
        channelid : Optional[int] = ...,
        templateid : Optional[int] = ...,
        resend : Optional[int] = ...,
        msgPriority : Optional[int] = ...,
        redtype : Optional[int] = ...,
        billno : Optional[bytes] = ...,
        authkey : Optional[bytes] = ...,
        sessiontype : Optional[int] = ...,
        msgtype : Optional[int] = ...,
        envelopeid : Optional[int] = ...,
        name : Optional[bytes] = ...,
        conftype : Optional[int] = ...,
        msgFrom : Optional[int] = ...,
        pcBody : Optional[bytes] = ...,
        index : Optional[bytes] = ...,
        redchannel : Optional[int] = ...,
        grapUin : Optional[Iterable[int]] = ...,
        pbReserve : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"authkey",b"authkey",u"billno",b"billno",u"channelid",b"channelid",u"conftype",b"conftype",u"envelopeid",b"envelopeid",u"index",b"index",u"msgFrom",b"msgFrom",u"msgPriority",b"msgPriority",u"msgtype",b"msgtype",u"name",b"name",u"pbReserve",b"pbReserve",u"pcBody",b"pcBody",u"receiver",b"receiver",u"redchannel",b"redchannel",u"redtype",b"redtype",u"resend",b"resend",u"sender",b"sender",u"senduin",b"senduin",u"sessiontype",b"sessiontype",u"templateid",b"templateid"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"authkey",b"authkey",u"billno",b"billno",u"channelid",b"channelid",u"conftype",b"conftype",u"envelopeid",b"envelopeid",u"grapUin",b"grapUin",u"index",b"index",u"msgFrom",b"msgFrom",u"msgPriority",b"msgPriority",u"msgtype",b"msgtype",u"name",b"name",u"pbReserve",b"pbReserve",u"pcBody",b"pcBody",u"receiver",b"receiver",u"redchannel",b"redchannel",u"redtype",b"redtype",u"resend",b"resend",u"sender",b"sender",u"senduin",b"senduin",u"sessiontype",b"sessiontype",u"templateid",b"templateid"]) -> None: ...

class QQWalletAioElem(Message):
    DESCRIPTOR: Descriptor = ...
    BACKGROUND_FIELD_NUMBER: int
    ICON_FIELD_NUMBER: int
    TITLE_FIELD_NUMBER: int
    SUBTITLE_FIELD_NUMBER: int
    CONTENT_FIELD_NUMBER: int
    LINKURL_FIELD_NUMBER: int
    BLACKSTRIPE_FIELD_NUMBER: int
    NOTICE_FIELD_NUMBER: int
    TITLECOLOR_FIELD_NUMBER: int
    SUBTITLECOLOR_FIELD_NUMBER: int
    ACTIONSPRIORITY_FIELD_NUMBER: int
    JUMPURL_FIELD_NUMBER: int
    NATIVEIOS_FIELD_NUMBER: int
    NATIVEANDROID_FIELD_NUMBER: int
    ICONURL_FIELD_NUMBER: int
    CONTENTCOLOR_FIELD_NUMBER: int
    CONTENTBGCOLOR_FIELD_NUMBER: int
    AIOIMAGELEFT_FIELD_NUMBER: int
    AIOIMAGERIGHT_FIELD_NUMBER: int
    CFTIMAGE_FIELD_NUMBER: int
    PBRESERVE_FIELD_NUMBER: int
    background: int = ...
    icon: int = ...
    title: bytes = ...
    subtitle: bytes = ...
    content: bytes = ...
    linkurl: bytes = ...
    blackstripe: bytes = ...
    notice: bytes = ...
    titleColor: int = ...
    subtitleColor: int = ...
    actionsPriority: bytes = ...
    jumpUrl: bytes = ...
    nativeIos: bytes = ...
    nativeAndroid: bytes = ...
    iconurl: bytes = ...
    contentColor: int = ...
    contentBgcolor: int = ...
    aioImageLeft: bytes = ...
    aioImageRight: bytes = ...
    cftImage: bytes = ...
    pbReserve: bytes = ...

    def __init__(self,
        *,
        background : Optional[int] = ...,
        icon : Optional[int] = ...,
        title : Optional[bytes] = ...,
        subtitle : Optional[bytes] = ...,
        content : Optional[bytes] = ...,
        linkurl : Optional[bytes] = ...,
        blackstripe : Optional[bytes] = ...,
        notice : Optional[bytes] = ...,
        titleColor : Optional[int] = ...,
        subtitleColor : Optional[int] = ...,
        actionsPriority : Optional[bytes] = ...,
        jumpUrl : Optional[bytes] = ...,
        nativeIos : Optional[bytes] = ...,
        nativeAndroid : Optional[bytes] = ...,
        iconurl : Optional[bytes] = ...,
        contentColor : Optional[int] = ...,
        contentBgcolor : Optional[int] = ...,
        aioImageLeft : Optional[bytes] = ...,
        aioImageRight : Optional[bytes] = ...,
        cftImage : Optional[bytes] = ...,
        pbReserve : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"actionsPriority",b"actionsPriority",u"aioImageLeft",b"aioImageLeft",u"aioImageRight",b"aioImageRight",u"background",b"background",u"blackstripe",b"blackstripe",u"cftImage",b"cftImage",u"content",b"content",u"contentBgcolor",b"contentBgcolor",u"contentColor",b"contentColor",u"icon",b"icon",u"iconurl",b"iconurl",u"jumpUrl",b"jumpUrl",u"linkurl",b"linkurl",u"nativeAndroid",b"nativeAndroid",u"nativeIos",b"nativeIos",u"notice",b"notice",u"pbReserve",b"pbReserve",u"subtitle",b"subtitle",u"subtitleColor",b"subtitleColor",u"title",b"title",u"titleColor",b"titleColor"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"actionsPriority",b"actionsPriority",u"aioImageLeft",b"aioImageLeft",u"aioImageRight",b"aioImageRight",u"background",b"background",u"blackstripe",b"blackstripe",u"cftImage",b"cftImage",u"content",b"content",u"contentBgcolor",b"contentBgcolor",u"contentColor",b"contentColor",u"icon",b"icon",u"iconurl",b"iconurl",u"jumpUrl",b"jumpUrl",u"linkurl",b"linkurl",u"nativeAndroid",b"nativeAndroid",u"nativeIos",b"nativeIos",u"notice",b"notice",u"pbReserve",b"pbReserve",u"subtitle",b"subtitle",u"subtitleColor",b"subtitleColor",u"title",b"title",u"titleColor",b"titleColor"]) -> None: ...

class QQWalletMsg(Message):
    DESCRIPTOR: Descriptor = ...
    AIOBODY_FIELD_NUMBER: int

    @property
    def aioBody(self) -> QQWalletAioBody: ...

    def __init__(self,
        *,
        aioBody : Optional[QQWalletAioBody] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"aioBody",b"aioBody"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"aioBody",b"aioBody"]) -> None: ...

class RedBagInfo(Message):
    DESCRIPTOR: Descriptor = ...
    REDBAGTYPE_FIELD_NUMBER: int
    redbagType: int = ...

    def __init__(self,
        *,
        redbagType : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"redbagType",b"redbagType"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"redbagType",b"redbagType"]) -> None: ...

class RichMsg(Message):
    DESCRIPTOR: Descriptor = ...
    TEMPLATE_1_FIELD_NUMBER: int
    SERVICEID_FIELD_NUMBER: int
    MSGRESID_FIELD_NUMBER: int
    RAND_FIELD_NUMBER: int
    SEQ_FIELD_NUMBER: int
    FLAGS_FIELD_NUMBER: int
    template_1: bytes = ...
    serviceId: int = ...
    msgResid: bytes = ...
    rand: int = ...
    seq: int = ...
    flags: int = ...

    def __init__(self,
        *,
        template_1 : Optional[bytes] = ...,
        serviceId : Optional[int] = ...,
        msgResid : Optional[bytes] = ...,
        rand : Optional[int] = ...,
        seq : Optional[int] = ...,
        flags : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"flags",b"flags",u"msgResid",b"msgResid",u"rand",b"rand",u"seq",b"seq",u"serviceId",b"serviceId",u"template_1",b"template_1"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"flags",b"flags",u"msgResid",b"msgResid",u"rand",b"rand",u"seq",b"seq",u"serviceId",b"serviceId",u"template_1",b"template_1"]) -> None: ...

class RichText(Message):
    DESCRIPTOR: Descriptor = ...
    ATTR_FIELD_NUMBER: int
    ELEMS_FIELD_NUMBER: int
    NOTONLINEFILE_FIELD_NUMBER: int
    PTT_FIELD_NUMBER: int
    TMPPTT_FIELD_NUMBER: int
    TRANS_211TMPMSG_FIELD_NUMBER: int

    @property
    def attr(self) -> Attr: ...

    @property
    def elems(self) -> RepeatedCompositeFieldContainer[Elem]: ...

    @property
    def notOnlineFile(self) -> NotOnlineFile: ...

    @property
    def ptt(self) -> Ptt: ...

    @property
    def tmpPtt(self) -> TmpPtt: ...

    @property
    def trans_211TmpMsg(self) -> Trans211TmpMsg: ...

    def __init__(self,
        *,
        attr : Optional[Attr] = ...,
        elems : Optional[Iterable[Elem]] = ...,
        notOnlineFile : Optional[NotOnlineFile] = ...,
        ptt : Optional[Ptt] = ...,
        tmpPtt : Optional[TmpPtt] = ...,
        trans_211TmpMsg : Optional[Trans211TmpMsg] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"attr",b"attr",u"notOnlineFile",b"notOnlineFile",u"ptt",b"ptt",u"tmpPtt",b"tmpPtt",u"trans_211TmpMsg",b"trans_211TmpMsg"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"attr",b"attr",u"elems",b"elems",u"notOnlineFile",b"notOnlineFile",u"ptt",b"ptt",u"tmpPtt",b"tmpPtt",u"trans_211TmpMsg",b"trans_211TmpMsg"]) -> None: ...

class SecretFileMsg(Message):
    DESCRIPTOR: Descriptor = ...
    FILEKEY_FIELD_NUMBER: int
    FROMUIN_FIELD_NUMBER: int
    TOUIN_FIELD_NUMBER: int
    STATUS_FIELD_NUMBER: int
    TTL_FIELD_NUMBER: int
    TYPE_FIELD_NUMBER: int
    ENCRYPTPREHEADLENGTH_FIELD_NUMBER: int
    ENCRYPTTYPE_FIELD_NUMBER: int
    ENCRYPTKEY_FIELD_NUMBER: int
    READTIMES_FIELD_NUMBER: int
    LEFTTIME_FIELD_NUMBER: int
    NOTONLINEIMAGE_FIELD_NUMBER: int
    ELEMFLAGS2_FIELD_NUMBER: int
    OPERTYPE_FIELD_NUMBER: int
    FROMPHONENUM_FIELD_NUMBER: int
    fileKey: bytes = ...
    fromUin: int = ...
    toUin: int = ...
    status: int = ...
    ttl: int = ...
    type: int = ...
    encryptPreheadLength: int = ...
    encryptType: int = ...
    encryptKey: bytes = ...
    readTimes: int = ...
    leftTime: int = ...
    opertype: int = ...
    fromphonenum: Text = ...

    @property
    def notOnlineImage(self) -> NotOnlineImage: ...

    @property
    def elemFlags2(self) -> ElemFlags2: ...

    def __init__(self,
        *,
        fileKey : Optional[bytes] = ...,
        fromUin : Optional[int] = ...,
        toUin : Optional[int] = ...,
        status : Optional[int] = ...,
        ttl : Optional[int] = ...,
        type : Optional[int] = ...,
        encryptPreheadLength : Optional[int] = ...,
        encryptType : Optional[int] = ...,
        encryptKey : Optional[bytes] = ...,
        readTimes : Optional[int] = ...,
        leftTime : Optional[int] = ...,
        notOnlineImage : Optional[NotOnlineImage] = ...,
        elemFlags2 : Optional[ElemFlags2] = ...,
        opertype : Optional[int] = ...,
        fromphonenum : Optional[Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"elemFlags2",b"elemFlags2",u"encryptKey",b"encryptKey",u"encryptPreheadLength",b"encryptPreheadLength",u"encryptType",b"encryptType",u"fileKey",b"fileKey",u"fromUin",b"fromUin",u"fromphonenum",b"fromphonenum",u"leftTime",b"leftTime",u"notOnlineImage",b"notOnlineImage",u"opertype",b"opertype",u"readTimes",b"readTimes",u"status",b"status",u"toUin",b"toUin",u"ttl",b"ttl",u"type",b"type"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"elemFlags2",b"elemFlags2",u"encryptKey",b"encryptKey",u"encryptPreheadLength",b"encryptPreheadLength",u"encryptType",b"encryptType",u"fileKey",b"fileKey",u"fromUin",b"fromUin",u"fromphonenum",b"fromphonenum",u"leftTime",b"leftTime",u"notOnlineImage",b"notOnlineImage",u"opertype",b"opertype",u"readTimes",b"readTimes",u"status",b"status",u"toUin",b"toUin",u"ttl",b"ttl",u"type",b"type"]) -> None: ...

class ShakeWindow(Message):
    DESCRIPTOR: Descriptor = ...
    TYPE_FIELD_NUMBER: int
    RESERVE_FIELD_NUMBER: int
    UIN_FIELD_NUMBER: int
    type: int = ...
    reserve: int = ...
    uin: int = ...

    def __init__(self,
        *,
        type : Optional[int] = ...,
        reserve : Optional[int] = ...,
        uin : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"reserve",b"reserve",u"type",b"type",u"uin",b"uin"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"reserve",b"reserve",u"type",b"type",u"uin",b"uin"]) -> None: ...

class SmallEmoji(Message):
    DESCRIPTOR: Descriptor = ...
    PACKIDSUM_FIELD_NUMBER: int
    IMAGETYPE_FIELD_NUMBER: int
    packIdSum: int = ...
    imageType: int = ...

    def __init__(self,
        *,
        packIdSum : Optional[int] = ...,
        imageType : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"imageType",b"imageType",u"packIdSum",b"packIdSum"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"imageType",b"imageType",u"packIdSum",b"packIdSum"]) -> None: ...

class SourceMsg(Message):
    DESCRIPTOR: Descriptor = ...
    ORIGSEQS_FIELD_NUMBER: int
    SENDERUIN_FIELD_NUMBER: int
    TIME_FIELD_NUMBER: int
    FLAG_FIELD_NUMBER: int
    ELEMS_FIELD_NUMBER: int
    TYPE_FIELD_NUMBER: int
    RICHMSG_FIELD_NUMBER: int
    PBRESERVE_FIELD_NUMBER: int
    SRCMSG_FIELD_NUMBER: int
    TOUIN_FIELD_NUMBER: int
    TROOPNAME_FIELD_NUMBER: int
    origSeqs: RepeatedScalarFieldContainer[int] = ...
    senderUin: int = ...
    time: int = ...
    flag: int = ...
    type: int = ...
    richMsg: bytes = ...
    pbReserve: bytes = ...
    srcMsg: bytes = ...
    toUin: int = ...
    troopName: bytes = ...

    @property
    def elems(self) -> RepeatedCompositeFieldContainer[Elem]: ...

    def __init__(self,
        *,
        origSeqs : Optional[Iterable[int]] = ...,
        senderUin : Optional[int] = ...,
        time : Optional[int] = ...,
        flag : Optional[int] = ...,
        elems : Optional[Iterable[Elem]] = ...,
        type : Optional[int] = ...,
        richMsg : Optional[bytes] = ...,
        pbReserve : Optional[bytes] = ...,
        srcMsg : Optional[bytes] = ...,
        toUin : Optional[int] = ...,
        troopName : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"flag",b"flag",u"pbReserve",b"pbReserve",u"richMsg",b"richMsg",u"senderUin",b"senderUin",u"srcMsg",b"srcMsg",u"time",b"time",u"toUin",b"toUin",u"troopName",b"troopName",u"type",b"type"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"elems",b"elems",u"flag",b"flag",u"origSeqs",b"origSeqs",u"pbReserve",b"pbReserve",u"richMsg",b"richMsg",u"senderUin",b"senderUin",u"srcMsg",b"srcMsg",u"time",b"time",u"toUin",b"toUin",u"troopName",b"troopName",u"type",b"type"]) -> None: ...

class Text(Message):
    DESCRIPTOR: Descriptor = ...
    STR_FIELD_NUMBER: int
    LINK_FIELD_NUMBER: int
    ATTR_6BUF_FIELD_NUMBER: int
    ATTR_7BUF_FIELD_NUMBER: int
    BUF_FIELD_NUMBER: int
    PBRESERVE_FIELD_NUMBER: int
    str: bytes = ...
    link: Text = ...
    attr_6Buf: bytes = ...
    attr_7Buf: bytes = ...
    buf: bytes = ...
    pbReserve: bytes = ...

    def __init__(self,
        *,
        str : Optional[bytes] = ...,
        link : Optional[Text] = ...,
        attr_6Buf : Optional[bytes] = ...,
        attr_7Buf : Optional[bytes] = ...,
        buf : Optional[bytes] = ...,
        pbReserve : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"attr_6Buf",b"attr_6Buf",u"attr_7Buf",b"attr_7Buf",u"buf",b"buf",u"link",b"link",u"pbReserve",b"pbReserve",u"str",b"str"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"attr_6Buf",b"attr_6Buf",u"attr_7Buf",b"attr_7Buf",u"buf",b"buf",u"link",b"link",u"pbReserve",b"pbReserve",u"str",b"str"]) -> None: ...

class TipsInfo(Message):
    DESCRIPTOR: Descriptor = ...
    TEXT_FIELD_NUMBER: int
    text: Text = ...

    def __init__(self,
        *,
        text : Optional[Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"text",b"text"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"text",b"text"]) -> None: ...

class TmpPtt(Message):
    DESCRIPTOR: Descriptor = ...
    FILETYPE_FIELD_NUMBER: int
    FILEUUID_FIELD_NUMBER: int
    FILEMD5_FIELD_NUMBER: int
    FILENAME_FIELD_NUMBER: int
    FILESIZE_FIELD_NUMBER: int
    PTTTIMES_FIELD_NUMBER: int
    USERTYPE_FIELD_NUMBER: int
    PTTTRANSFLAG_FIELD_NUMBER: int
    BUSITYPE_FIELD_NUMBER: int
    MSGID_FIELD_NUMBER: int
    PBRESERVE_FIELD_NUMBER: int
    PTTENCODEDATA_FIELD_NUMBER: int
    fileType: int = ...
    fileUuid: bytes = ...
    fileMd5: bytes = ...
    fileName: bytes = ...
    fileSize: int = ...
    pttTimes: int = ...
    userType: int = ...
    ptttransFlag: int = ...
    busiType: int = ...
    msgId: int = ...
    pbReserve: bytes = ...
    pttEncodeData: bytes = ...

    def __init__(self,
        *,
        fileType : Optional[int] = ...,
        fileUuid : Optional[bytes] = ...,
        fileMd5 : Optional[bytes] = ...,
        fileName : Optional[bytes] = ...,
        fileSize : Optional[int] = ...,
        pttTimes : Optional[int] = ...,
        userType : Optional[int] = ...,
        ptttransFlag : Optional[int] = ...,
        busiType : Optional[int] = ...,
        msgId : Optional[int] = ...,
        pbReserve : Optional[bytes] = ...,
        pttEncodeData : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"busiType",b"busiType",u"fileMd5",b"fileMd5",u"fileName",b"fileName",u"fileSize",b"fileSize",u"fileType",b"fileType",u"fileUuid",b"fileUuid",u"msgId",b"msgId",u"pbReserve",b"pbReserve",u"pttEncodeData",b"pttEncodeData",u"pttTimes",b"pttTimes",u"ptttransFlag",b"ptttransFlag",u"userType",b"userType"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"busiType",b"busiType",u"fileMd5",b"fileMd5",u"fileName",b"fileName",u"fileSize",b"fileSize",u"fileType",b"fileType",u"fileUuid",b"fileUuid",u"msgId",b"msgId",u"pbReserve",b"pbReserve",u"pttEncodeData",b"pttEncodeData",u"pttTimes",b"pttTimes",u"ptttransFlag",b"ptttransFlag",u"userType",b"userType"]) -> None: ...

class Trans211TmpMsg(Message):
    DESCRIPTOR: Descriptor = ...
    MSGBODY_FIELD_NUMBER: int
    C2CCMD_FIELD_NUMBER: int
    msgBody: bytes = ...
    c2CCmd: int = ...

    def __init__(self,
        *,
        msgBody : Optional[bytes] = ...,
        c2CCmd : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"c2CCmd",b"c2CCmd",u"msgBody",b"msgBody"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"c2CCmd",b"c2CCmd",u"msgBody",b"msgBody"]) -> None: ...

class TransElem(Message):
    DESCRIPTOR: Descriptor = ...
    ELEMTYPE_FIELD_NUMBER: int
    ELEMVALUE_FIELD_NUMBER: int
    elemType: int = ...
    elemValue: bytes = ...

    def __init__(self,
        *,
        elemType : Optional[int] = ...,
        elemValue : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"elemType",b"elemType",u"elemValue",b"elemValue"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"elemType",b"elemType",u"elemValue",b"elemValue"]) -> None: ...

class VideoFile(Message):
    DESCRIPTOR: Descriptor = ...
    FILEUUID_FIELD_NUMBER: int
    FILEMD5_FIELD_NUMBER: int
    FILENAME_FIELD_NUMBER: int
    FILEFORMAT_FIELD_NUMBER: int
    FILETIME_FIELD_NUMBER: int
    FILESIZE_FIELD_NUMBER: int
    THUMBWIDTH_FIELD_NUMBER: int
    THUMBHEIGHT_FIELD_NUMBER: int
    THUMBFILEMD5_FIELD_NUMBER: int
    SOURCE_FIELD_NUMBER: int
    THUMBFILESIZE_FIELD_NUMBER: int
    BUSITYPE_FIELD_NUMBER: int
    FROMCHATTYPE_FIELD_NUMBER: int
    TOCHATTYPE_FIELD_NUMBER: int
    SUPPORTPROGRESSIVE_FIELD_NUMBER: int
    FILEWIDTH_FIELD_NUMBER: int
    FILEHEIGHT_FIELD_NUMBER: int
    SUBBUSITYPE_FIELD_NUMBER: int
    VIDEOATTR_FIELD_NUMBER: int
    THUMBFILEURLS_FIELD_NUMBER: int
    VIDEOFILEURLS_FIELD_NUMBER: int
    THUMBDOWNLOADFLAG_FIELD_NUMBER: int
    VIDEODOWNLOADFLAG_FIELD_NUMBER: int
    PBRESERVE_FIELD_NUMBER: int
    fileUuid: bytes = ...
    fileMd5: bytes = ...
    fileName: bytes = ...
    fileFormat: int = ...
    fileTime: int = ...
    fileSize: int = ...
    thumbWidth: int = ...
    thumbHeight: int = ...
    thumbFileMd5: bytes = ...
    source: bytes = ...
    thumbFileSize: int = ...
    busiType: int = ...
    fromChatType: int = ...
    toChatType: int = ...
    supportProgressive: bool = ...
    fileWidth: int = ...
    fileHeight: int = ...
    subBusiType: int = ...
    videoAttr: int = ...
    thumbFileUrls: RepeatedScalarFieldContainer[bytes] = ...
    videoFileUrls: RepeatedScalarFieldContainer[bytes] = ...
    thumbDownloadFlag: int = ...
    videoDownloadFlag: int = ...
    pbReserve: bytes = ...

    def __init__(self,
        *,
        fileUuid : Optional[bytes] = ...,
        fileMd5 : Optional[bytes] = ...,
        fileName : Optional[bytes] = ...,
        fileFormat : Optional[int] = ...,
        fileTime : Optional[int] = ...,
        fileSize : Optional[int] = ...,
        thumbWidth : Optional[int] = ...,
        thumbHeight : Optional[int] = ...,
        thumbFileMd5 : Optional[bytes] = ...,
        source : Optional[bytes] = ...,
        thumbFileSize : Optional[int] = ...,
        busiType : Optional[int] = ...,
        fromChatType : Optional[int] = ...,
        toChatType : Optional[int] = ...,
        supportProgressive : Optional[bool] = ...,
        fileWidth : Optional[int] = ...,
        fileHeight : Optional[int] = ...,
        subBusiType : Optional[int] = ...,
        videoAttr : Optional[int] = ...,
        thumbFileUrls : Optional[Iterable[bytes]] = ...,
        videoFileUrls : Optional[Iterable[bytes]] = ...,
        thumbDownloadFlag : Optional[int] = ...,
        videoDownloadFlag : Optional[int] = ...,
        pbReserve : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"busiType",b"busiType",u"fileFormat",b"fileFormat",u"fileHeight",b"fileHeight",u"fileMd5",b"fileMd5",u"fileName",b"fileName",u"fileSize",b"fileSize",u"fileTime",b"fileTime",u"fileUuid",b"fileUuid",u"fileWidth",b"fileWidth",u"fromChatType",b"fromChatType",u"pbReserve",b"pbReserve",u"source",b"source",u"subBusiType",b"subBusiType",u"supportProgressive",b"supportProgressive",u"thumbDownloadFlag",b"thumbDownloadFlag",u"thumbFileMd5",b"thumbFileMd5",u"thumbFileSize",b"thumbFileSize",u"thumbHeight",b"thumbHeight",u"thumbWidth",b"thumbWidth",u"toChatType",b"toChatType",u"videoAttr",b"videoAttr",u"videoDownloadFlag",b"videoDownloadFlag"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"busiType",b"busiType",u"fileFormat",b"fileFormat",u"fileHeight",b"fileHeight",u"fileMd5",b"fileMd5",u"fileName",b"fileName",u"fileSize",b"fileSize",u"fileTime",b"fileTime",u"fileUuid",b"fileUuid",u"fileWidth",b"fileWidth",u"fromChatType",b"fromChatType",u"pbReserve",b"pbReserve",u"source",b"source",u"subBusiType",b"subBusiType",u"supportProgressive",b"supportProgressive",u"thumbDownloadFlag",b"thumbDownloadFlag",u"thumbFileMd5",b"thumbFileMd5",u"thumbFileSize",b"thumbFileSize",u"thumbFileUrls",b"thumbFileUrls",u"thumbHeight",b"thumbHeight",u"thumbWidth",b"thumbWidth",u"toChatType",b"toChatType",u"videoAttr",b"videoAttr",u"videoDownloadFlag",b"videoDownloadFlag",u"videoFileUrls",b"videoFileUrls"]) -> None: ...

class WorkflowNotifyMsg(Message):
    DESCRIPTOR: Descriptor = ...
    EXTMSG_FIELD_NUMBER: int
    CREATEUIN_FIELD_NUMBER: int
    extMsg: bytes = ...
    createUin: int = ...

    def __init__(self,
        *,
        extMsg : Optional[bytes] = ...,
        createUin : Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"createUin",b"createUin",u"extMsg",b"extMsg"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"createUin",b"createUin",u"extMsg",b"extMsg"]) -> None: ...

class LocationInfo(Message):
    DESCRIPTOR: Descriptor = ...
    LONGITUDE_FIELD_NUMBER: int
    LATITUDE_FIELD_NUMBER: int
    DESC_FIELD_NUMBER: int
    longitude: float = ...
    latitude: float = ...
    desc: bytes = ...

    def __init__(self,
        *,
        longitude : Optional[float] = ...,
        latitude : Optional[float] = ...,
        desc : Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"desc",b"desc",u"latitude",b"latitude",u"longitude",b"longitude"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"desc",b"desc",u"latitude",b"latitude",u"longitude",b"longitude"]) -> None: ...
